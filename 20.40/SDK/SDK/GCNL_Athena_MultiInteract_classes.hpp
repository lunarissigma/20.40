#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_Athena_MultiInteract

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCNL_Athena_MultiInteract.GCNL_Athena_MultiInteract_C
// 0x0080 (0x09C8 - 0x0948)
class AGCNL_Athena_MultiInteract_C final : public AFortGameplayCueNotify_Loop
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0948(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio;                                             // 0x0950(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentPitch;                                      // 0x0958(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetPitch;                                       // 0x095C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, float>                            Pitch_Map;                                         // 0x0960(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         PreviousPitch;                                     // 0x09B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B4[0x4];                                      // 0x09B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TargetProgressHandle;                              // 0x09B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class APlayerPawn_Athena_C*                   Effect_Causer_Pawn;                                // 0x09C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CheckTargetProgress();
	void ExecuteUbergraph_GCNL_Athena_MultiInteract(int32 EntryPoint);
	void OnActorCountChanged(int32 InteractingActorCount, float MultiInteractMultiplier, float InteractingDuration);
	void OnApplicationGeneric(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UFXSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class UMatineeCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void OnLoopingStartGeneric(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UFXSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents);
	void OnRemovalGeneric(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UFXSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class UMatineeCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCNL_Athena_MultiInteract_C">();
	}
	static class AGCNL_Athena_MultiInteract_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCNL_Athena_MultiInteract_C>();
	}
};
static_assert(alignof(AGCNL_Athena_MultiInteract_C) == 0x000008, "Wrong alignment on AGCNL_Athena_MultiInteract_C");
static_assert(sizeof(AGCNL_Athena_MultiInteract_C) == 0x0009C8, "Wrong size on AGCNL_Athena_MultiInteract_C");
static_assert(offsetof(AGCNL_Athena_MultiInteract_C, UberGraphFrame) == 0x000948, "Member 'AGCNL_Athena_MultiInteract_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_MultiInteract_C, Audio) == 0x000950, "Member 'AGCNL_Athena_MultiInteract_C::Audio' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_MultiInteract_C, CurrentPitch) == 0x000958, "Member 'AGCNL_Athena_MultiInteract_C::CurrentPitch' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_MultiInteract_C, TargetPitch) == 0x00095C, "Member 'AGCNL_Athena_MultiInteract_C::TargetPitch' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_MultiInteract_C, Pitch_Map) == 0x000960, "Member 'AGCNL_Athena_MultiInteract_C::Pitch_Map' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_MultiInteract_C, PreviousPitch) == 0x0009B0, "Member 'AGCNL_Athena_MultiInteract_C::PreviousPitch' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_MultiInteract_C, TargetProgressHandle) == 0x0009B8, "Member 'AGCNL_Athena_MultiInteract_C::TargetProgressHandle' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_MultiInteract_C, Effect_Causer_Pawn) == 0x0009C0, "Member 'AGCNL_Athena_MultiInteract_C::Effect_Causer_Pawn' has a wrong offset!");

}

