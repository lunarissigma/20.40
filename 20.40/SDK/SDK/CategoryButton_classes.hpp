#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CategoryButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"
#include "FortniteUI_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CategoryButton.CategoryButton_C
// 0x0070 (0x1010 - 0x0FA0)
class UCategoryButton_C final : public UCommonButtonBase
{
public:
	uint8                                         Pad_F98[0x8];                                      // 0x0F98(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0FA0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Reset;                                             // 0x0FA8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Dim;                                               // 0x0FB0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnSelect;                                          // 0x0FB8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnHoverUnselected;                                 // 0x0FC0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnHover;                                           // 0x0FC8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UFortMobileImage*                       Image_ActiveIcon;                                  // 0x0FD0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Dim;                                         // 0x0FD8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_disabled;                                    // 0x0FE0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             NamedSlot_Icon;                                    // 0x0FE8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichText_Title;                                    // 0x0FF0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone;                                          // 0x0FF8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsSelected;                                        // 0x1000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Hovered;                                        // 0x1001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_OnDeselected();
	void BP_OnHovered();
	void BP_OnSelected();
	void BP_OnUnhovered();
	void BP_Populate(const class FText& Title, const EQuestCategoryButtonTimerState TimerState);
	void Construct();
	void Darken();
	void ExecuteUbergraph_CategoryButton(int32 EntryPoint);
	void Lighten();
	void SetHovered(bool IsHovered_0);
	void SetSelected(bool IsSelected_0);
	void SetTitleText(const class FText& TitleText);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CategoryButton_C">();
	}
	static class UCategoryButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCategoryButton_C>();
	}
};
static_assert(alignof(UCategoryButton_C) == 0x000010, "Wrong alignment on UCategoryButton_C");
static_assert(sizeof(UCategoryButton_C) == 0x001010, "Wrong size on UCategoryButton_C");
static_assert(offsetof(UCategoryButton_C, UberGraphFrame) == 0x000FA0, "Member 'UCategoryButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, Reset) == 0x000FA8, "Member 'UCategoryButton_C::Reset' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, Dim) == 0x000FB0, "Member 'UCategoryButton_C::Dim' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, OnSelect) == 0x000FB8, "Member 'UCategoryButton_C::OnSelect' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, OnHoverUnselected) == 0x000FC0, "Member 'UCategoryButton_C::OnHoverUnselected' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, OnHover) == 0x000FC8, "Member 'UCategoryButton_C::OnHover' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, Image_ActiveIcon) == 0x000FD0, "Member 'UCategoryButton_C::Image_ActiveIcon' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, Image_Dim) == 0x000FD8, "Member 'UCategoryButton_C::Image_Dim' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, Image_disabled) == 0x000FE0, "Member 'UCategoryButton_C::Image_disabled' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, NamedSlot_Icon) == 0x000FE8, "Member 'UCategoryButton_C::NamedSlot_Icon' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, RichText_Title) == 0x000FF0, "Member 'UCategoryButton_C::RichText_Title' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, SafeZone) == 0x000FF8, "Member 'UCategoryButton_C::SafeZone' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, IsSelected) == 0x001000, "Member 'UCategoryButton_C::IsSelected' has a wrong offset!");
static_assert(offsetof(UCategoryButton_C, Is_Hovered) == 0x001001, "Member 'UCategoryButton_C::Is_Hovered' has a wrong offset!");

}

