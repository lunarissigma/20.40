#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ArmadilloPlayerStateComponent

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ArmadilloPlayerStateComponent.BP_ArmadilloPlayerStateComponent_C
// 0x02E0 (0x0380 - 0x00A0)
class UBP_ArmadilloPlayerStateComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         PlayerIndex;                                       // 0x00A8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(int32 PlayerIndex)> OnPlayerIndexChanged;                          // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         InvalidIndex;                                      // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerStateAthena*>         EventRelevantPlayerStates;                         // 0x00C8(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance, RepNotify)
	class AFortPlayerStateAthena*                 OwningPlayerState;                                 // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIndexLocked;                                      // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class UBP_ArmadilloPlayerStateComponent_C* PlayerStateComponent)> OnEventRelevantPlayerStatesUpdated; // 0x00E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bIsInHUDGameplay;                                  // 0x00F8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool bIsInHUDGameplay)> OnIsInHUDGameplayChanged;                  // 0x0100(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(float DamageDealt)> OnPlayerDealtDamageShooterGameplay;            // 0x0110(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnQTEStarted;                                      // 0x0120(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(class ABP_QTM_Manager_C* InQTM)> OnQTMInitialized;                 // 0x0130(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ABP_QTM_Manager_C*                      ClientQTM;                                         // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(bool bIsVisible, bool bShouldAnimateIntro)> OnRequestHUDVisibility; // 0x0148(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          TogglePlayerVisibility;                            // 0x0158(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnRequestTargetZoomTransition;                     // 0x0160(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(bool bMessageBroadcasting)> OnHUDJonesyMessage;                    // 0x0170(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          BroadcastingJonesy;                                // 0x0180(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnOvercharged;                                     // 0x0188(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bIsOverCharged;                                    // 0x0198(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSystemsCritical;                                  // 0x0199(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A[0x6];                                      // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(bool bIsCritical)> OnSystemsCriticalChanged;                       // 0x01A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FFortAthenaLoadout                     CosmeticLoadout;                                   // 0x01B0(0x0160)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	TMulticastInlineDelegate<void(const struct FFortAthenaLoadout& Loadout)> OnCosmeticLoadoutChanged; // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(bool MainEventStarted)> OnMainEventStartedChanged;                 // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bMainEventStarted;                                 // 0x0330(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class ABP_Armadillo_PreEventManager_C> PreEventManagerSoftRef;                    // 0x0338(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class ABP_Armadillo_PreEventManager_C*        PreEventManager;                                   // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AArmadillo_Mutator_SpecialEvent_C*      SpecialEventMutator;                               // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LastWeapon;                                        // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayerIsInSpace;                                  // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStopGCN;                                          // 0x0379(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ClientSetDamageDealt(float DamageDealt);
	void ExecuteUbergraph_BP_ArmadilloPlayerStateComponent(int32 EntryPoint);
	void GetIsInHUDGameplay(bool* bIsInHUDGameplay_0);
	void HandlePawnSet(class APlayerState* Player, class APawn* NewPawn, class APawn* OldPawn);
	void HandlePlayerStateLogout(class APlayerState* PlayerState);
	void HandleSpecialEventMutatorFound(class AArmadillo_Mutator_SpecialEvent_C* Mutator);
	void InitializeHUDForQTM(class ABP_QTM_Manager_C* InQTM);
	void OnMainEventStarted();
	void OnReady_2B33366D49358E38337606AF0BD2156B(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void OnRep_bIsInHUDGameplay();
	void OnRep_bMainEventStarted();
	void OnRep_CosmeticLoadout();
	void OnRep_EventRelevantPlayerStates();
	void OnRep_PlayerIndex();
	void OnRep_TogglePlayerVisibility();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void RequestHUDVisibility(bool bShouldBeVisible, bool bShouldAnimateIntro);
	void RequestZoomTargetTransition();
	void ResetPlayerIndex();
	void ServerTogglePlayerVisibility(bool IsPlayerVisible);
	void ServerTogglePlayerVisibilityWithDelay(float Delay, bool IsPlayerVisible);
	void SetCosmeticLoadout(const struct FFortAthenaLoadout& InCosmeticLoadout);
	void SetEventRelevantPlayerStates(TArray<class AFortPlayerPawn*>& RelevantPlayerPawns);
	void SetIsInHUDGameplay(bool bIsInHUDGameplay_0);
	void SetPlayerIndex(int32 PlayerIndex_0, bool bLockIndex);
	void SignalOverCharged();
	void SignalQTEStart();
	void SignalSystemsCriticalChanged(bool bIsCritical);
	void SimulatePlayerStateDisconnect();
	void StartJonesyHUDMessage();
	void StopJonesyHUDMessage();
	void UpdateEventRelevantPlayerStatesOnDestroy();

	void GetCosmeticLoadout(struct FFortAthenaLoadout* Value) const;
	void GetEventRelevantPlayerStates(TArray<class AFortPlayerStateAthena*>* PlayerStates) const;
	void GetOwningPlayerName(class FString* Name_0) const;
	void GetPlayerIndex(int32* Index_0) const;
	void HasValidPlayerIndex(bool* bValid) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ArmadilloPlayerStateComponent_C">();
	}
	static class UBP_ArmadilloPlayerStateComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ArmadilloPlayerStateComponent_C>();
	}
};
static_assert(alignof(UBP_ArmadilloPlayerStateComponent_C) == 0x000008, "Wrong alignment on UBP_ArmadilloPlayerStateComponent_C");
static_assert(sizeof(UBP_ArmadilloPlayerStateComponent_C) == 0x000380, "Wrong size on UBP_ArmadilloPlayerStateComponent_C");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_ArmadilloPlayerStateComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, PlayerIndex) == 0x0000A8, "Member 'UBP_ArmadilloPlayerStateComponent_C::PlayerIndex' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, OnPlayerIndexChanged) == 0x0000B0, "Member 'UBP_ArmadilloPlayerStateComponent_C::OnPlayerIndexChanged' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, InvalidIndex) == 0x0000C0, "Member 'UBP_ArmadilloPlayerStateComponent_C::InvalidIndex' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, EventRelevantPlayerStates) == 0x0000C8, "Member 'UBP_ArmadilloPlayerStateComponent_C::EventRelevantPlayerStates' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, OwningPlayerState) == 0x0000D8, "Member 'UBP_ArmadilloPlayerStateComponent_C::OwningPlayerState' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, bIndexLocked) == 0x0000E0, "Member 'UBP_ArmadilloPlayerStateComponent_C::bIndexLocked' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, OnEventRelevantPlayerStatesUpdated) == 0x0000E8, "Member 'UBP_ArmadilloPlayerStateComponent_C::OnEventRelevantPlayerStatesUpdated' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, bIsInHUDGameplay) == 0x0000F8, "Member 'UBP_ArmadilloPlayerStateComponent_C::bIsInHUDGameplay' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, OnIsInHUDGameplayChanged) == 0x000100, "Member 'UBP_ArmadilloPlayerStateComponent_C::OnIsInHUDGameplayChanged' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, OnPlayerDealtDamageShooterGameplay) == 0x000110, "Member 'UBP_ArmadilloPlayerStateComponent_C::OnPlayerDealtDamageShooterGameplay' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, OnQTEStarted) == 0x000120, "Member 'UBP_ArmadilloPlayerStateComponent_C::OnQTEStarted' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, OnQTMInitialized) == 0x000130, "Member 'UBP_ArmadilloPlayerStateComponent_C::OnQTMInitialized' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, ClientQTM) == 0x000140, "Member 'UBP_ArmadilloPlayerStateComponent_C::ClientQTM' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, OnRequestHUDVisibility) == 0x000148, "Member 'UBP_ArmadilloPlayerStateComponent_C::OnRequestHUDVisibility' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, TogglePlayerVisibility) == 0x000158, "Member 'UBP_ArmadilloPlayerStateComponent_C::TogglePlayerVisibility' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, OnRequestTargetZoomTransition) == 0x000160, "Member 'UBP_ArmadilloPlayerStateComponent_C::OnRequestTargetZoomTransition' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, OnHUDJonesyMessage) == 0x000170, "Member 'UBP_ArmadilloPlayerStateComponent_C::OnHUDJonesyMessage' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, BroadcastingJonesy) == 0x000180, "Member 'UBP_ArmadilloPlayerStateComponent_C::BroadcastingJonesy' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, OnOvercharged) == 0x000188, "Member 'UBP_ArmadilloPlayerStateComponent_C::OnOvercharged' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, bIsOverCharged) == 0x000198, "Member 'UBP_ArmadilloPlayerStateComponent_C::bIsOverCharged' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, bSystemsCritical) == 0x000199, "Member 'UBP_ArmadilloPlayerStateComponent_C::bSystemsCritical' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, OnSystemsCriticalChanged) == 0x0001A0, "Member 'UBP_ArmadilloPlayerStateComponent_C::OnSystemsCriticalChanged' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, CosmeticLoadout) == 0x0001B0, "Member 'UBP_ArmadilloPlayerStateComponent_C::CosmeticLoadout' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, OnCosmeticLoadoutChanged) == 0x000310, "Member 'UBP_ArmadilloPlayerStateComponent_C::OnCosmeticLoadoutChanged' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, OnMainEventStartedChanged) == 0x000320, "Member 'UBP_ArmadilloPlayerStateComponent_C::OnMainEventStartedChanged' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, bMainEventStarted) == 0x000330, "Member 'UBP_ArmadilloPlayerStateComponent_C::bMainEventStarted' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, PreEventManagerSoftRef) == 0x000338, "Member 'UBP_ArmadilloPlayerStateComponent_C::PreEventManagerSoftRef' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, PreEventManager) == 0x000360, "Member 'UBP_ArmadilloPlayerStateComponent_C::PreEventManager' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, SpecialEventMutator) == 0x000368, "Member 'UBP_ArmadilloPlayerStateComponent_C::SpecialEventMutator' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, LastWeapon) == 0x000370, "Member 'UBP_ArmadilloPlayerStateComponent_C::LastWeapon' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, bPlayerIsInSpace) == 0x000378, "Member 'UBP_ArmadilloPlayerStateComponent_C::bPlayerIsInSpace' has a wrong offset!");
static_assert(offsetof(UBP_ArmadilloPlayerStateComponent_C, bStopGCN) == 0x000379, "Member 'UBP_ArmadilloPlayerStateComponent_C::bStopGCN' has a wrong offset!");

}

