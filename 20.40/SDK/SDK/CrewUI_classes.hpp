#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CrewUI

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "CoreUObject_classes.hpp"
#include "CrewUI_structs.hpp"
#include "CommonUI_classes.hpp"
#include "GameSubCatalog_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// Class CrewUI.CrewPurchaseScreen
// 0x01B0 (0x05A8 - 0x03F8)
class UCrewPurchaseScreen : public UCMSBackgroundWidget
{
public:
	uint8                                         Pad_3F8[0x88];                                     // 0x03F8(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bManagementModeEnabled;                            // 0x0480(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                FocusWidget;                                       // 0x0488(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonGroupBase*                 ButtonGroup_BenefitsTiles;                         // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   CancellationInfoModalClass;                        // 0x0498(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   LegalInfoModalClass;                               // 0x04C0(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   ResolveIssueModalClass;                            // 0x04E8(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   RejoinModalClass;                                  // 0x0510(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_ToBattlePass;                               // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBattlePassCrewPurchaseButton*          Button_Purchase;                                   // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBattlePassCrewPurchaseButton*          Button_Rejoin;                                     // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_ResolvePayment;                             // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_WatchTrailer;                               // 0x0558(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_Terms;                                      // 0x0560(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_CancellationInfo;                           // 0x0568(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDynamicEntryBox*                       EntryBox_RecurringRewards;                         // 0x0570(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDynamicEntryBox*                       EntryBox_LimitedTimeRewards;                       // 0x0578(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCrewTileDetails*                       Details_CurrentCrewTile;                           // 0x0580(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_LimitedTime;                                  // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_UserInformation;                           // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_UserInformation;                              // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_CrewDisclaimer;                               // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BeginProgress(const class FText& ProgressLabel);
	void EndProgress();
	void OnContainerTabVisibilityUpdated(const bool bTabsVisible, const float SpacingAdjustmentForTabs);
	void OnSetNavButtonNotificationText(const class FText& NotificationText);
	void OnShowNavButtonNotification(const bool bShowNotification);
	void OnUpdatePurchaseButtonState(ECrewPurchaseButtonState ButtonState);
	void OnUpdateVBuckRefundVisibility(bool bVisible);
	void OnUserInformationTextsUpdated(const class FText& UserInformationText1, const class FText& UserInformationText2, EMcpSubscriptionState SubscriptionState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrewPurchaseScreen">();
	}
	static class UCrewPurchaseScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrewPurchaseScreen>();
	}
};
static_assert(alignof(UCrewPurchaseScreen) == 0x000008, "Wrong alignment on UCrewPurchaseScreen");
static_assert(sizeof(UCrewPurchaseScreen) == 0x0005A8, "Wrong size on UCrewPurchaseScreen");
static_assert(offsetof(UCrewPurchaseScreen, bManagementModeEnabled) == 0x000480, "Member 'UCrewPurchaseScreen::bManagementModeEnabled' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, FocusWidget) == 0x000488, "Member 'UCrewPurchaseScreen::FocusWidget' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, ButtonGroup_BenefitsTiles) == 0x000490, "Member 'UCrewPurchaseScreen::ButtonGroup_BenefitsTiles' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, CancellationInfoModalClass) == 0x000498, "Member 'UCrewPurchaseScreen::CancellationInfoModalClass' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, LegalInfoModalClass) == 0x0004C0, "Member 'UCrewPurchaseScreen::LegalInfoModalClass' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, ResolveIssueModalClass) == 0x0004E8, "Member 'UCrewPurchaseScreen::ResolveIssueModalClass' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, RejoinModalClass) == 0x000510, "Member 'UCrewPurchaseScreen::RejoinModalClass' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Button_ToBattlePass) == 0x000538, "Member 'UCrewPurchaseScreen::Button_ToBattlePass' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Button_Purchase) == 0x000540, "Member 'UCrewPurchaseScreen::Button_Purchase' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Button_Rejoin) == 0x000548, "Member 'UCrewPurchaseScreen::Button_Rejoin' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Button_ResolvePayment) == 0x000550, "Member 'UCrewPurchaseScreen::Button_ResolvePayment' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Button_WatchTrailer) == 0x000558, "Member 'UCrewPurchaseScreen::Button_WatchTrailer' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Button_Terms) == 0x000560, "Member 'UCrewPurchaseScreen::Button_Terms' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Button_CancellationInfo) == 0x000568, "Member 'UCrewPurchaseScreen::Button_CancellationInfo' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, EntryBox_RecurringRewards) == 0x000570, "Member 'UCrewPurchaseScreen::EntryBox_RecurringRewards' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, EntryBox_LimitedTimeRewards) == 0x000578, "Member 'UCrewPurchaseScreen::EntryBox_LimitedTimeRewards' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Details_CurrentCrewTile) == 0x000580, "Member 'UCrewPurchaseScreen::Details_CurrentCrewTile' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Text_LimitedTime) == 0x000588, "Member 'UCrewPurchaseScreen::Text_LimitedTime' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Overlay_UserInformation) == 0x000590, "Member 'UCrewPurchaseScreen::Overlay_UserInformation' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Text_UserInformation) == 0x000598, "Member 'UCrewPurchaseScreen::Text_UserInformation' has a wrong offset!");
static_assert(offsetof(UCrewPurchaseScreen, Text_CrewDisclaimer) == 0x0005A0, "Member 'UCrewPurchaseScreen::Text_CrewDisclaimer' has a wrong offset!");

// Class CrewUI.BattlePassCrewContentInterface
// 0x0000 (0x0000 - 0x0000)
class IBattlePassCrewContentInterface final
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattlePassCrewContentInterface">();
	}
	static class IBattlePassCrewContentInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBattlePassCrewContentInterface>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IBattlePassCrewContentInterface) == 0x000001, "Wrong alignment on IBattlePassCrewContentInterface");
static_assert(sizeof(IBattlePassCrewContentInterface) == 0x000001, "Wrong size on IBattlePassCrewContentInterface");

// Class CrewUI.BattlePassCrewPurchaseButton
// 0x0020 (0x0FC0 - 0x0FA0)
class UBattlePassCrewPurchaseButton : public UCommonButtonBase
{
public:
	EBattlePassPurchaseButtonCurrencyType         CurrencyType;                                      // 0x0F98(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F99[0x7];                                      // 0x0F99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonTextBlock*                       Text_Label;                                        // 0x0FA0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_SecondaryLabel;                               // 0x0FA8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_FinalCost;                                    // 0x0FB0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                                Container_SecondaryLabel;                          // 0x0FB8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnCurrencyUpdated();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattlePassCrewPurchaseButton">();
	}
	static class UBattlePassCrewPurchaseButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassCrewPurchaseButton>();
	}
};
static_assert(alignof(UBattlePassCrewPurchaseButton) == 0x000010, "Wrong alignment on UBattlePassCrewPurchaseButton");
static_assert(sizeof(UBattlePassCrewPurchaseButton) == 0x000FC0, "Wrong size on UBattlePassCrewPurchaseButton");
static_assert(offsetof(UBattlePassCrewPurchaseButton, CurrencyType) == 0x000F98, "Member 'UBattlePassCrewPurchaseButton::CurrencyType' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseButton, Text_Label) == 0x000FA0, "Member 'UBattlePassCrewPurchaseButton::Text_Label' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseButton, Text_SecondaryLabel) == 0x000FA8, "Member 'UBattlePassCrewPurchaseButton::Text_SecondaryLabel' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseButton, Text_FinalCost) == 0x000FB0, "Member 'UBattlePassCrewPurchaseButton::Text_FinalCost' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseButton, Container_SecondaryLabel) == 0x000FB8, "Member 'UBattlePassCrewPurchaseButton::Container_SecondaryLabel' has a wrong offset!");

// Class CrewUI.BattlePassCrewPurchaseContainer
// 0x0080 (0x0438 - 0x03B8)
class UBattlePassCrewPurchaseContainer : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_3B8[0x20];                                     // 0x03B8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CrewUpsellTransitionDelayTime;                     // 0x03D8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3DC[0xC];                                      // 0x03DC(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonActivatableWidgetSwitcher*       Switcher_ContentContainer;                         // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBattlePassPurchaseScreen*              BattlePassPurchaseScreen;                          // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetAnimation*                       Intro;                                             // 0x03F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetAnimation*                       QuickIntro;                                        // 0x0400(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetAnimation*                       CrewBenefitsIntro;                                 // 0x0408(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UCrewSubscriptionErrorModal> CrewSubscriptionErrorModalClass;                  // 0x0410(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_418[0x20];                                     // 0x0418(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnContentStateUpdated(EBattlePassCrewContentState InState, bool bInScreenOpened);
	void OnTriggerIntroAnimation(bool bCanClaimRewards);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattlePassCrewPurchaseContainer">();
	}
	static class UBattlePassCrewPurchaseContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassCrewPurchaseContainer>();
	}
};
static_assert(alignof(UBattlePassCrewPurchaseContainer) == 0x000008, "Wrong alignment on UBattlePassCrewPurchaseContainer");
static_assert(sizeof(UBattlePassCrewPurchaseContainer) == 0x000438, "Wrong size on UBattlePassCrewPurchaseContainer");
static_assert(offsetof(UBattlePassCrewPurchaseContainer, CrewUpsellTransitionDelayTime) == 0x0003D8, "Member 'UBattlePassCrewPurchaseContainer::CrewUpsellTransitionDelayTime' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer, Switcher_ContentContainer) == 0x0003E8, "Member 'UBattlePassCrewPurchaseContainer::Switcher_ContentContainer' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer, BattlePassPurchaseScreen) == 0x0003F0, "Member 'UBattlePassCrewPurchaseContainer::BattlePassPurchaseScreen' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer, Intro) == 0x0003F8, "Member 'UBattlePassCrewPurchaseContainer::Intro' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer, QuickIntro) == 0x000400, "Member 'UBattlePassCrewPurchaseContainer::QuickIntro' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer, CrewBenefitsIntro) == 0x000408, "Member 'UBattlePassCrewPurchaseContainer::CrewBenefitsIntro' has a wrong offset!");
static_assert(offsetof(UBattlePassCrewPurchaseContainer, CrewSubscriptionErrorModalClass) == 0x000410, "Member 'UBattlePassCrewPurchaseContainer::CrewSubscriptionErrorModalClass' has a wrong offset!");

// Class CrewUI.BattlePassSeasonHeading
// 0x0008 (0x02A8 - 0x02A0)
class UBattlePassSeasonHeading : public UCommonUserWidget
{
public:
	class UCommonRichTextBlock*                   Text_Season;                                       // 0x02A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattlePassSeasonHeading">();
	}
	static class UBattlePassSeasonHeading* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassSeasonHeading>();
	}
};
static_assert(alignof(UBattlePassSeasonHeading) == 0x000008, "Wrong alignment on UBattlePassSeasonHeading");
static_assert(sizeof(UBattlePassSeasonHeading) == 0x0002A8, "Wrong size on UBattlePassSeasonHeading");
static_assert(offsetof(UBattlePassSeasonHeading, Text_Season) == 0x0002A0, "Member 'UBattlePassSeasonHeading::Text_Season' has a wrong offset!");

// Class CrewUI.BattlePassPurchaseScreen
// 0x0118 (0x0510 - 0x03F8)
class UBattlePassPurchaseScreen : public UCMSBackgroundWidget
{
public:
	uint8                                         Pad_3F8[0xA0];                                     // 0x03F8(0x00A0)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCommonActivatableWidget>   PurchaseCompleteModal;                             // 0x0498(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_ToCrew;                                     // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBattlePassCrewPurchaseButton*          Button_Purchase;                                   // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_MoreInfo;                                   // 0x04B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_GiftBattlePass;                             // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBattlePassCrewPurchaseButton*          Button_ConfirmBase;                                // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBattlePassCrewPurchaseButton*          Button_ConfirmBundle;                              // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBattlePassSeasonHeading*               Heading_Primary;                                   // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBattlePassSeasonHeading*               Heading_Secondary;                                 // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonRichTextBlock*                   RichText_Disclaimer;                               // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_Description;                                  // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonAnimatedSwitcher*                Switcher_PurchaseState;                            // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4F8[0x18];                                     // 0x04F8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPurchaseConfirmed();
	void OnPurchaseStateChanged(EBattlePassPurchaseState InCurrentState);
	void OnSetNavButtonNotificationText(const class FText& NotificationText);
	void OnSetScreenInteractable(bool bInteractable);
	void OnShowNavButtonNotification(const bool bShowNotification);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BattlePassPurchaseScreen">();
	}
	static class UBattlePassPurchaseScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBattlePassPurchaseScreen>();
	}
};
static_assert(alignof(UBattlePassPurchaseScreen) == 0x000008, "Wrong alignment on UBattlePassPurchaseScreen");
static_assert(sizeof(UBattlePassPurchaseScreen) == 0x000510, "Wrong size on UBattlePassPurchaseScreen");
static_assert(offsetof(UBattlePassPurchaseScreen, PurchaseCompleteModal) == 0x000498, "Member 'UBattlePassPurchaseScreen::PurchaseCompleteModal' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, Button_ToCrew) == 0x0004A0, "Member 'UBattlePassPurchaseScreen::Button_ToCrew' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, Button_Purchase) == 0x0004A8, "Member 'UBattlePassPurchaseScreen::Button_Purchase' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, Button_MoreInfo) == 0x0004B0, "Member 'UBattlePassPurchaseScreen::Button_MoreInfo' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, Button_GiftBattlePass) == 0x0004B8, "Member 'UBattlePassPurchaseScreen::Button_GiftBattlePass' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, Button_ConfirmBase) == 0x0004C0, "Member 'UBattlePassPurchaseScreen::Button_ConfirmBase' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, Button_ConfirmBundle) == 0x0004C8, "Member 'UBattlePassPurchaseScreen::Button_ConfirmBundle' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, Heading_Primary) == 0x0004D0, "Member 'UBattlePassPurchaseScreen::Heading_Primary' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, Heading_Secondary) == 0x0004D8, "Member 'UBattlePassPurchaseScreen::Heading_Secondary' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, RichText_Disclaimer) == 0x0004E0, "Member 'UBattlePassPurchaseScreen::RichText_Disclaimer' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, Text_Description) == 0x0004E8, "Member 'UBattlePassPurchaseScreen::Text_Description' has a wrong offset!");
static_assert(offsetof(UBattlePassPurchaseScreen, Switcher_PurchaseState) == 0x0004F0, "Member 'UBattlePassPurchaseScreen::Switcher_PurchaseState' has a wrong offset!");

// Class CrewUI.CrewMultiSubscriptionAlertModal
// 0x00D8 (0x0490 - 0x03B8)
class UCrewMultiSubscriptionAlertModal : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_3B8[0x8];                                      // 0x03B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UDynamicEntryBox*                       EntryBox_BulletPoints;                             // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_OpenHowToURL;                               // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_TextURL;                                    // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_DoNotRemind;                                // 0x03D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_Close;                                      // 0x03E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FText>                           BulletPoints;                                      // 0x03E8(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TMap<EAppStore, class FText>                  AppStorePlatformMapping;                           // 0x03F8(0x0050)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FString                                 HowToCancelURL;                                    // 0x0448(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_458[0x20];                                     // 0x0458(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   PlatformTextStyle;                                 // 0x0478(0x0018)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

public:
	void OnSetHowToCancelURL(const class FString& MoreInfoUrl);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrewMultiSubscriptionAlertModal">();
	}
	static class UCrewMultiSubscriptionAlertModal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrewMultiSubscriptionAlertModal>();
	}
};
static_assert(alignof(UCrewMultiSubscriptionAlertModal) == 0x000008, "Wrong alignment on UCrewMultiSubscriptionAlertModal");
static_assert(sizeof(UCrewMultiSubscriptionAlertModal) == 0x000490, "Wrong size on UCrewMultiSubscriptionAlertModal");
static_assert(offsetof(UCrewMultiSubscriptionAlertModal, EntryBox_BulletPoints) == 0x0003C0, "Member 'UCrewMultiSubscriptionAlertModal::EntryBox_BulletPoints' has a wrong offset!");
static_assert(offsetof(UCrewMultiSubscriptionAlertModal, Button_OpenHowToURL) == 0x0003C8, "Member 'UCrewMultiSubscriptionAlertModal::Button_OpenHowToURL' has a wrong offset!");
static_assert(offsetof(UCrewMultiSubscriptionAlertModal, Button_TextURL) == 0x0003D0, "Member 'UCrewMultiSubscriptionAlertModal::Button_TextURL' has a wrong offset!");
static_assert(offsetof(UCrewMultiSubscriptionAlertModal, Button_DoNotRemind) == 0x0003D8, "Member 'UCrewMultiSubscriptionAlertModal::Button_DoNotRemind' has a wrong offset!");
static_assert(offsetof(UCrewMultiSubscriptionAlertModal, Button_Close) == 0x0003E0, "Member 'UCrewMultiSubscriptionAlertModal::Button_Close' has a wrong offset!");
static_assert(offsetof(UCrewMultiSubscriptionAlertModal, BulletPoints) == 0x0003E8, "Member 'UCrewMultiSubscriptionAlertModal::BulletPoints' has a wrong offset!");
static_assert(offsetof(UCrewMultiSubscriptionAlertModal, AppStorePlatformMapping) == 0x0003F8, "Member 'UCrewMultiSubscriptionAlertModal::AppStorePlatformMapping' has a wrong offset!");
static_assert(offsetof(UCrewMultiSubscriptionAlertModal, HowToCancelURL) == 0x000448, "Member 'UCrewMultiSubscriptionAlertModal::HowToCancelURL' has a wrong offset!");
static_assert(offsetof(UCrewMultiSubscriptionAlertModal, PlatformTextStyle) == 0x000478, "Member 'UCrewMultiSubscriptionAlertModal::PlatformTextStyle' has a wrong offset!");

// Class CrewUI.CrewPriceChangeAcknowledgeModal
// 0x01A0 (0x0558 - 0x03B8)
class UCrewPriceChangeAcknowledgeModal : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_3B8[0x8];                                      // 0x03B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      Button_Accept;                                     // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_CancelSubscription;                         // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_MoreInfo;                                   // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonButtonBase*                      Button_TextURL;                                    // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   CancellationInfoModalClass;                        // 0x03E0(0x0028)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_408[0x150];                                    // 0x0408(0x0150)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ExitModal();
	void OnModalBackout();
	void OnSetPriceChangeAcknowledgeBodyTable(const TArray<struct FCrewTableRow>& PriceChangeByRegionRows);
	void OnSetPriceChangeAcknowledgeBodyText(const class FText& BodyText);
	void OnSetPriceChangeAcknowledgeCancelSubscriptionButtonText(const class FText& CancelSubscriptionButtonText);
	void OnSetPriceChangeAcknowledgeCheckboxText(const class FText& CheckboxText);
	void OnSetPriceChangeAcknowledgeConfirmButtonText(const class FText& ConfirmButtonText);
	void OnSetPriceChangeAcknowledgeMoreInfoText(const class FText& ConfirmButtonText);
	void OnSetPriceChangeAcknowledgeMoreInfoUrl(const class FText& MoreInfoUrl);
	void OnSetPriceChangeAcknowledgeTitle(const class FText& Title);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrewPriceChangeAcknowledgeModal">();
	}
	static class UCrewPriceChangeAcknowledgeModal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrewPriceChangeAcknowledgeModal>();
	}
};
static_assert(alignof(UCrewPriceChangeAcknowledgeModal) == 0x000008, "Wrong alignment on UCrewPriceChangeAcknowledgeModal");
static_assert(sizeof(UCrewPriceChangeAcknowledgeModal) == 0x000558, "Wrong size on UCrewPriceChangeAcknowledgeModal");
static_assert(offsetof(UCrewPriceChangeAcknowledgeModal, Button_Accept) == 0x0003C0, "Member 'UCrewPriceChangeAcknowledgeModal::Button_Accept' has a wrong offset!");
static_assert(offsetof(UCrewPriceChangeAcknowledgeModal, Button_CancelSubscription) == 0x0003C8, "Member 'UCrewPriceChangeAcknowledgeModal::Button_CancelSubscription' has a wrong offset!");
static_assert(offsetof(UCrewPriceChangeAcknowledgeModal, Button_MoreInfo) == 0x0003D0, "Member 'UCrewPriceChangeAcknowledgeModal::Button_MoreInfo' has a wrong offset!");
static_assert(offsetof(UCrewPriceChangeAcknowledgeModal, Button_TextURL) == 0x0003D8, "Member 'UCrewPriceChangeAcknowledgeModal::Button_TextURL' has a wrong offset!");
static_assert(offsetof(UCrewPriceChangeAcknowledgeModal, CancellationInfoModalClass) == 0x0003E0, "Member 'UCrewPriceChangeAcknowledgeModal::CancellationInfoModalClass' has a wrong offset!");

// Class CrewUI.CrewRewardTile
// 0x0050 (0x0FF0 - 0x0FA0)
class UCrewRewardTile : public UCommonButtonBase
{
public:
	uint8                                         Pad_F98[0x40];                                     // 0x0F98(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TileImageStreamoutSeconds;                         // 0x0FD8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_FDC[0x4];                                      // 0x0FDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Image_TileImage;                                   // 0x0FE0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_TileLabel;                                    // 0x0FE8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnDownloadTileImageComplete(class UTexture2D* Texture);
	void OnStartingDownloadTileImage();
	void OnUpdateOwnedState(bool bOwned);

	bool IsMonthlyBenefit() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrewRewardTile">();
	}
	static class UCrewRewardTile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrewRewardTile>();
	}
};
static_assert(alignof(UCrewRewardTile) == 0x000010, "Wrong alignment on UCrewRewardTile");
static_assert(sizeof(UCrewRewardTile) == 0x000FF0, "Wrong size on UCrewRewardTile");
static_assert(offsetof(UCrewRewardTile, TileImageStreamoutSeconds) == 0x000FD8, "Member 'UCrewRewardTile::TileImageStreamoutSeconds' has a wrong offset!");
static_assert(offsetof(UCrewRewardTile, Image_TileImage) == 0x000FE0, "Member 'UCrewRewardTile::Image_TileImage' has a wrong offset!");
static_assert(offsetof(UCrewRewardTile, Text_TileLabel) == 0x000FE8, "Member 'UCrewRewardTile::Text_TileLabel' has a wrong offset!");

// Class CrewUI.CrewSeasonLaunchScreen
// 0x00F0 (0x04E8 - 0x03F8)
class UCrewSeasonLaunchScreen : public UCMSBackgroundWidget
{
public:
	uint8                                         Pad_3F8[0x38];                                     // 0x03F8(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   ResolveIssueModalClass;                            // 0x0430(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBattlePassSeasonHeading*               Heading_SeasonInfo;                                // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_Description;                                  // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_Claim;                                      // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_ResolveIssue;                               // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_GiftBattlePass;                             // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonRichTextBlock*                   RichText_Disclaimer;                               // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_488[0x60];                                     // 0x0488(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrewSeasonLaunchScreen">();
	}
	static class UCrewSeasonLaunchScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrewSeasonLaunchScreen>();
	}
};
static_assert(alignof(UCrewSeasonLaunchScreen) == 0x000008, "Wrong alignment on UCrewSeasonLaunchScreen");
static_assert(sizeof(UCrewSeasonLaunchScreen) == 0x0004E8, "Wrong size on UCrewSeasonLaunchScreen");
static_assert(offsetof(UCrewSeasonLaunchScreen, ResolveIssueModalClass) == 0x000430, "Member 'UCrewSeasonLaunchScreen::ResolveIssueModalClass' has a wrong offset!");
static_assert(offsetof(UCrewSeasonLaunchScreen, Heading_SeasonInfo) == 0x000458, "Member 'UCrewSeasonLaunchScreen::Heading_SeasonInfo' has a wrong offset!");
static_assert(offsetof(UCrewSeasonLaunchScreen, Text_Description) == 0x000460, "Member 'UCrewSeasonLaunchScreen::Text_Description' has a wrong offset!");
static_assert(offsetof(UCrewSeasonLaunchScreen, Button_Claim) == 0x000468, "Member 'UCrewSeasonLaunchScreen::Button_Claim' has a wrong offset!");
static_assert(offsetof(UCrewSeasonLaunchScreen, Button_ResolveIssue) == 0x000470, "Member 'UCrewSeasonLaunchScreen::Button_ResolveIssue' has a wrong offset!");
static_assert(offsetof(UCrewSeasonLaunchScreen, Button_GiftBattlePass) == 0x000478, "Member 'UCrewSeasonLaunchScreen::Button_GiftBattlePass' has a wrong offset!");
static_assert(offsetof(UCrewSeasonLaunchScreen, RichText_Disclaimer) == 0x000480, "Member 'UCrewSeasonLaunchScreen::RichText_Disclaimer' has a wrong offset!");

// Class CrewUI.CrewSubscriptionContentContainer
// 0x0088 (0x0440 - 0x03B8)
class UCrewSubscriptionContentContainer : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_3B8[0x30];                                     // 0x03B8(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCrewSubscriptionContentTabData> TabsData;                                         // 0x03E8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                    NextTabInputAction;                                // 0x03F8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                    PreviousTabInputAction;                            // 0x0408(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPrivate)
	class UDynamicEntryBox*                       EntryBox_Tabs;                                     // 0x0418(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonGroupBase*                 ButtonGroup_Tabs;                                  // 0x0420(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonActivatableWidgetSwitcher*       Switcher_Tabs;                                     // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                                Widget_TabsContainer;                              // 0x0430(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         SpacingAdjustmentForTabs;                          // 0x0438(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPrimaryContentSetup                   ContentSetup;                                      // 0x043C(0x0002)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_43E[0x2];                                      // 0x043E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnTabSelected(int32 TabIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrewSubscriptionContentContainer">();
	}
	static class UCrewSubscriptionContentContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrewSubscriptionContentContainer>();
	}
};
static_assert(alignof(UCrewSubscriptionContentContainer) == 0x000008, "Wrong alignment on UCrewSubscriptionContentContainer");
static_assert(sizeof(UCrewSubscriptionContentContainer) == 0x000440, "Wrong size on UCrewSubscriptionContentContainer");
static_assert(offsetof(UCrewSubscriptionContentContainer, TabsData) == 0x0003E8, "Member 'UCrewSubscriptionContentContainer::TabsData' has a wrong offset!");
static_assert(offsetof(UCrewSubscriptionContentContainer, NextTabInputAction) == 0x0003F8, "Member 'UCrewSubscriptionContentContainer::NextTabInputAction' has a wrong offset!");
static_assert(offsetof(UCrewSubscriptionContentContainer, PreviousTabInputAction) == 0x000408, "Member 'UCrewSubscriptionContentContainer::PreviousTabInputAction' has a wrong offset!");
static_assert(offsetof(UCrewSubscriptionContentContainer, EntryBox_Tabs) == 0x000418, "Member 'UCrewSubscriptionContentContainer::EntryBox_Tabs' has a wrong offset!");
static_assert(offsetof(UCrewSubscriptionContentContainer, ButtonGroup_Tabs) == 0x000420, "Member 'UCrewSubscriptionContentContainer::ButtonGroup_Tabs' has a wrong offset!");
static_assert(offsetof(UCrewSubscriptionContentContainer, Switcher_Tabs) == 0x000428, "Member 'UCrewSubscriptionContentContainer::Switcher_Tabs' has a wrong offset!");
static_assert(offsetof(UCrewSubscriptionContentContainer, Widget_TabsContainer) == 0x000430, "Member 'UCrewSubscriptionContentContainer::Widget_TabsContainer' has a wrong offset!");
static_assert(offsetof(UCrewSubscriptionContentContainer, SpacingAdjustmentForTabs) == 0x000438, "Member 'UCrewSubscriptionContentContainer::SpacingAdjustmentForTabs' has a wrong offset!");
static_assert(offsetof(UCrewSubscriptionContentContainer, ContentSetup) == 0x00043C, "Member 'UCrewSubscriptionContentContainer::ContentSetup' has a wrong offset!");

// Class CrewUI.CrewSubscriptionErrorModal
// 0x0010 (0x03C8 - 0x03B8)
class UCrewSubscriptionErrorModal : public UCommonActivatableWidget
{
public:
	class UCommonButtonBase*                      Button_Confirm;                                    // 0x03B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_CloseMobile;                                // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrewSubscriptionErrorModal">();
	}
	static class UCrewSubscriptionErrorModal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrewSubscriptionErrorModal>();
	}
};
static_assert(alignof(UCrewSubscriptionErrorModal) == 0x000008, "Wrong alignment on UCrewSubscriptionErrorModal");
static_assert(sizeof(UCrewSubscriptionErrorModal) == 0x0003C8, "Wrong size on UCrewSubscriptionErrorModal");
static_assert(offsetof(UCrewSubscriptionErrorModal, Button_Confirm) == 0x0003B8, "Member 'UCrewSubscriptionErrorModal::Button_Confirm' has a wrong offset!");
static_assert(offsetof(UCrewSubscriptionErrorModal, Button_CloseMobile) == 0x0003C0, "Member 'UCrewSubscriptionErrorModal::Button_CloseMobile' has a wrong offset!");

// Class CrewUI.CrewTileDetails
// 0x0048 (0x02E8 - 0x02A0)
class UCrewTileDetails : public UCommonUserWidget
{
public:
	uint8                                         Pad_2A0[0x28];                                     // 0x02A0(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonTextBlock*                       Text_Title;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonRichTextBlock*                   RichText_Description;                              // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDynamicEntryBox*                       EntryBox_Tags;                                     // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_MobileMoreInfo;                             // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrewTileDetails">();
	}
	static class UCrewTileDetails* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrewTileDetails>();
	}
};
static_assert(alignof(UCrewTileDetails) == 0x000008, "Wrong alignment on UCrewTileDetails");
static_assert(sizeof(UCrewTileDetails) == 0x0002E8, "Wrong size on UCrewTileDetails");
static_assert(offsetof(UCrewTileDetails, Text_Title) == 0x0002C8, "Member 'UCrewTileDetails::Text_Title' has a wrong offset!");
static_assert(offsetof(UCrewTileDetails, RichText_Description) == 0x0002D0, "Member 'UCrewTileDetails::RichText_Description' has a wrong offset!");
static_assert(offsetof(UCrewTileDetails, EntryBox_Tags) == 0x0002D8, "Member 'UCrewTileDetails::EntryBox_Tags' has a wrong offset!");
static_assert(offsetof(UCrewTileDetails, Button_MobileMoreInfo) == 0x0002E0, "Member 'UCrewTileDetails::Button_MobileMoreInfo' has a wrong offset!");

// Class CrewUI.CrewTileDetailsTag
// 0x0008 (0x02A8 - 0x02A0)
class UCrewTileDetailsTag : public UCommonUserWidget
{
public:
	class UCommonRichTextBlock*                   Text_Label;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnTagSetup(ECrewDetailsTag RewardTag, bool bIsOwnedTag);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrewTileDetailsTag">();
	}
	static class UCrewTileDetailsTag* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrewTileDetailsTag>();
	}
};
static_assert(alignof(UCrewTileDetailsTag) == 0x000008, "Wrong alignment on UCrewTileDetailsTag");
static_assert(sizeof(UCrewTileDetailsTag) == 0x0002A8, "Wrong size on UCrewTileDetailsTag");
static_assert(offsetof(UCrewTileDetailsTag, Text_Label) == 0x0002A0, "Member 'UCrewTileDetailsTag::Text_Label' has a wrong offset!");

// Class CrewUI.CrewUIGameFeatureAction
// 0x0110 (0x0138 - 0x0028)
class UCrewUIGameFeatureAction final : public UFortUIGameFeatureAction
{
public:
	TSoftClassPtr<class UClass>                   BattlePassCrewContainerClass;                      // 0x0028(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   CrewContentContainerClass;                         // 0x0050(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   CrewPurchaseScreenClass;                           // 0x0078(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   ProgressionScreenClass;                            // 0x00A0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   CrewPriceChangeAcknowledgeModalClass;              // 0x00C8(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   MultiSubAlertModalClass;                           // 0x00F0(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FFortProgressiveSet>            ProgressiveCosmeticSets;                           // 0x0118(0x0010)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                         Pad_128[0x10];                                     // 0x0128(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CrewUIGameFeatureAction">();
	}
	static class UCrewUIGameFeatureAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCrewUIGameFeatureAction>();
	}
};
static_assert(alignof(UCrewUIGameFeatureAction) == 0x000008, "Wrong alignment on UCrewUIGameFeatureAction");
static_assert(sizeof(UCrewUIGameFeatureAction) == 0x000138, "Wrong size on UCrewUIGameFeatureAction");
static_assert(offsetof(UCrewUIGameFeatureAction, BattlePassCrewContainerClass) == 0x000028, "Member 'UCrewUIGameFeatureAction::BattlePassCrewContainerClass' has a wrong offset!");
static_assert(offsetof(UCrewUIGameFeatureAction, CrewContentContainerClass) == 0x000050, "Member 'UCrewUIGameFeatureAction::CrewContentContainerClass' has a wrong offset!");
static_assert(offsetof(UCrewUIGameFeatureAction, CrewPurchaseScreenClass) == 0x000078, "Member 'UCrewUIGameFeatureAction::CrewPurchaseScreenClass' has a wrong offset!");
static_assert(offsetof(UCrewUIGameFeatureAction, ProgressionScreenClass) == 0x0000A0, "Member 'UCrewUIGameFeatureAction::ProgressionScreenClass' has a wrong offset!");
static_assert(offsetof(UCrewUIGameFeatureAction, CrewPriceChangeAcknowledgeModalClass) == 0x0000C8, "Member 'UCrewUIGameFeatureAction::CrewPriceChangeAcknowledgeModalClass' has a wrong offset!");
static_assert(offsetof(UCrewUIGameFeatureAction, MultiSubAlertModalClass) == 0x0000F0, "Member 'UCrewUIGameFeatureAction::MultiSubAlertModalClass' has a wrong offset!");
static_assert(offsetof(UCrewUIGameFeatureAction, ProgressiveCosmeticSets) == 0x000118, "Member 'UCrewUIGameFeatureAction::ProgressiveCosmeticSets' has a wrong offset!");

// Class CrewUI.FortProgressiveItemDetailsWidget
// 0x0028 (0x02A0 - 0x0278)
class UFortProgressiveItemDetailsWidget : public UUserWidget
{
public:
	class UCommonTextBlock*                       Text_CosmeticStage;                                // 0x0278(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonRichTextBlock*                   Text_UnlockCriteria;                               // 0x0280(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                                Widget_UnlockCriteriaContainer;                    // 0x0288(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAthenaRewardItemTypeRarityTag*         Widget_ItemTypeRarityTag;                          // 0x0290(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortProgressiveStageTags*              Widget_ProgressiveStageTags;                       // 0x0298(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortProgressiveItemDetailsWidget">();
	}
	static class UFortProgressiveItemDetailsWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortProgressiveItemDetailsWidget>();
	}
};
static_assert(alignof(UFortProgressiveItemDetailsWidget) == 0x000008, "Wrong alignment on UFortProgressiveItemDetailsWidget");
static_assert(sizeof(UFortProgressiveItemDetailsWidget) == 0x0002A0, "Wrong size on UFortProgressiveItemDetailsWidget");
static_assert(offsetof(UFortProgressiveItemDetailsWidget, Text_CosmeticStage) == 0x000278, "Member 'UFortProgressiveItemDetailsWidget::Text_CosmeticStage' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemDetailsWidget, Text_UnlockCriteria) == 0x000280, "Member 'UFortProgressiveItemDetailsWidget::Text_UnlockCriteria' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemDetailsWidget, Widget_UnlockCriteriaContainer) == 0x000288, "Member 'UFortProgressiveItemDetailsWidget::Widget_UnlockCriteriaContainer' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemDetailsWidget, Widget_ItemTypeRarityTag) == 0x000290, "Member 'UFortProgressiveItemDetailsWidget::Widget_ItemTypeRarityTag' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemDetailsWidget, Widget_ProgressiveStageTags) == 0x000298, "Member 'UFortProgressiveItemDetailsWidget::Widget_ProgressiveStageTags' has a wrong offset!");

// Class CrewUI.FortProgressiveItemScreen
// 0x01C0 (0x0828 - 0x0668)
class UFortProgressiveItemScreen : public UFortItemPreviewScreen
{
public:
	uint8                                         Pad_668[0x68];                                     // 0x0668(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAccountItemDefinition*             AccountItemDefinition;                             // 0x06D0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_Back;                                       // 0x06D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_MobileBack;                                 // 0x06E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_MoreInfo;                                   // 0x06E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_Subscribe;                                  // 0x06F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonBase*                      Button_PreviewStyles;                              // 0x06F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                                Widget_ExpirationDateBang;                         // 0x0700(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_ExpirationFinePrint;                          // 0x0708(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                       Text_NewStagesUnlockFinePrint;                     // 0x0710(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDynamicEntryBox*                       EntryBox_StagesPips;                               // 0x0718(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortSwipePanel*                        SwipePanel_Navigation;                             // 0x0720(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonButtonGroupBase*                 ButtonGroup_StagesPips;                            // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortProgressiveItemDetailsWidget*      Widget_ProgressiveItemDetails;                     // 0x0730(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortProgressiveStageList*              Widget_ProgressiveStageList;                       // 0x0738(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortProgressiveItemStateTitleWidget*   ProgressiveItemStateTitle;                         // 0x0740(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   MoreInfoModalClass;                                // 0x0748(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UClass>                   SizzleVideoClass;                                  // 0x0770(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         BangeDisplayDelay;                                 // 0x0798(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_79C[0x8C];                                     // 0x079C(0x008C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnContainerTabVisibilityUpdated(const bool bTabsVisible, const float SpacingAdjustmentForTabs);
	void OnItemSelected();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortProgressiveItemScreen">();
	}
	static class UFortProgressiveItemScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortProgressiveItemScreen>();
	}
};
static_assert(alignof(UFortProgressiveItemScreen) == 0x000008, "Wrong alignment on UFortProgressiveItemScreen");
static_assert(sizeof(UFortProgressiveItemScreen) == 0x000828, "Wrong size on UFortProgressiveItemScreen");
static_assert(offsetof(UFortProgressiveItemScreen, AccountItemDefinition) == 0x0006D0, "Member 'UFortProgressiveItemScreen::AccountItemDefinition' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemScreen, Button_Back) == 0x0006D8, "Member 'UFortProgressiveItemScreen::Button_Back' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemScreen, Button_MobileBack) == 0x0006E0, "Member 'UFortProgressiveItemScreen::Button_MobileBack' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemScreen, Button_MoreInfo) == 0x0006E8, "Member 'UFortProgressiveItemScreen::Button_MoreInfo' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemScreen, Button_Subscribe) == 0x0006F0, "Member 'UFortProgressiveItemScreen::Button_Subscribe' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemScreen, Button_PreviewStyles) == 0x0006F8, "Member 'UFortProgressiveItemScreen::Button_PreviewStyles' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemScreen, Widget_ExpirationDateBang) == 0x000700, "Member 'UFortProgressiveItemScreen::Widget_ExpirationDateBang' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemScreen, Text_ExpirationFinePrint) == 0x000708, "Member 'UFortProgressiveItemScreen::Text_ExpirationFinePrint' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemScreen, Text_NewStagesUnlockFinePrint) == 0x000710, "Member 'UFortProgressiveItemScreen::Text_NewStagesUnlockFinePrint' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemScreen, EntryBox_StagesPips) == 0x000718, "Member 'UFortProgressiveItemScreen::EntryBox_StagesPips' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemScreen, SwipePanel_Navigation) == 0x000720, "Member 'UFortProgressiveItemScreen::SwipePanel_Navigation' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemScreen, ButtonGroup_StagesPips) == 0x000728, "Member 'UFortProgressiveItemScreen::ButtonGroup_StagesPips' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemScreen, Widget_ProgressiveItemDetails) == 0x000730, "Member 'UFortProgressiveItemScreen::Widget_ProgressiveItemDetails' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemScreen, Widget_ProgressiveStageList) == 0x000738, "Member 'UFortProgressiveItemScreen::Widget_ProgressiveStageList' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemScreen, ProgressiveItemStateTitle) == 0x000740, "Member 'UFortProgressiveItemScreen::ProgressiveItemStateTitle' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemScreen, MoreInfoModalClass) == 0x000748, "Member 'UFortProgressiveItemScreen::MoreInfoModalClass' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemScreen, SizzleVideoClass) == 0x000770, "Member 'UFortProgressiveItemScreen::SizzleVideoClass' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemScreen, BangeDisplayDelay) == 0x000798, "Member 'UFortProgressiveItemScreen::BangeDisplayDelay' has a wrong offset!");

// Class CrewUI.FortProgressiveItemStateTitleWidget
// 0x0008 (0x0280 - 0x0278)
class UFortProgressiveItemStateTitleWidget : public UUserWidget
{
public:
	class UCommonTextBlock*                       Text_UnlockedStages;                               // 0x0278(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortProgressiveItemStateTitleWidget">();
	}
	static class UFortProgressiveItemStateTitleWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortProgressiveItemStateTitleWidget>();
	}
};
static_assert(alignof(UFortProgressiveItemStateTitleWidget) == 0x000008, "Wrong alignment on UFortProgressiveItemStateTitleWidget");
static_assert(sizeof(UFortProgressiveItemStateTitleWidget) == 0x000280, "Wrong size on UFortProgressiveItemStateTitleWidget");
static_assert(offsetof(UFortProgressiveItemStateTitleWidget, Text_UnlockedStages) == 0x000278, "Member 'UFortProgressiveItemStateTitleWidget::Text_UnlockedStages' has a wrong offset!");

// Class CrewUI.FortProgressiveItemWidget
// 0x0070 (0x1010 - 0x0FA0)
class UFortProgressiveItemWidget : public UCommonButtonBase
{
public:
	class UAthenaItemShopReactiveTileText*        TileText_ItemName;                                 // 0x0F98(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FProgressiveStageItemInfo              StageItemInfo;                                     // 0x0FA0(0x0060)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1000[0x10];                                    // 0x1000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnHighlighted();
	void OnPeekStateChanged(bool bIsInPeekState);
	void OnStageItemChanged(const struct FProgressiveStageItemInfo& InStageItemInfo);
	void OnUnhighlighted();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortProgressiveItemWidget">();
	}
	static class UFortProgressiveItemWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortProgressiveItemWidget>();
	}
};
static_assert(alignof(UFortProgressiveItemWidget) == 0x000010, "Wrong alignment on UFortProgressiveItemWidget");
static_assert(sizeof(UFortProgressiveItemWidget) == 0x001010, "Wrong size on UFortProgressiveItemWidget");
static_assert(offsetof(UFortProgressiveItemWidget, TileText_ItemName) == 0x000F98, "Member 'UFortProgressiveItemWidget::TileText_ItemName' has a wrong offset!");
static_assert(offsetof(UFortProgressiveItemWidget, StageItemInfo) == 0x000FA0, "Member 'UFortProgressiveItemWidget::StageItemInfo' has a wrong offset!");

// Class CrewUI.FortProgressiveStageList
// 0x0048 (0x0400 - 0x03B8)
class UFortProgressiveStageList : public UCommonActivatableWidget
{
public:
	uint8                                         Pad_3B8[0x18];                                     // 0x03B8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonGroupBase*                 ButtonGroup_StageItems;                            // 0x03D0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAthenaScrollBox*                       ScrollBox_StageList;                               // 0x03D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3E0[0x20];                                     // 0x03E0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UFortProgressiveStageWidget* AddStageWidget();
	void ClearStageWidgets();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortProgressiveStageList">();
	}
	static class UFortProgressiveStageList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortProgressiveStageList>();
	}
};
static_assert(alignof(UFortProgressiveStageList) == 0x000008, "Wrong alignment on UFortProgressiveStageList");
static_assert(sizeof(UFortProgressiveStageList) == 0x000400, "Wrong size on UFortProgressiveStageList");
static_assert(offsetof(UFortProgressiveStageList, ButtonGroup_StageItems) == 0x0003D0, "Member 'UFortProgressiveStageList::ButtonGroup_StageItems' has a wrong offset!");
static_assert(offsetof(UFortProgressiveStageList, ScrollBox_StageList) == 0x0003D8, "Member 'UFortProgressiveStageList::ScrollBox_StageList' has a wrong offset!");

// Class CrewUI.FortProgressiveStageTags
// 0x0018 (0x0290 - 0x0278)
class UFortProgressiveStageTags : public UUserWidget
{
public:
	class UWidgetSwitcher*                        Switcher_ActiveTag;                                // 0x0278(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                                Tag_Owned;                                         // 0x0280(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                                Tag_Prerequisite;                                  // 0x0288(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortProgressiveStageTags">();
	}
	static class UFortProgressiveStageTags* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortProgressiveStageTags>();
	}
};
static_assert(alignof(UFortProgressiveStageTags) == 0x000008, "Wrong alignment on UFortProgressiveStageTags");
static_assert(sizeof(UFortProgressiveStageTags) == 0x000290, "Wrong size on UFortProgressiveStageTags");
static_assert(offsetof(UFortProgressiveStageTags, Switcher_ActiveTag) == 0x000278, "Member 'UFortProgressiveStageTags::Switcher_ActiveTag' has a wrong offset!");
static_assert(offsetof(UFortProgressiveStageTags, Tag_Owned) == 0x000280, "Member 'UFortProgressiveStageTags::Tag_Owned' has a wrong offset!");
static_assert(offsetof(UFortProgressiveStageTags, Tag_Prerequisite) == 0x000288, "Member 'UFortProgressiveStageTags::Tag_Prerequisite' has a wrong offset!");

// Class CrewUI.FortProgressiveStageWidget
// 0x0028 (0x02C8 - 0x02A0)
class UFortProgressiveStageWidget : public UCommonUserWidget
{
public:
	class UCommonTextBlock*                       Text_Month;                                        // 0x02A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortProgressiveStageTags*              Widget_ProgressiveStageTags;                       // 0x02A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2B0[0x18];                                     // 0x02B0(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UFortProgressiveItemWidget* AddStageItemWidget();
	void ClearStageItemWidgets();
	void OnPeekStateChanged(bool bIsInPeekState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FortProgressiveStageWidget">();
	}
	static class UFortProgressiveStageWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortProgressiveStageWidget>();
	}
};
static_assert(alignof(UFortProgressiveStageWidget) == 0x000008, "Wrong alignment on UFortProgressiveStageWidget");
static_assert(sizeof(UFortProgressiveStageWidget) == 0x0002C8, "Wrong size on UFortProgressiveStageWidget");
static_assert(offsetof(UFortProgressiveStageWidget, Text_Month) == 0x0002A0, "Member 'UFortProgressiveStageWidget::Text_Month' has a wrong offset!");
static_assert(offsetof(UFortProgressiveStageWidget, Widget_ProgressiveStageTags) == 0x0002A8, "Member 'UFortProgressiveStageWidget::Widget_ProgressiveStageTags' has a wrong offset!");

}

