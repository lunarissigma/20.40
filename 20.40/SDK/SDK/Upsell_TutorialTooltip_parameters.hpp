#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Upsell_TutorialTooltip

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function Upsell_TutorialTooltip.Upsell_TutorialTooltip_C.ExecuteUbergraph_Upsell_TutorialTooltip
// 0x0038 (0x0038 - 0x0000)
struct Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBorderSlot*                            CallFunc_SlotAsBorderSlot_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip) == 0x000008, "Wrong alignment on Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip");
static_assert(sizeof(Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip) == 0x000038, "Wrong size on Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip");
static_assert(offsetof(Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip, EntryPoint) == 0x000000, "Member 'Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip::EntryPoint' has a wrong offset!");
static_assert(offsetof(Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip, Temp_bool_Variable) == 0x000010, "Member 'Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip, Temp_byte_Variable) == 0x000011, "Member 'Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip, Temp_byte_Variable_1) == 0x000012, "Member 'Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip, K2Node_Event_IsDesignTime) == 0x000013, "Member 'Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000018, "Member 'Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip, CallFunc_PlayAnimationForward_ReturnValue) == 0x000020, "Member 'Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip, CallFunc_SlotAsBorderSlot_ReturnValue) == 0x000028, "Member 'Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip::CallFunc_SlotAsBorderSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip, K2Node_Select_Default) == 0x000030, "Member 'Upsell_TutorialTooltip_C_ExecuteUbergraph_Upsell_TutorialTooltip::K2Node_Select_Default' has a wrong offset!");

// Function Upsell_TutorialTooltip.Upsell_TutorialTooltip_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Upsell_TutorialTooltip_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Upsell_TutorialTooltip_C_PreConstruct) == 0x000001, "Wrong alignment on Upsell_TutorialTooltip_C_PreConstruct");
static_assert(sizeof(Upsell_TutorialTooltip_C_PreConstruct) == 0x000001, "Wrong size on Upsell_TutorialTooltip_C_PreConstruct");
static_assert(offsetof(Upsell_TutorialTooltip_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Upsell_TutorialTooltip_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

