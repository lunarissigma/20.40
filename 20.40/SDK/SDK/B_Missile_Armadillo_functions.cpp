#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Missile_Armadillo

#include "Basic.hpp"

#include "B_Missile_Armadillo_classes.hpp"
#include "B_Missile_Armadillo_parameters.hpp"


namespace SDK
{

// Function B_Missile_Armadillo.B_Missile_Armadillo_C.ApplyAoE
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Instigator_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HomingTarget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsShield_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Missile_Armadillo_C::ApplyAoE(class AActor* Instigator_0, const struct FVector& Location, class AActor* HomingTarget, bool bIsShield_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Missile_Armadillo_C", "ApplyAoE");

	Params::B_Missile_Armadillo_C_ApplyAoE Parms{};

	Parms.Instigator_0 = Instigator_0;
	Parms.Location = std::move(Location);
	Parms.HomingTarget = HomingTarget;
	Parms.bIsShield_0 = bIsShield_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Missile_Armadillo.B_Missile_Armadillo_C.ExecuteUbergraph_B_Missile_Armadillo
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Missile_Armadillo_C::ExecuteUbergraph_B_Missile_Armadillo(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Missile_Armadillo_C", "ExecuteUbergraph_B_Missile_Armadillo");

	Params::B_Missile_Armadillo_C_ExecuteUbergraph_B_Missile_Armadillo Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Missile_Armadillo.B_Missile_Armadillo_C.Explosion
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FArmadillo_Struct_Missile& Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Missile_Armadillo_C::Explosion(const struct FArmadillo_Struct_Missile& Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Missile_Armadillo_C", "Explosion");

	Params::B_Missile_Armadillo_C_Explosion Parms{};

	Parms.Target = std::move(Target);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Missile_Armadillo.B_Missile_Armadillo_C.fillStructMissile
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FArmadillo_Struct_Missile*       StructTarget                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Missile_Armadillo_C::fillStructMissile(struct FArmadillo_Struct_Missile* StructTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Missile_Armadillo_C", "fillStructMissile");

	Params::B_Missile_Armadillo_C_fillStructMissile Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StructTarget != nullptr)
		*StructTarget = std::move(Parms.StructTarget);
}


// Function B_Missile_Armadillo.B_Missile_Armadillo_C.FireMis
// (BlueprintCallable, BlueprintEvent)

void AB_Missile_Armadillo_C::FireMis()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Missile_Armadillo_C", "FireMis");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Missile_Armadillo.B_Missile_Armadillo_C.HandleWeaponFiltering
// (Public, BlueprintCallable, BlueprintEvent)

void AB_Missile_Armadillo_C::HandleWeaponFiltering()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Missile_Armadillo_C", "HandleWeaponFiltering");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Missile_Armadillo.B_Missile_Armadillo_C.On Overheating Value
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrentValue                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EFortWeaponOverheatState                State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsInCooldown                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Missile_Armadillo_C::On_Overheating_Value(float CurrentValue, float MaxValue, EFortWeaponOverheatState State, bool bIsInCooldown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Missile_Armadillo_C", "On Overheating Value");

	Params::B_Missile_Armadillo_C_On_Overheating_Value Parms{};

	Parms.CurrentValue = CurrentValue;
	Parms.MaxValue = MaxValue;
	Parms.State = State;
	Parms.bIsInCooldown = bIsInCooldown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Missile_Armadillo.B_Missile_Armadillo_C.OnLocalFailedToFireWhenOverheated
// (Event, Protected, BlueprintEvent)

void AB_Missile_Armadillo_C::OnLocalFailedToFireWhenOverheated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Missile_Armadillo_C", "OnLocalFailedToFireWhenOverheated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Missile_Armadillo.B_Missile_Armadillo_C.OnPlayWeaponFireFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bPersistentFire                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSecondaryFire                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Missile_Armadillo_C::OnPlayWeaponFireFX(bool bPersistentFire, bool bSecondaryFire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Missile_Armadillo_C", "OnPlayWeaponFireFX");

	Params::B_Missile_Armadillo_C_OnPlayWeaponFireFX Parms{};

	Parms.bPersistentFire = bPersistentFire;
	Parms.bSecondaryFire = bSecondaryFire;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Missile_Armadillo.B_Missile_Armadillo_C.OnRep_firehack
// (BlueprintCallable, BlueprintEvent)

void AB_Missile_Armadillo_C::OnRep_firehack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Missile_Armadillo_C", "OnRep_firehack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Missile_Armadillo.B_Missile_Armadillo_C.OnStartOverheated
// (Event, Protected, BlueprintEvent)

void AB_Missile_Armadillo_C::OnStartOverheated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Missile_Armadillo_C", "OnStartOverheated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Missile_Armadillo.B_Missile_Armadillo_C.OnWeaponAttached
// (Event, Public, BlueprintEvent)

void AB_Missile_Armadillo_C::OnWeaponAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Missile_Armadillo_C", "OnWeaponAttached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Missile_Armadillo.B_Missile_Armadillo_C.PlayInAirSound
// (Public, BlueprintCallable, BlueprintEvent)

void AB_Missile_Armadillo_C::PlayInAirSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Missile_Armadillo_C", "PlayInAirSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Missile_Armadillo.B_Missile_Armadillo_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_Missile_Armadillo_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Missile_Armadillo_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Missile_Armadillo.B_Missile_Armadillo_C.SendHitResultToServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// const struct FVector&                   MissedLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   MissedDirection                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Missile_Armadillo_C::SendHitResultToServer(const struct FHitResult& HitResult, const struct FVector& MissedLocation, const struct FVector& MissedDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Missile_Armadillo_C", "SendHitResultToServer");

	Params::B_Missile_Armadillo_C_SendHitResultToServer Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.MissedLocation = std::move(MissedLocation);
	Parms.MissedDirection = std::move(MissedDirection);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Missile_Armadillo.B_Missile_Armadillo_C.SpawnNS
// (BlueprintCallable, BlueprintEvent)

void AB_Missile_Armadillo_C::SpawnNS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Missile_Armadillo_C", "SpawnNS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Missile_Armadillo.B_Missile_Armadillo_C.TraceForMissile
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitResult&                HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AB_Missile_Armadillo_C::TraceForMissile(const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Missile_Armadillo_C", "TraceForMissile");

	Params::B_Missile_Armadillo_C_TraceForMissile Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Missile_Armadillo.B_Missile_Armadillo_C.ViewPoint
// (BlueprintCallable, BlueprintEvent)

void AB_Missile_Armadillo_C::ViewPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Missile_Armadillo_C", "ViewPoint");

	UObject::ProcessEvent(Func, nullptr);
}

}

