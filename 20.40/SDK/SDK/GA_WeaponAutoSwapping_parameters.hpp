#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_WeaponAutoSwapping

#include "Basic.hpp"

#include "SpecialEventGameplayRuntime_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function GA_WeaponAutoSwapping.GA_WeaponAutoSwapping_C.ExecuteUbergraph_GA_WeaponAutoSwapping
// 0x00D0 (0x00D0 - 0x0000)
struct GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon)> K2Node_CreateDelegate_OutputDelegate; // 0x0004(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFortAthenaMutator_SpecialEvent*        CallFunc_GetSpecialEventMutator_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FSpecialClientEvent& ClientEventData)> K2Node_CreateDelegate_OutputDelegate_1; // 0x0018(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSpecialClientEvent                    K2Node_CustomEvent_ClientEventData;                // 0x0028(0x0018)(NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeapon*                            K2Node_CustomEvent_NewWeapon;                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWeapon*                            K2Node_CustomEvent_PrevWeapon;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWeaponRanged*                      K2Node_DynamicCast_AsFort_Weapon_Ranged;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_CurrentValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MaxValue;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortWeaponOverheatState                      K2Node_CustomEvent_State;                          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsInCooldown;                  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F[0x1];                                       // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFirstLocalFortPlayerController_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeapon*                            CallFunc_GetCurrentWeapon_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  CallFunc_GetFirstLocalFortPlayerController_ReturnValue_1; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortControllerComponent_SpecialEvent*  CallFunc_FindSpecialEventComponent_ReturnValue;    // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsFort_Weapon_Ranged;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNextWeapon_Index;                      // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNextWeapon_Found;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3[0x1];                                       // 0x00C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float CurrentValue, float MaxValue, EFortWeaponOverheatState State, bool bIsInCooldown)> K2Node_CreateDelegate_OutputDelegate_2; // 0x00C4(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping) == 0x000008, "Wrong alignment on GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping");
static_assert(sizeof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping) == 0x0000D0, "Wrong size on GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, EntryPoint) == 0x000000, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, CallFunc_GetSpecialEventMutator_ReturnValue) == 0x000010, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::CallFunc_GetSpecialEventMutator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, K2Node_CustomEvent_ClientEventData) == 0x000028, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::K2Node_CustomEvent_ClientEventData' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000040, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, K2Node_CustomEvent_NewWeapon) == 0x000048, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::K2Node_CustomEvent_NewWeapon' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, K2Node_CustomEvent_PrevWeapon) == 0x000050, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::K2Node_CustomEvent_PrevWeapon' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, K2Node_DynamicCast_AsFort_Weapon_Ranged) == 0x000058, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::K2Node_DynamicCast_AsFort_Weapon_Ranged' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, K2Node_CustomEvent_CurrentValue) == 0x000064, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::K2Node_CustomEvent_CurrentValue' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, K2Node_CustomEvent_MaxValue) == 0x000068, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::K2Node_CustomEvent_MaxValue' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, K2Node_CustomEvent_State) == 0x00006C, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::K2Node_CustomEvent_State' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, K2Node_CustomEvent_bIsInCooldown) == 0x00006D, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::K2Node_CustomEvent_bIsInCooldown' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00006E, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, CallFunc_GetFirstLocalFortPlayerController_ReturnValue) == 0x000070, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::CallFunc_GetFirstLocalFortPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, CallFunc_K2_GetPawn_ReturnValue) == 0x000078, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, K2Node_DynamicCast_AsFort_Pawn) == 0x000080, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, CallFunc_GetCurrentWeapon_ReturnValue) == 0x000090, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::CallFunc_GetCurrentWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, CallFunc_GetFirstLocalFortPlayerController_ReturnValue_1) == 0x000098, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::CallFunc_GetFirstLocalFortPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, CallFunc_GetObjectClass_ReturnValue) == 0x0000A0, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, CallFunc_FindSpecialEventComponent_ReturnValue) == 0x0000A8, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::CallFunc_FindSpecialEventComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, K2Node_ClassDynamicCast_AsFort_Weapon_Ranged) == 0x0000B0, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::K2Node_ClassDynamicCast_AsFort_Weapon_Ranged' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, K2Node_ClassDynamicCast_bSuccess) == 0x0000B8, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, CallFunc_IsValid_ReturnValue_1) == 0x0000B9, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, CallFunc_GetNextWeapon_Index) == 0x0000BC, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::CallFunc_GetNextWeapon_Index' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, CallFunc_GetNextWeapon_Found) == 0x0000C0, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::CallFunc_GetNextWeapon_Found' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, CallFunc_IsValid_ReturnValue_2) == 0x0000C1, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000C2, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000C4, "Member 'GA_WeaponAutoSwapping_C_ExecuteUbergraph_GA_WeaponAutoSwapping::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function GA_WeaponAutoSwapping.GA_WeaponAutoSwapping_C.GetNextWeapon
// 0x0050 (0x0050 - 0x0000)
struct GA_WeaponAutoSwapping_C_GetNextWeapon final
{
public:
	const class UClass*                           ItemToFind;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_WeaponAutoSwapping_C_GetNextWeapon) == 0x000008, "Wrong alignment on GA_WeaponAutoSwapping_C_GetNextWeapon");
static_assert(sizeof(GA_WeaponAutoSwapping_C_GetNextWeapon) == 0x000050, "Wrong size on GA_WeaponAutoSwapping_C_GetNextWeapon");
static_assert(offsetof(GA_WeaponAutoSwapping_C_GetNextWeapon, ItemToFind) == 0x000000, "Member 'GA_WeaponAutoSwapping_C_GetNextWeapon::ItemToFind' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_GetNextWeapon, Index_0) == 0x000008, "Member 'GA_WeaponAutoSwapping_C_GetNextWeapon::Index_0' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_GetNextWeapon, Found) == 0x00000C, "Member 'GA_WeaponAutoSwapping_C_GetNextWeapon::Found' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_GetNextWeapon, Temp_int_Variable) == 0x000010, "Member 'GA_WeaponAutoSwapping_C_GetNextWeapon::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_GetNextWeapon, Temp_int_Variable_1) == 0x000014, "Member 'GA_WeaponAutoSwapping_C_GetNextWeapon::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_GetNextWeapon, Temp_int_Variable_2) == 0x000018, "Member 'GA_WeaponAutoSwapping_C_GetNextWeapon::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_GetNextWeapon, Temp_int_Variable_3) == 0x00001C, "Member 'GA_WeaponAutoSwapping_C_GetNextWeapon::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_GetNextWeapon, Temp_int_Variable_4) == 0x000020, "Member 'GA_WeaponAutoSwapping_C_GetNextWeapon::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_GetNextWeapon, Temp_int_Variable_5) == 0x000024, "Member 'GA_WeaponAutoSwapping_C_GetNextWeapon::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_GetNextWeapon, Temp_int_Variable_6) == 0x000028, "Member 'GA_WeaponAutoSwapping_C_GetNextWeapon::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_GetNextWeapon, Temp_int_Variable_7) == 0x00002C, "Member 'GA_WeaponAutoSwapping_C_GetNextWeapon::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_GetNextWeapon, CallFunc_Array_Find_ReturnValue) == 0x000030, "Member 'GA_WeaponAutoSwapping_C_GetNextWeapon::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_GetNextWeapon, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000034, "Member 'GA_WeaponAutoSwapping_C_GetNextWeapon::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_GetNextWeapon, CallFunc_Array_Find_ReturnValue_1) == 0x000038, "Member 'GA_WeaponAutoSwapping_C_GetNextWeapon::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_GetNextWeapon, K2Node_Select_Default) == 0x00003C, "Member 'GA_WeaponAutoSwapping_C_GetNextWeapon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_GetNextWeapon, K2Node_Select_Default_1) == 0x000040, "Member 'GA_WeaponAutoSwapping_C_GetNextWeapon::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_GetNextWeapon, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000044, "Member 'GA_WeaponAutoSwapping_C_GetNextWeapon::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_GetNextWeapon, CallFunc_SelectInt_ReturnValue) == 0x000048, "Member 'GA_WeaponAutoSwapping_C_GetNextWeapon::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_GetNextWeapon, CallFunc_BooleanOR_ReturnValue) == 0x00004C, "Member 'GA_WeaponAutoSwapping_C_GetNextWeapon::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function GA_WeaponAutoSwapping.GA_WeaponAutoSwapping_C.OnOverheatChanged
// 0x000C (0x000C - 0x0000)
struct GA_WeaponAutoSwapping_C_OnOverheatChanged final
{
public:
	float                                         CurrentValue;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortWeaponOverheatState                      State;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInCooldown;                                     // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_WeaponAutoSwapping_C_OnOverheatChanged) == 0x000004, "Wrong alignment on GA_WeaponAutoSwapping_C_OnOverheatChanged");
static_assert(sizeof(GA_WeaponAutoSwapping_C_OnOverheatChanged) == 0x00000C, "Wrong size on GA_WeaponAutoSwapping_C_OnOverheatChanged");
static_assert(offsetof(GA_WeaponAutoSwapping_C_OnOverheatChanged, CurrentValue) == 0x000000, "Member 'GA_WeaponAutoSwapping_C_OnOverheatChanged::CurrentValue' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_OnOverheatChanged, MaxValue) == 0x000004, "Member 'GA_WeaponAutoSwapping_C_OnOverheatChanged::MaxValue' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_OnOverheatChanged, State) == 0x000008, "Member 'GA_WeaponAutoSwapping_C_OnOverheatChanged::State' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_OnOverheatChanged, bIsInCooldown) == 0x000009, "Member 'GA_WeaponAutoSwapping_C_OnOverheatChanged::bIsInCooldown' has a wrong offset!");

// Function GA_WeaponAutoSwapping.GA_WeaponAutoSwapping_C.SpecialEventClient
// 0x0018 (0x0018 - 0x0000)
struct GA_WeaponAutoSwapping_C_SpecialEventClient final
{
public:
	struct FSpecialClientEvent                    ClientEventData;                                   // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(GA_WeaponAutoSwapping_C_SpecialEventClient) == 0x000008, "Wrong alignment on GA_WeaponAutoSwapping_C_SpecialEventClient");
static_assert(sizeof(GA_WeaponAutoSwapping_C_SpecialEventClient) == 0x000018, "Wrong size on GA_WeaponAutoSwapping_C_SpecialEventClient");
static_assert(offsetof(GA_WeaponAutoSwapping_C_SpecialEventClient, ClientEventData) == 0x000000, "Member 'GA_WeaponAutoSwapping_C_SpecialEventClient::ClientEventData' has a wrong offset!");

// Function GA_WeaponAutoSwapping.GA_WeaponAutoSwapping_C.WeaponChanged
// 0x0010 (0x0010 - 0x0000)
struct GA_WeaponAutoSwapping_C_WeaponChanged final
{
public:
	class AFortWeapon*                            NewWeapon;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWeapon*                            PrevWeapon;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_WeaponAutoSwapping_C_WeaponChanged) == 0x000008, "Wrong alignment on GA_WeaponAutoSwapping_C_WeaponChanged");
static_assert(sizeof(GA_WeaponAutoSwapping_C_WeaponChanged) == 0x000010, "Wrong size on GA_WeaponAutoSwapping_C_WeaponChanged");
static_assert(offsetof(GA_WeaponAutoSwapping_C_WeaponChanged, NewWeapon) == 0x000000, "Member 'GA_WeaponAutoSwapping_C_WeaponChanged::NewWeapon' has a wrong offset!");
static_assert(offsetof(GA_WeaponAutoSwapping_C_WeaponChanged, PrevWeapon) == 0x000008, "Member 'GA_WeaponAutoSwapping_C_WeaponChanged::PrevWeapon' has a wrong offset!");

}

