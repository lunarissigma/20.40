#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Shotgun_Ostrich_test

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Shotgun_Ostrich_test.B_Shotgun_Ostrich_test_C
// 0x0030 (0x1700 - 0x16D0)
class AB_Shotgun_Ostrich_test_C final : public AFortWeaponRanged_Ostrich
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x16D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USoundBase*                             Sound_LoadMissile;                                 // 0x16D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_RocketFire;                                  // 0x16E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   RocketFireForceFeedback;                           // 0x16E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   RocketLoadForceFeedback;                           // 0x16F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   ShotgunFireForceFeedback;                          // 0x16F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Shotgun_Ostrich_test(int32 EntryPoint);
	void OnLoadedRockets(int32 NumRocketsLoaded);
	void OnPlayWeaponFireFX(bool bPersistentFire, bool bSecondaryFire);
	void OnRocketFired(class USceneComponent* AttachToMesh, class FName AttachToSocket);
	void OnRocketFiringStarted(class USceneComponent* AttachToMesh, class FName AttachToSocket);
	void OnRocketLauncherSettle(class USceneComponent* AttachToMesh, class FName AttachToSocket);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Shotgun_Ostrich_test_C">();
	}
	static class AB_Shotgun_Ostrich_test_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Shotgun_Ostrich_test_C>();
	}
};
static_assert(alignof(AB_Shotgun_Ostrich_test_C) == 0x000008, "Wrong alignment on AB_Shotgun_Ostrich_test_C");
static_assert(sizeof(AB_Shotgun_Ostrich_test_C) == 0x001700, "Wrong size on AB_Shotgun_Ostrich_test_C");
static_assert(offsetof(AB_Shotgun_Ostrich_test_C, UberGraphFrame) == 0x0016D0, "Member 'AB_Shotgun_Ostrich_test_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Shotgun_Ostrich_test_C, Sound_LoadMissile) == 0x0016D8, "Member 'AB_Shotgun_Ostrich_test_C::Sound_LoadMissile' has a wrong offset!");
static_assert(offsetof(AB_Shotgun_Ostrich_test_C, Sound_RocketFire) == 0x0016E0, "Member 'AB_Shotgun_Ostrich_test_C::Sound_RocketFire' has a wrong offset!");
static_assert(offsetof(AB_Shotgun_Ostrich_test_C, RocketFireForceFeedback) == 0x0016E8, "Member 'AB_Shotgun_Ostrich_test_C::RocketFireForceFeedback' has a wrong offset!");
static_assert(offsetof(AB_Shotgun_Ostrich_test_C, RocketLoadForceFeedback) == 0x0016F0, "Member 'AB_Shotgun_Ostrich_test_C::RocketLoadForceFeedback' has a wrong offset!");
static_assert(offsetof(AB_Shotgun_Ostrich_test_C, ShotgunFireForceFeedback) == 0x0016F8, "Member 'AB_Shotgun_Ostrich_test_C::ShotgunFireForceFeedback' has a wrong offset!");

}

