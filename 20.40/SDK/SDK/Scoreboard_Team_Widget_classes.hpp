#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Scoreboard_Team_Widget

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Scoreboard_Team_Widget.Scoreboard_Team_Widget_C
// 0x00D8 (0x0350 - 0x0278)
class UScoreboard_Team_Widget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_65;                                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcherLegacy*            PlacementIndicator_Switcher;                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               PlacementIndicatorBox;                             // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScoreboard_Bronze_C*                   Scoreboard_Bronze;                                 // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScoreboard_Gold_C*                     Scoreboard_Gold;                                   // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScoreboard_Silver_C*                   Scoreboard_Silver;                                 // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                TeamColor_IndicatorBar;                            // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         TeamInfo;                                          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             TeamList;                                          // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TeamName;                                          // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               TeamScoreBox;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TeamScoreText;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bShowVictoryScore;                                 // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UScoreboard_UI_Row_C*>           TeamPlayers;                                       // 0x02E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FMinigameScoreboardBucketRow           TeamScoreboardBucket;                              // 0x02F8(0x0050)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          UpdatedFromConstruct;                              // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIngameTeamScore;                                  // 0x0349(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_34A[0x2];                                      // 0x034A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TeamColorParam;                                    // 0x034C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ClearTeamPlayers();
	void Construct();
	void ExecuteUbergraph_Scoreboard_Team_Widget(int32 EntryPoint);
	void GetWidgetForPlayerState(class APlayerState* PlayerState, class UWidget** Widget);
	void MakePlayerRow(const struct FMinigameScoreboardPlayerRow& PlayerData);
	void PreConstruct(bool IsDesignTime);
	void UpdateMedalStanding(int32 Standing);
	void UpdateTeamData(const struct FMinigameScoreboardBucketRow& TeamBucketData, bool ShowVictoryScore);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Scoreboard_Team_Widget_C">();
	}
	static class UScoreboard_Team_Widget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScoreboard_Team_Widget_C>();
	}
};
static_assert(alignof(UScoreboard_Team_Widget_C) == 0x000008, "Wrong alignment on UScoreboard_Team_Widget_C");
static_assert(sizeof(UScoreboard_Team_Widget_C) == 0x000350, "Wrong size on UScoreboard_Team_Widget_C");
static_assert(offsetof(UScoreboard_Team_Widget_C, UberGraphFrame) == 0x000278, "Member 'UScoreboard_Team_Widget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UScoreboard_Team_Widget_C, Image_65) == 0x000280, "Member 'UScoreboard_Team_Widget_C::Image_65' has a wrong offset!");
static_assert(offsetof(UScoreboard_Team_Widget_C, PlacementIndicator_Switcher) == 0x000288, "Member 'UScoreboard_Team_Widget_C::PlacementIndicator_Switcher' has a wrong offset!");
static_assert(offsetof(UScoreboard_Team_Widget_C, PlacementIndicatorBox) == 0x000290, "Member 'UScoreboard_Team_Widget_C::PlacementIndicatorBox' has a wrong offset!");
static_assert(offsetof(UScoreboard_Team_Widget_C, Scoreboard_Bronze) == 0x000298, "Member 'UScoreboard_Team_Widget_C::Scoreboard_Bronze' has a wrong offset!");
static_assert(offsetof(UScoreboard_Team_Widget_C, Scoreboard_Gold) == 0x0002A0, "Member 'UScoreboard_Team_Widget_C::Scoreboard_Gold' has a wrong offset!");
static_assert(offsetof(UScoreboard_Team_Widget_C, Scoreboard_Silver) == 0x0002A8, "Member 'UScoreboard_Team_Widget_C::Scoreboard_Silver' has a wrong offset!");
static_assert(offsetof(UScoreboard_Team_Widget_C, TeamColor_IndicatorBar) == 0x0002B0, "Member 'UScoreboard_Team_Widget_C::TeamColor_IndicatorBar' has a wrong offset!");
static_assert(offsetof(UScoreboard_Team_Widget_C, TeamInfo) == 0x0002B8, "Member 'UScoreboard_Team_Widget_C::TeamInfo' has a wrong offset!");
static_assert(offsetof(UScoreboard_Team_Widget_C, TeamList) == 0x0002C0, "Member 'UScoreboard_Team_Widget_C::TeamList' has a wrong offset!");
static_assert(offsetof(UScoreboard_Team_Widget_C, TeamName) == 0x0002C8, "Member 'UScoreboard_Team_Widget_C::TeamName' has a wrong offset!");
static_assert(offsetof(UScoreboard_Team_Widget_C, TeamScoreBox) == 0x0002D0, "Member 'UScoreboard_Team_Widget_C::TeamScoreBox' has a wrong offset!");
static_assert(offsetof(UScoreboard_Team_Widget_C, TeamScoreText) == 0x0002D8, "Member 'UScoreboard_Team_Widget_C::TeamScoreText' has a wrong offset!");
static_assert(offsetof(UScoreboard_Team_Widget_C, bShowVictoryScore) == 0x0002E0, "Member 'UScoreboard_Team_Widget_C::bShowVictoryScore' has a wrong offset!");
static_assert(offsetof(UScoreboard_Team_Widget_C, TeamPlayers) == 0x0002E8, "Member 'UScoreboard_Team_Widget_C::TeamPlayers' has a wrong offset!");
static_assert(offsetof(UScoreboard_Team_Widget_C, TeamScoreboardBucket) == 0x0002F8, "Member 'UScoreboard_Team_Widget_C::TeamScoreboardBucket' has a wrong offset!");
static_assert(offsetof(UScoreboard_Team_Widget_C, UpdatedFromConstruct) == 0x000348, "Member 'UScoreboard_Team_Widget_C::UpdatedFromConstruct' has a wrong offset!");
static_assert(offsetof(UScoreboard_Team_Widget_C, bIngameTeamScore) == 0x000349, "Member 'UScoreboard_Team_Widget_C::bIngameTeamScore' has a wrong offset!");
static_assert(offsetof(UScoreboard_Team_Widget_C, TeamColorParam) == 0x00034C, "Member 'UScoreboard_Team_Widget_C::TeamColorParam' has a wrong offset!");

}

