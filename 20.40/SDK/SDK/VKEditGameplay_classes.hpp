#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VKEditGameplay

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "VKEditGameplay_structs.hpp"


namespace SDK
{

// Class VKEditGameplay.VKEditPlayspace
// 0x0090 (0x0640 - 0x05B0)
class AVKEditPlayspace final : public AFortPlayspace
{
public:
	uint8                                         Pad_5B0[0x18];                                     // 0x05B0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   EditorOnlyMinigameSettingsMachineClassToSpawn;     // 0x05C8(0x0028)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortLevelStreamComponent*              LevelStreamComponent;                              // 0x05F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortProjectEditComponent*              ProjectEditComponent;                              // 0x05F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayspaceComponent_PlayStopPauseManager* PlayStopPauseManager;                            // 0x0600(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayspaceComponent_EditConnectionManager* EditConnectionManager;                          // 0x0608(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayspaceComponent_LiveEdit*           LiveEditComponent;                                 // 0x0610(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayspaceComponent_CreativeToolsPermission* CreativeToolsPermission;                      // 0x0618(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayspaceComponent_CreativeLoadingStateProxy* CreativeLoadingStateProxy;                  // 0x0620(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayspaceComponent_SpatialGameplay*    SpatialGameplayComponent;                          // 0x0628(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFortVolumeObjectTrackingComponent*     ObjectTrackingComponent;                           // 0x0630(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayspaceComponent_HUDVisibilityComponent* HUDVisibilityComponent;                        // 0x0638(0x0008)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnClientActivatedContent(const struct FUniqueNetIdRepl& ClientNetId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VKEditPlayspace">();
	}
	static class AVKEditPlayspace* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVKEditPlayspace>();
	}
};
static_assert(alignof(AVKEditPlayspace) == 0x000008, "Wrong alignment on AVKEditPlayspace");
static_assert(sizeof(AVKEditPlayspace) == 0x000640, "Wrong size on AVKEditPlayspace");
static_assert(offsetof(AVKEditPlayspace, EditorOnlyMinigameSettingsMachineClassToSpawn) == 0x0005C8, "Member 'AVKEditPlayspace::EditorOnlyMinigameSettingsMachineClassToSpawn' has a wrong offset!");
static_assert(offsetof(AVKEditPlayspace, LevelStreamComponent) == 0x0005F0, "Member 'AVKEditPlayspace::LevelStreamComponent' has a wrong offset!");
static_assert(offsetof(AVKEditPlayspace, ProjectEditComponent) == 0x0005F8, "Member 'AVKEditPlayspace::ProjectEditComponent' has a wrong offset!");
static_assert(offsetof(AVKEditPlayspace, PlayStopPauseManager) == 0x000600, "Member 'AVKEditPlayspace::PlayStopPauseManager' has a wrong offset!");
static_assert(offsetof(AVKEditPlayspace, EditConnectionManager) == 0x000608, "Member 'AVKEditPlayspace::EditConnectionManager' has a wrong offset!");
static_assert(offsetof(AVKEditPlayspace, LiveEditComponent) == 0x000610, "Member 'AVKEditPlayspace::LiveEditComponent' has a wrong offset!");
static_assert(offsetof(AVKEditPlayspace, CreativeToolsPermission) == 0x000618, "Member 'AVKEditPlayspace::CreativeToolsPermission' has a wrong offset!");
static_assert(offsetof(AVKEditPlayspace, CreativeLoadingStateProxy) == 0x000620, "Member 'AVKEditPlayspace::CreativeLoadingStateProxy' has a wrong offset!");
static_assert(offsetof(AVKEditPlayspace, SpatialGameplayComponent) == 0x000628, "Member 'AVKEditPlayspace::SpatialGameplayComponent' has a wrong offset!");
static_assert(offsetof(AVKEditPlayspace, ObjectTrackingComponent) == 0x000630, "Member 'AVKEditPlayspace::ObjectTrackingComponent' has a wrong offset!");
static_assert(offsetof(AVKEditPlayspace, HUDVisibilityComponent) == 0x000638, "Member 'AVKEditPlayspace::HUDVisibilityComponent' has a wrong offset!");

// Class VKEditGameplay.PlayspaceComponent_EditConnectionManager
// 0x0030 (0x0128 - 0x00F8)
class UPlayspaceComponent_EditConnectionManager final : public UFortPlayspaceComponent
{
public:
	TMulticastInlineDelegate<void(bool bConnected)> OnEditconnectionChanged;                         // 0x00F8(0x0010)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_108[0x18];                                     // 0x0108(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EditConnections;                                   // 0x0120(0x0004)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_EditConnections();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayspaceComponent_EditConnectionManager">();
	}
	static class UPlayspaceComponent_EditConnectionManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayspaceComponent_EditConnectionManager>();
	}
};
static_assert(alignof(UPlayspaceComponent_EditConnectionManager) == 0x000008, "Wrong alignment on UPlayspaceComponent_EditConnectionManager");
static_assert(sizeof(UPlayspaceComponent_EditConnectionManager) == 0x000128, "Wrong size on UPlayspaceComponent_EditConnectionManager");
static_assert(offsetof(UPlayspaceComponent_EditConnectionManager, OnEditconnectionChanged) == 0x0000F8, "Member 'UPlayspaceComponent_EditConnectionManager::OnEditconnectionChanged' has a wrong offset!");
static_assert(offsetof(UPlayspaceComponent_EditConnectionManager, EditConnections) == 0x000120, "Member 'UPlayspaceComponent_EditConnectionManager::EditConnections' has a wrong offset!");

// Class VKEditGameplay.PlayspaceComponent_HUDVisibilityComponent
// 0x0038 (0x0130 - 0x00F8)
class UPlayspaceComponent_HUDVisibilityComponent final : public UFortPlayspaceComponent
{
public:
	struct FGameplayTagContainer                  UITagsToHide;                                      // 0x00F8(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FReplicatedUIState>             PlayersToHideUIFor;                                // 0x0118(0x0010)(Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                          bMatchHasStarted;                                  // 0x0128(0x0001)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bLocalIsHUDHidden;                                 // 0x0129(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRep_MatchHasStarted();
	void OnRep_PlayersToHideUIFor();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayspaceComponent_HUDVisibilityComponent">();
	}
	static class UPlayspaceComponent_HUDVisibilityComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayspaceComponent_HUDVisibilityComponent>();
	}
};
static_assert(alignof(UPlayspaceComponent_HUDVisibilityComponent) == 0x000008, "Wrong alignment on UPlayspaceComponent_HUDVisibilityComponent");
static_assert(sizeof(UPlayspaceComponent_HUDVisibilityComponent) == 0x000130, "Wrong size on UPlayspaceComponent_HUDVisibilityComponent");
static_assert(offsetof(UPlayspaceComponent_HUDVisibilityComponent, UITagsToHide) == 0x0000F8, "Member 'UPlayspaceComponent_HUDVisibilityComponent::UITagsToHide' has a wrong offset!");
static_assert(offsetof(UPlayspaceComponent_HUDVisibilityComponent, PlayersToHideUIFor) == 0x000118, "Member 'UPlayspaceComponent_HUDVisibilityComponent::PlayersToHideUIFor' has a wrong offset!");
static_assert(offsetof(UPlayspaceComponent_HUDVisibilityComponent, bMatchHasStarted) == 0x000128, "Member 'UPlayspaceComponent_HUDVisibilityComponent::bMatchHasStarted' has a wrong offset!");
static_assert(offsetof(UPlayspaceComponent_HUDVisibilityComponent, bLocalIsHUDHidden) == 0x000129, "Member 'UPlayspaceComponent_HUDVisibilityComponent::bLocalIsHUDHidden' has a wrong offset!");

}

