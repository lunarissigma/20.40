#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Missile_Armadillo

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Armadillo_Struct_Missile_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "B_Assault_Auto_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Missile_Armadillo.B_Missile_Armadillo_C
// 0x02E8 (0x1998 - 0x16B0)
class AB_Missile_Armadillo_C : public AB_Assault_Auto_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_Missile_Armadillo_C;              // 0x16B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        FireAudio;                                         // 0x16B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArmadillo_ShooterWeaponTraceIgnoreActorsComponent_C* Armadillo_ShooterWeaponTraceIgnoreActorsComponent; // 0x16C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        MissileSpawnPoint;                                 // 0x16C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpecialEventCursorWeaponComponent*     SpecialEventCursorWeapon;                          // 0x16D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFXSystemComponent*                     SpawnedMissileFX;                                  // 0x16D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfMissiles;                                  // 0x16E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FireRate;                                          // 0x16E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TravelDuration;                                    // 0x16E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16EC[0x4];                                     // 0x16EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetHoming;                                      // 0x16F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           MissileExplosionGCN;                               // 0x16F8(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16FC[0x4];                                     // 0x16FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HomingLocation;                                    // 0x1700(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AOERadius;                                         // 0x1718(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171C[0x4];                                     // 0x171C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                AoEOrigin;                                         // 0x1720(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TraceDistance;                                     // 0x1738(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_173C[0x4];                                     // 0x173C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitNormal;                                         // 0x1740(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LockedOn;                                          // 0x1758(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1759[0x7];                                     // 0x1759(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           ExplosionTimer;                                    // 0x1760(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CachedDamageEffectContext;                         // 0x1768(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FHitResult                             Hit_Result;                                        // 0x1780(0x00E0)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                Missed_Location;                                   // 0x1860(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Missed_Direction;                                  // 0x1878(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsShield;                                         // 0x1890(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1891[0x3];                                     // 0x1891(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AoEMaxDamage;                                      // 0x1894(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             OverheatingSound;                                  // 0x1898(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundMix*                              Duck_SFX_Mix_Modifier;                             // 0x18A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(bool On)>       WeaponOverlap;                                     // 0x18A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class AActor*                                 LockedActor;                                       // 0x18B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         firehack;                                          // 0x18C0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C4[0x4];                                     // 0x18C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  LocalOwningController;                             // 0x18C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FArmadillo_Struct_Missile              StructTargetA;                                     // 0x18D0(0x0040)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FArmadillo_Struct_Missile              StructTargetB;                                     // 0x1910(0x0040)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NSTargeting;                                       // 0x1950(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             FireFailSound;                                     // 0x1958(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Fire1pSound;                                       // 0x1960(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Fire3pSound;                                       // 0x1968(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsShip;                                           // 0x1970(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1971[0x7];                                     // 0x1971(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DebrisShip;                                        // 0x1978(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ArmadilloPlayerStateComponent_C*    ArmadilloPlayerStateComp;                          // 0x1980(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundEffectSourcePresetChain*          SourceEffectChain;                                 // 0x1988(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAudioComponent*                        InAirLoop;                                         // 0x1990(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ApplyAoE(class AActor* Instigator_0, const struct FVector& Location, class AActor* HomingTarget, bool bIsShield_0);
	void ExecuteUbergraph_B_Missile_Armadillo(int32 EntryPoint);
	void Explosion(const struct FArmadillo_Struct_Missile& Target);
	void fillStructMissile(struct FArmadillo_Struct_Missile* StructTarget);
	void FireMis();
	void HandleWeaponFiltering();
	void On_Overheating_Value(float CurrentValue, float MaxValue, EFortWeaponOverheatState State, bool bIsInCooldown);
	void OnLocalFailedToFireWhenOverheated();
	void OnPlayWeaponFireFX(bool bPersistentFire, bool bSecondaryFire);
	void OnRep_firehack();
	void OnStartOverheated();
	void OnWeaponAttached();
	void PlayInAirSound();
	void ReceiveBeginPlay();
	void SendHitResultToServer(const struct FHitResult& HitResult, const struct FVector& MissedLocation, const struct FVector& MissedDirection);
	void SpawnNS();
	void TraceForMissile(const struct FHitResult& HitResult);
	void ViewPoint();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Missile_Armadillo_C">();
	}
	static class AB_Missile_Armadillo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Missile_Armadillo_C>();
	}
};
static_assert(alignof(AB_Missile_Armadillo_C) == 0x000008, "Wrong alignment on AB_Missile_Armadillo_C");
static_assert(sizeof(AB_Missile_Armadillo_C) == 0x001998, "Wrong size on AB_Missile_Armadillo_C");
static_assert(offsetof(AB_Missile_Armadillo_C, UberGraphFrame_B_Missile_Armadillo_C) == 0x0016B0, "Member 'AB_Missile_Armadillo_C::UberGraphFrame_B_Missile_Armadillo_C' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, FireAudio) == 0x0016B8, "Member 'AB_Missile_Armadillo_C::FireAudio' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, Armadillo_ShooterWeaponTraceIgnoreActorsComponent) == 0x0016C0, "Member 'AB_Missile_Armadillo_C::Armadillo_ShooterWeaponTraceIgnoreActorsComponent' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, MissileSpawnPoint) == 0x0016C8, "Member 'AB_Missile_Armadillo_C::MissileSpawnPoint' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, SpecialEventCursorWeapon) == 0x0016D0, "Member 'AB_Missile_Armadillo_C::SpecialEventCursorWeapon' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, SpawnedMissileFX) == 0x0016D8, "Member 'AB_Missile_Armadillo_C::SpawnedMissileFX' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, NumberOfMissiles) == 0x0016E0, "Member 'AB_Missile_Armadillo_C::NumberOfMissiles' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, FireRate) == 0x0016E4, "Member 'AB_Missile_Armadillo_C::FireRate' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, TravelDuration) == 0x0016E8, "Member 'AB_Missile_Armadillo_C::TravelDuration' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, TargetHoming) == 0x0016F0, "Member 'AB_Missile_Armadillo_C::TargetHoming' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, MissileExplosionGCN) == 0x0016F8, "Member 'AB_Missile_Armadillo_C::MissileExplosionGCN' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, HomingLocation) == 0x001700, "Member 'AB_Missile_Armadillo_C::HomingLocation' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, AOERadius) == 0x001718, "Member 'AB_Missile_Armadillo_C::AOERadius' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, AoEOrigin) == 0x001720, "Member 'AB_Missile_Armadillo_C::AoEOrigin' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, TraceDistance) == 0x001738, "Member 'AB_Missile_Armadillo_C::TraceDistance' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, HitNormal) == 0x001740, "Member 'AB_Missile_Armadillo_C::HitNormal' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, LockedOn) == 0x001758, "Member 'AB_Missile_Armadillo_C::LockedOn' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, ExplosionTimer) == 0x001760, "Member 'AB_Missile_Armadillo_C::ExplosionTimer' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, CachedDamageEffectContext) == 0x001768, "Member 'AB_Missile_Armadillo_C::CachedDamageEffectContext' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, Hit_Result) == 0x001780, "Member 'AB_Missile_Armadillo_C::Hit_Result' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, Missed_Location) == 0x001860, "Member 'AB_Missile_Armadillo_C::Missed_Location' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, Missed_Direction) == 0x001878, "Member 'AB_Missile_Armadillo_C::Missed_Direction' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, bIsShield) == 0x001890, "Member 'AB_Missile_Armadillo_C::bIsShield' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, AoEMaxDamage) == 0x001894, "Member 'AB_Missile_Armadillo_C::AoEMaxDamage' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, OverheatingSound) == 0x001898, "Member 'AB_Missile_Armadillo_C::OverheatingSound' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, Duck_SFX_Mix_Modifier) == 0x0018A0, "Member 'AB_Missile_Armadillo_C::Duck_SFX_Mix_Modifier' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, WeaponOverlap) == 0x0018A8, "Member 'AB_Missile_Armadillo_C::WeaponOverlap' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, LockedActor) == 0x0018B8, "Member 'AB_Missile_Armadillo_C::LockedActor' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, firehack) == 0x0018C0, "Member 'AB_Missile_Armadillo_C::firehack' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, LocalOwningController) == 0x0018C8, "Member 'AB_Missile_Armadillo_C::LocalOwningController' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, StructTargetA) == 0x0018D0, "Member 'AB_Missile_Armadillo_C::StructTargetA' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, StructTargetB) == 0x001910, "Member 'AB_Missile_Armadillo_C::StructTargetB' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, NSTargeting) == 0x001950, "Member 'AB_Missile_Armadillo_C::NSTargeting' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, FireFailSound) == 0x001958, "Member 'AB_Missile_Armadillo_C::FireFailSound' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, Fire1pSound) == 0x001960, "Member 'AB_Missile_Armadillo_C::Fire1pSound' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, Fire3pSound) == 0x001968, "Member 'AB_Missile_Armadillo_C::Fire3pSound' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, bIsShip) == 0x001970, "Member 'AB_Missile_Armadillo_C::bIsShip' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, DebrisShip) == 0x001978, "Member 'AB_Missile_Armadillo_C::DebrisShip' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, ArmadilloPlayerStateComp) == 0x001980, "Member 'AB_Missile_Armadillo_C::ArmadilloPlayerStateComp' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, SourceEffectChain) == 0x001988, "Member 'AB_Missile_Armadillo_C::SourceEffectChain' has a wrong offset!");
static_assert(offsetof(AB_Missile_Armadillo_C, InAirLoop) == 0x001990, "Member 'AB_Missile_Armadillo_C::InAirLoop' has a wrong offset!");

}

