#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortCosmeticItemCard

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass FortCosmeticItemCard.FortCosmeticItemCard_C
// 0x0020 (0x0360 - 0x0340)
class UFortCosmeticItemCard_C final : public UFortCosmeticItemCard
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Hover;                                        // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ImageMaterial_NewItemCard;                         // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseIconScale;                                     // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimationIconScale;                                // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_FortCosmeticItemCard(int32 EntryPoint);
	void HandleUpdateRarity(const struct FFortColorPalette& RarityColors);
	void HandleUpdateVisuals(bool bIsItem, bool bIsBorderAnimated, bool IsHero, bool IsReward, bool IsShuffleItem);
	void OnHover();
	void OnSizeChanged(float InCardWidth);
	void OnUnhover();
	void OnUpdateEnhanced(bool bEnhanced);
	void OnUpdateItemCardIcon(class UTexture2D* Icon, float IconScale);
	void OnUpdateItemCardMaterial(class UMaterialInterface* Material);
	void OnUpdateSeriesOrRarityColors(const struct FFortColorPalette& ColorPalette);
	void SequenceEvent__ENTRYPOINTFortCosmeticItemCard_0();
	void UpdateImageIconScale();
	void UpdateVisuals(bool bIsItem, bool bIsBorderAnimated, bool bIsHero, bool bReward, bool bIsShuffleItem);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FortCosmeticItemCard_C">();
	}
	static class UFortCosmeticItemCard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFortCosmeticItemCard_C>();
	}
};
static_assert(alignof(UFortCosmeticItemCard_C) == 0x000008, "Wrong alignment on UFortCosmeticItemCard_C");
static_assert(sizeof(UFortCosmeticItemCard_C) == 0x000360, "Wrong size on UFortCosmeticItemCard_C");
static_assert(offsetof(UFortCosmeticItemCard_C, UberGraphFrame) == 0x000340, "Member 'UFortCosmeticItemCard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFortCosmeticItemCard_C, Anim_Hover) == 0x000348, "Member 'UFortCosmeticItemCard_C::Anim_Hover' has a wrong offset!");
static_assert(offsetof(UFortCosmeticItemCard_C, ImageMaterial_NewItemCard) == 0x000350, "Member 'UFortCosmeticItemCard_C::ImageMaterial_NewItemCard' has a wrong offset!");
static_assert(offsetof(UFortCosmeticItemCard_C, BaseIconScale) == 0x000358, "Member 'UFortCosmeticItemCard_C::BaseIconScale' has a wrong offset!");
static_assert(offsetof(UFortCosmeticItemCard_C, AnimationIconScale) == 0x00035C, "Member 'UFortCosmeticItemCard_C::AnimationIconScale' has a wrong offset!");

}

