#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_ZipLine_Smash

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C
// 0x0088 (0x0B58 - 0x0AD0)
class UGA_Athena_ZipLine_Smash_C final : public UFortGameplayAbility_ZiplineSmashBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AD0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0AD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UpdateIntervalForSmashVolume;                      // 0x0AE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE4[0x4];                                      // 0x0AE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 StructureDamageGE;                                 // 0x0AE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ZipLine_Athena_Harness_C*           ZiplineHarness;                                    // 0x0AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortAthenaZipline*                     Zipline;                                           // 0x0AF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    ZiplineInteractComponent;                          // 0x0B00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortCustomMovement                           DrivingCustomMovementMode;                         // 0x0B08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B09[0x3];                                      // 0x0B09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            FallImmunityGEFX;                                  // 0x0B0C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           AttachVFXCue;                                      // 0x0B14(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SmashCue;                                          // 0x0B18(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_Swimming;                                        // 0x0B1C(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_Falling;                                         // 0x0B20(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B24[0x4];                                      // 0x0B24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TagsThatBlockFallImmunityRemoval;                  // 0x0B28(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           TH_DelayFallDamageRemoval;                         // 0x0B48(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           SurroundingsCheckTimerHandle;                      // 0x0B50(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Added_57667DA14EF15649A9E09AA4184D83F2();
	void BindEvent();
	void BreakNearbyStructures(class AFortPlayerPawn* PlayerPawn_0);
	void CheckForQuestProgress();
	void CheckMotor();
	void DelaySpawnMotor();
	void EndAsyncBreakNearbyStructuresOverlap(const TArray<class AActor*>& OverlapActors);
	void EnterWaterExit(class AFortPlayerPawn* FortPlayerPawn);
	void ExecuteUbergraph_GA_Athena_ZipLine_Smash(int32 EntryPoint);
	void Get_Zipline_Motor_Offset(struct FVector* Offset);
	void Get_Zipline_Pole_A_Socket_Loc(struct FVector* PoleBSocketLoc);
	void Get_Zipline_Pole_B_Socket_Loc(struct FVector* PoleBSocketLoc);
	void GetZiplineRotationForMotor(struct FRotator* Rotation);
	void HandleClientSplineZiplineStateChanged(bool bIsZiplining);
	void HandleZiplineStateChanged(bool bIsZiplining);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void K2_OnEndAbility(bool bWasCancelled);
	void OnBeginSkydiving_Bind();
	void OnEnteredAircraft_Bind();
	void OnEnterVehicle_Bind();
	void OnPawnDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnPawnLanded_Bind(const struct FHitResult& Hit);
	void Remove_Fall_Damage_Immunity_Delayed();
	void Removed_4E9755484C178DFBE6FF8396B520588B();
	void RemoveFallDamageImmunity();
	void Spawn_Motor(class AActor* PlayerPawn_0);
	void SplineZiplineMovementModeDelayOver();
	void SurroundingsCheck();
	void SwimmingStarted();
	void ZipliningComplete();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_ZipLine_Smash_C">();
	}
	static class UGA_Athena_ZipLine_Smash_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_ZipLine_Smash_C>();
	}
};
static_assert(alignof(UGA_Athena_ZipLine_Smash_C) == 0x000008, "Wrong alignment on UGA_Athena_ZipLine_Smash_C");
static_assert(sizeof(UGA_Athena_ZipLine_Smash_C) == 0x000B58, "Wrong size on UGA_Athena_ZipLine_Smash_C");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, UberGraphFrame) == 0x000AD0, "Member 'UGA_Athena_ZipLine_Smash_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, PlayerPawn) == 0x000AD8, "Member 'UGA_Athena_ZipLine_Smash_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, UpdateIntervalForSmashVolume) == 0x000AE0, "Member 'UGA_Athena_ZipLine_Smash_C::UpdateIntervalForSmashVolume' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, StructureDamageGE) == 0x000AE8, "Member 'UGA_Athena_ZipLine_Smash_C::StructureDamageGE' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, ZiplineHarness) == 0x000AF0, "Member 'UGA_Athena_ZipLine_Smash_C::ZiplineHarness' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, Zipline) == 0x000AF8, "Member 'UGA_Athena_ZipLine_Smash_C::Zipline' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, ZiplineInteractComponent) == 0x000B00, "Member 'UGA_Athena_ZipLine_Smash_C::ZiplineInteractComponent' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, DrivingCustomMovementMode) == 0x000B08, "Member 'UGA_Athena_ZipLine_Smash_C::DrivingCustomMovementMode' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, FallImmunityGEFX) == 0x000B0C, "Member 'UGA_Athena_ZipLine_Smash_C::FallImmunityGEFX' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, AttachVFXCue) == 0x000B14, "Member 'UGA_Athena_ZipLine_Smash_C::AttachVFXCue' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, SmashCue) == 0x000B18, "Member 'UGA_Athena_ZipLine_Smash_C::SmashCue' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, T_Swimming) == 0x000B1C, "Member 'UGA_Athena_ZipLine_Smash_C::T_Swimming' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, T_Falling) == 0x000B20, "Member 'UGA_Athena_ZipLine_Smash_C::T_Falling' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, TagsThatBlockFallImmunityRemoval) == 0x000B28, "Member 'UGA_Athena_ZipLine_Smash_C::TagsThatBlockFallImmunityRemoval' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, TH_DelayFallDamageRemoval) == 0x000B48, "Member 'UGA_Athena_ZipLine_Smash_C::TH_DelayFallDamageRemoval' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_Smash_C, SurroundingsCheckTimerHandle) == 0x000B50, "Member 'UGA_Athena_ZipLine_Smash_C::SurroundingsCheckTimerHandle' has a wrong offset!");

}

