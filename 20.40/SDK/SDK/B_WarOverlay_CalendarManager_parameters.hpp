#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_WarOverlay_CalendarManager

#include "Basic.hpp"

#include "Bp_E_WarMinimap_Progression_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ImageWriteQueue_structs.hpp"


namespace SDK::Params
{

// Function B_WarOverlay_CalendarManager.B_WarOverlay_CalendarManager_C.QueryCalendarEvents
// 0x00B8 (0x00B8 - 0x0000)
struct B_WarOverlay_CalendarManager_C_QueryCalendarEvents final
{
public:
	TMap<class FString, EBp_E_WarMinimap_Progression> Events;                                        // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          EventFound;                                        // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 FoundEventName;                                    // 0x0058(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	float                                         EventTimespanRatio;                                // 0x0068(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0070(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCalendarEventInformation_bIsEventActive; // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_GetCalendarEventInformation_TimeSinceBegin; // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_GetCalendarEventInformation_TimeUntilEnd; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCalendarEventInformation_TimeSpanRatio; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WarOverlay_CalendarManager_C_QueryCalendarEvents) == 0x000008, "Wrong alignment on B_WarOverlay_CalendarManager_C_QueryCalendarEvents");
static_assert(sizeof(B_WarOverlay_CalendarManager_C_QueryCalendarEvents) == 0x0000B8, "Wrong size on B_WarOverlay_CalendarManager_C_QueryCalendarEvents");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_QueryCalendarEvents, Events) == 0x000000, "Member 'B_WarOverlay_CalendarManager_C_QueryCalendarEvents::Events' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_QueryCalendarEvents, EventFound) == 0x000050, "Member 'B_WarOverlay_CalendarManager_C_QueryCalendarEvents::EventFound' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_QueryCalendarEvents, FoundEventName) == 0x000058, "Member 'B_WarOverlay_CalendarManager_C_QueryCalendarEvents::FoundEventName' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_QueryCalendarEvents, EventTimespanRatio) == 0x000068, "Member 'B_WarOverlay_CalendarManager_C_QueryCalendarEvents::EventTimespanRatio' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_QueryCalendarEvents, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'B_WarOverlay_CalendarManager_C_QueryCalendarEvents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_QueryCalendarEvents, CallFunc_Map_Keys_Keys) == 0x000070, "Member 'B_WarOverlay_CalendarManager_C_QueryCalendarEvents::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_QueryCalendarEvents, CallFunc_Array_Get_Item) == 0x000080, "Member 'B_WarOverlay_CalendarManager_C_QueryCalendarEvents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_QueryCalendarEvents, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'B_WarOverlay_CalendarManager_C_QueryCalendarEvents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_QueryCalendarEvents, CallFunc_GetCalendarEventInformation_bIsEventActive) == 0x000094, "Member 'B_WarOverlay_CalendarManager_C_QueryCalendarEvents::CallFunc_GetCalendarEventInformation_bIsEventActive' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_QueryCalendarEvents, CallFunc_GetCalendarEventInformation_TimeSinceBegin) == 0x000098, "Member 'B_WarOverlay_CalendarManager_C_QueryCalendarEvents::CallFunc_GetCalendarEventInformation_TimeSinceBegin' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_QueryCalendarEvents, CallFunc_GetCalendarEventInformation_TimeUntilEnd) == 0x0000A0, "Member 'B_WarOverlay_CalendarManager_C_QueryCalendarEvents::CallFunc_GetCalendarEventInformation_TimeUntilEnd' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_QueryCalendarEvents, CallFunc_GetCalendarEventInformation_TimeSpanRatio) == 0x0000A8, "Member 'B_WarOverlay_CalendarManager_C_QueryCalendarEvents::CallFunc_GetCalendarEventInformation_TimeSpanRatio' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_QueryCalendarEvents, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'B_WarOverlay_CalendarManager_C_QueryCalendarEvents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_QueryCalendarEvents, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'B_WarOverlay_CalendarManager_C_QueryCalendarEvents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_QueryCalendarEvents, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'B_WarOverlay_CalendarManager_C_QueryCalendarEvents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function B_WarOverlay_CalendarManager.B_WarOverlay_CalendarManager_C.OnRep_WarMinimapProgression
// 0x0001 (0x0001 - 0x0000)
struct B_WarOverlay_CalendarManager_C_OnRep_WarMinimapProgression final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WarOverlay_CalendarManager_C_OnRep_WarMinimapProgression) == 0x000001, "Wrong alignment on B_WarOverlay_CalendarManager_C_OnRep_WarMinimapProgression");
static_assert(sizeof(B_WarOverlay_CalendarManager_C_OnRep_WarMinimapProgression) == 0x000001, "Wrong size on B_WarOverlay_CalendarManager_C_OnRep_WarMinimapProgression");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_OnRep_WarMinimapProgression, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'B_WarOverlay_CalendarManager_C_OnRep_WarMinimapProgression::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function B_WarOverlay_CalendarManager.B_WarOverlay_CalendarManager_C.OnReady_FBF86A384B85D297CFEC6B991AFC2469
// 0x0010 (0x0010 - 0x0000)
struct B_WarOverlay_CalendarManager_C_OnReady_FBF86A384B85D297CFEC6B991AFC2469 final
{
public:
	TScriptInterface<class IFortMiniMapInterface> MiniMapInterface;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(B_WarOverlay_CalendarManager_C_OnReady_FBF86A384B85D297CFEC6B991AFC2469) == 0x000008, "Wrong alignment on B_WarOverlay_CalendarManager_C_OnReady_FBF86A384B85D297CFEC6B991AFC2469");
static_assert(sizeof(B_WarOverlay_CalendarManager_C_OnReady_FBF86A384B85D297CFEC6B991AFC2469) == 0x000010, "Wrong size on B_WarOverlay_CalendarManager_C_OnReady_FBF86A384B85D297CFEC6B991AFC2469");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_OnReady_FBF86A384B85D297CFEC6B991AFC2469, MiniMapInterface) == 0x000000, "Member 'B_WarOverlay_CalendarManager_C_OnReady_FBF86A384B85D297CFEC6B991AFC2469::MiniMapInterface' has a wrong offset!");

// Function B_WarOverlay_CalendarManager.B_WarOverlay_CalendarManager_C.OnLoaded_D1CE24C24DAB6D66E97E7D87F1194270
// 0x0008 (0x0008 - 0x0000)
struct B_WarOverlay_CalendarManager_C_OnLoaded_D1CE24C24DAB6D66E97E7D87F1194270 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WarOverlay_CalendarManager_C_OnLoaded_D1CE24C24DAB6D66E97E7D87F1194270) == 0x000008, "Wrong alignment on B_WarOverlay_CalendarManager_C_OnLoaded_D1CE24C24DAB6D66E97E7D87F1194270");
static_assert(sizeof(B_WarOverlay_CalendarManager_C_OnLoaded_D1CE24C24DAB6D66E97E7D87F1194270) == 0x000008, "Wrong size on B_WarOverlay_CalendarManager_C_OnLoaded_D1CE24C24DAB6D66E97E7D87F1194270");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_OnLoaded_D1CE24C24DAB6D66E97E7D87F1194270, Loaded) == 0x000000, "Member 'B_WarOverlay_CalendarManager_C_OnLoaded_D1CE24C24DAB6D66E97E7D87F1194270::Loaded' has a wrong offset!");

// Function B_WarOverlay_CalendarManager.B_WarOverlay_CalendarManager_C.OnLoaded_1E549B584FBE88E89239A0843F49FBAC
// 0x0008 (0x0008 - 0x0000)
struct B_WarOverlay_CalendarManager_C_OnLoaded_1E549B584FBE88E89239A0843F49FBAC final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WarOverlay_CalendarManager_C_OnLoaded_1E549B584FBE88E89239A0843F49FBAC) == 0x000008, "Wrong alignment on B_WarOverlay_CalendarManager_C_OnLoaded_1E549B584FBE88E89239A0843F49FBAC");
static_assert(sizeof(B_WarOverlay_CalendarManager_C_OnLoaded_1E549B584FBE88E89239A0843F49FBAC) == 0x000008, "Wrong size on B_WarOverlay_CalendarManager_C_OnLoaded_1E549B584FBE88E89239A0843F49FBAC");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_OnLoaded_1E549B584FBE88E89239A0843F49FBAC, Loaded) == 0x000000, "Member 'B_WarOverlay_CalendarManager_C_OnLoaded_1E549B584FBE88E89239A0843F49FBAC::Loaded' has a wrong offset!");

// Function B_WarOverlay_CalendarManager.B_WarOverlay_CalendarManager_C.OnExportMiniMapComplete
// 0x0001 (0x0001 - 0x0000)
struct B_WarOverlay_CalendarManager_C_OnExportMiniMapComplete final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WarOverlay_CalendarManager_C_OnExportMiniMapComplete) == 0x000001, "Wrong alignment on B_WarOverlay_CalendarManager_C_OnExportMiniMapComplete");
static_assert(sizeof(B_WarOverlay_CalendarManager_C_OnExportMiniMapComplete) == 0x000001, "Wrong size on B_WarOverlay_CalendarManager_C_OnExportMiniMapComplete");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_OnExportMiniMapComplete, bSuccess) == 0x000000, "Member 'B_WarOverlay_CalendarManager_C_OnExportMiniMapComplete::bSuccess' has a wrong offset!");

// Function B_WarOverlay_CalendarManager.B_WarOverlay_CalendarManager_C.LoadSoftReferences
// 0x0120 (0x0120 - 0x0000)
struct B_WarOverlay_CalendarManager_C_LoadSoftReferences final
{
public:
	TSoftObjectPtr<class UTexture>                CallFunc_Map_Find_Value;                           // 0x0000(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_DynamicCast_AsTexture;                      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_2;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_3;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_1;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_4;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_2;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_5;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D_1;   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_6;         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_DynamicCast_AsTexture_Render_Target_2D_2;   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture>                CallFunc_Map_Find_Value_1;                         // 0x00D8(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_7;         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_DynamicCast_AsTexture_1;                    // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WarOverlay_CalendarManager_C_LoadSoftReferences) == 0x000008, "Wrong alignment on B_WarOverlay_CalendarManager_C_LoadSoftReferences");
static_assert(sizeof(B_WarOverlay_CalendarManager_C_LoadSoftReferences) == 0x000120, "Wrong size on B_WarOverlay_CalendarManager_C_LoadSoftReferences");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, CallFunc_Map_Find_Value) == 0x000000, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000030, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, K2Node_DynamicCast_AsMaterial_Interface) == 0x000038, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000048, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, K2Node_DynamicCast_AsTexture) == 0x000050, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::K2Node_DynamicCast_AsTexture' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, CallFunc_LoadAsset_Blocking_ReturnValue_2) == 0x000060, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::CallFunc_LoadAsset_Blocking_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, K2Node_DynamicCast_AsTexture_Render_Target_2D) == 0x000068, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::K2Node_DynamicCast_AsTexture_Render_Target_2D' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, CallFunc_LoadAsset_Blocking_ReturnValue_3) == 0x000078, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::CallFunc_LoadAsset_Blocking_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, K2Node_DynamicCast_AsMaterial_Interface_1) == 0x000080, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::K2Node_DynamicCast_AsMaterial_Interface_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, CallFunc_LoadAsset_Blocking_ReturnValue_4) == 0x000090, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::CallFunc_LoadAsset_Blocking_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, K2Node_DynamicCast_AsMaterial_Interface_2) == 0x000098, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::K2Node_DynamicCast_AsMaterial_Interface_2' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, K2Node_DynamicCast_bSuccess_4) == 0x0000A0, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, CallFunc_LoadAsset_Blocking_ReturnValue_5) == 0x0000A8, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::CallFunc_LoadAsset_Blocking_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, K2Node_DynamicCast_AsTexture_Render_Target_2D_1) == 0x0000B0, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::K2Node_DynamicCast_AsTexture_Render_Target_2D_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, K2Node_DynamicCast_bSuccess_5) == 0x0000B8, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, CallFunc_LoadAsset_Blocking_ReturnValue_6) == 0x0000C0, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::CallFunc_LoadAsset_Blocking_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, K2Node_DynamicCast_AsTexture_Render_Target_2D_2) == 0x0000C8, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::K2Node_DynamicCast_AsTexture_Render_Target_2D_2' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, K2Node_DynamicCast_bSuccess_6) == 0x0000D0, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, CallFunc_Map_Find_Value_1) == 0x0000D8, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, CallFunc_Map_Find_ReturnValue_1) == 0x000100, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, CallFunc_LoadAsset_Blocking_ReturnValue_7) == 0x000108, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::CallFunc_LoadAsset_Blocking_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, K2Node_DynamicCast_AsTexture_1) == 0x000110, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::K2Node_DynamicCast_AsTexture_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_LoadSoftReferences, K2Node_DynamicCast_bSuccess_7) == 0x000118, "Member 'B_WarOverlay_CalendarManager_C_LoadSoftReferences::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");

// Function B_WarOverlay_CalendarManager.B_WarOverlay_CalendarManager_C.FindAndSetProgression
// 0x0070 (0x0070 - 0x0000)
struct B_WarOverlay_CalendarManager_C_FindAndSetProgression final
{
public:
	TMap<class FString, EBp_E_WarMinimap_Progression> Events;                                        // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_QueryCalendarEvents_EventFound;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_QueryCalendarEvents_FoundEventName;       // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_QueryCalendarEvents_EventTimespanRatio;   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_WarMinimap_Progression                  CallFunc_Map_Find_Value;                           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WarOverlay_CalendarManager_C_FindAndSetProgression) == 0x000008, "Wrong alignment on B_WarOverlay_CalendarManager_C_FindAndSetProgression");
static_assert(sizeof(B_WarOverlay_CalendarManager_C_FindAndSetProgression) == 0x000070, "Wrong size on B_WarOverlay_CalendarManager_C_FindAndSetProgression");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_FindAndSetProgression, Events) == 0x000000, "Member 'B_WarOverlay_CalendarManager_C_FindAndSetProgression::Events' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_FindAndSetProgression, CallFunc_QueryCalendarEvents_EventFound) == 0x000050, "Member 'B_WarOverlay_CalendarManager_C_FindAndSetProgression::CallFunc_QueryCalendarEvents_EventFound' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_FindAndSetProgression, CallFunc_QueryCalendarEvents_FoundEventName) == 0x000058, "Member 'B_WarOverlay_CalendarManager_C_FindAndSetProgression::CallFunc_QueryCalendarEvents_FoundEventName' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_FindAndSetProgression, CallFunc_QueryCalendarEvents_EventTimespanRatio) == 0x000068, "Member 'B_WarOverlay_CalendarManager_C_FindAndSetProgression::CallFunc_QueryCalendarEvents_EventTimespanRatio' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_FindAndSetProgression, CallFunc_Map_Find_Value) == 0x00006C, "Member 'B_WarOverlay_CalendarManager_C_FindAndSetProgression::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_FindAndSetProgression, CallFunc_Map_Find_ReturnValue) == 0x00006D, "Member 'B_WarOverlay_CalendarManager_C_FindAndSetProgression::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function B_WarOverlay_CalendarManager.B_WarOverlay_CalendarManager_C.ExecuteUbergraph_B_WarOverlay_CalendarManager
// 0x0340 (0x0340 - 0x0000)
struct B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_WarMinimap_Progression                  Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_WarMinimap_Progression                  Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_WarMinimap_Progression                  Temp_byte_Variable_2;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_WarMinimap_Progression                  Temp_byte_Variable_3;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_WarMinimap_Progression                  Temp_byte_Variable_4;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_WarMinimap_Progression                  Temp_byte_Variable_5;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_WarMinimap_Progression                  Temp_byte_Variable_6;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_WarMinimap_Progression                  Temp_byte_Variable_7;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_WarMinimap_Progression                  Temp_byte_Variable_8;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TScriptInterface<class IFortMiniMapInterface> MiniMapInterface)> K2Node_CreateDelegate_OutputDelegate; // 0x001C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IFortMiniMapInterface> K2Node_CustomEvent_MiniMapInterface;               // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TScriptInterface<class IFortMiniMapInterface> Temp_interface_Variable;                           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAsyncAction_MiniMapInterfaceReady* CallFunc_MiniMapInterfaceReadyAsync_ReturnValue;   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetMapMaskMaterialMID_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetMapMaterialMID_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_DynamicCast_AsTexture;                      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBp_E_WarMinimap_Progression                  K2Node_Select_Default;                             // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_97[0x1];                                       // 0x0097(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerStateFrontEnd*               K2Node_DynamicCast_AsFort_Player_State_Front_End;  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess)>                K2Node_CreateDelegate_OutputDelegate_1;            // 0x00AC(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FImageWriteOptions                     K2Node_MakeStruct_ImageWriteOptions;               // 0x00C0(0x0060)(ContainsInstancedReference)
	TSoftObjectPtr<class UTexture>                CallFunc_Map_Find_Value;                           // 0x0120(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x014C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetProjectContentDirectory_ReturnValue;   // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UFortAsyncAction_AuthorityMatchReady*   CallFunc_MatchReadyAsync_ReturnValue;              // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetProjectContentDirectory_ReturnValue_1; // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20A[0x2];                                      // 0x020A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0240(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_4;            // 0x0264(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetProjectContentDirectory_ReturnValue_2; // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_DynamicCast_AsTexture_1;                    // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue_2;             // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_5;            // 0x02C8(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAsyncAction_InitialCalendarSyncCompleted* CallFunc_InitialCalendarSyncCompleted_ReturnValue; // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture>                CallFunc_Map_Find_Value_1;                         // 0x0308(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0332(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager) == 0x000010, "Wrong alignment on B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager");
static_assert(sizeof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager) == 0x000340, "Wrong size on B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, EntryPoint) == 0x000000, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_MakeLiteralInt_ReturnValue) == 0x000004, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, Temp_int_Variable) == 0x000008, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, Temp_byte_Variable) == 0x000010, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, Temp_byte_Variable_1) == 0x000011, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, Temp_byte_Variable_2) == 0x000012, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, Temp_byte_Variable_3) == 0x000013, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, Temp_byte_Variable_4) == 0x000014, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, Temp_byte_Variable_5) == 0x000015, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, Temp_byte_Variable_6) == 0x000016, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, Temp_byte_Variable_7) == 0x000017, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, Temp_byte_Variable_8) == 0x000018, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, K2Node_CustomEvent_MiniMapInterface) == 0x000028, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::K2Node_CustomEvent_MiniMapInterface' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, Temp_interface_Variable) == 0x000038, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::Temp_interface_Variable' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_MiniMapInterfaceReadyAsync_ReturnValue) == 0x000048, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_MiniMapInterfaceReadyAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_GetMapMaskMaterialMID_ReturnValue) == 0x000058, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_GetMapMaskMaterialMID_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_GetMapMaterialMID_ReturnValue) == 0x000060, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_GetMapMaterialMID_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, K2Node_CustomEvent_Loaded) == 0x000068, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, Temp_object_Variable) == 0x000070, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, K2Node_DynamicCast_AsTexture) == 0x000078, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::K2Node_DynamicCast_AsTexture' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_GetPlayerController_ReturnValue) == 0x000088, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, Temp_int_Variable_1) == 0x000090, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_IsValid_ReturnValue_1) == 0x000094, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, K2Node_Select_Default) == 0x000095, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000096, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, K2Node_DynamicCast_AsFort_Player_State_Front_End) == 0x0000A0, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::K2Node_DynamicCast_AsFort_Player_State_Front_End' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000AC, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, K2Node_MakeStruct_ImageWriteOptions) == 0x0000C0, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::K2Node_MakeStruct_ImageWriteOptions' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_Map_Find_Value) == 0x000120, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_Map_Find_ReturnValue) == 0x000148, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, K2Node_CreateDelegate_OutputDelegate_2) == 0x00014C, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_GetProjectContentDirectory_ReturnValue) == 0x000158, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_GetProjectContentDirectory_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, K2Node_CustomEvent_bSuccess) == 0x000168, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::K2Node_CustomEvent_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000170, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000178, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_GetDisplayName_ReturnValue) == 0x000180, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_MatchReadyAsync_ReturnValue) == 0x000190, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_MatchReadyAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_Concat_StrStr_ReturnValue) == 0x000198, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0001A8, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_IsValid_ReturnValue_2) == 0x0001B8, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_GetProjectContentDirectory_ReturnValue_1) == 0x0001C0, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_GetProjectContentDirectory_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_GetDisplayName_ReturnValue_1) == 0x0001D0, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0001E0, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0001F0, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0001F8, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000208, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_BooleanOR_ReturnValue) == 0x000209, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00020C, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000210, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000220, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000230, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, K2Node_CreateDelegate_OutputDelegate_3) == 0x000240, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000250, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_HasAuthority_ReturnValue) == 0x000260, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, K2Node_CreateDelegate_OutputDelegate_4) == 0x000264, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_GetProjectContentDirectory_ReturnValue_2) == 0x000270, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_GetProjectContentDirectory_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, Temp_object_Variable_1) == 0x000280, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x000288, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, K2Node_DynamicCast_AsTexture_1) == 0x000298, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::K2Node_DynamicCast_AsTexture_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, K2Node_DynamicCast_bSuccess_2) == 0x0002A0, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_GetDisplayName_ReturnValue_2) == 0x0002A8, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_GetDisplayName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0002B8, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, K2Node_CreateDelegate_OutputDelegate_5) == 0x0002C8, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0002D8, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0002E8, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, K2Node_CustomEvent_Loaded_1) == 0x0002F8, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_InitialCalendarSyncCompleted_ReturnValue) == 0x000300, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_InitialCalendarSyncCompleted_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_Map_Find_Value_1) == 0x000308, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_Map_Find_ReturnValue_1) == 0x000330, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_IsValid_ReturnValue_3) == 0x000331, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000332, "Member 'B_WarOverlay_CalendarManager_C_ExecuteUbergraph_B_WarOverlay_CalendarManager::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

}

