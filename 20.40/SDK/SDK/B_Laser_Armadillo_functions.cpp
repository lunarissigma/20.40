#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Laser_Armadillo

#include "Basic.hpp"

#include "B_Laser_Armadillo_classes.hpp"
#include "B_Laser_Armadillo_parameters.hpp"


namespace SDK
{

// Function B_Laser_Armadillo.B_Laser_Armadillo_C.ExecuteUbergraph_B_Laser_Armadillo
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Laser_Armadillo_C::ExecuteUbergraph_B_Laser_Armadillo(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Laser_Armadillo_C", "ExecuteUbergraph_B_Laser_Armadillo");

	Params::B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Laser_Armadillo.B_Laser_Armadillo_C.HandleWeaponFiltering
// (Public, BlueprintCallable, BlueprintEvent)

void AB_Laser_Armadillo_C::HandleWeaponFiltering()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Laser_Armadillo_C", "HandleWeaponFiltering");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Laser_Armadillo.B_Laser_Armadillo_C.On Overheating Value
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrentValue                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EFortWeaponOverheatState                State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsInCooldown                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Laser_Armadillo_C::On_Overheating_Value(float CurrentValue, float MaxValue, EFortWeaponOverheatState State, bool bIsInCooldown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Laser_Armadillo_C", "On Overheating Value");

	Params::B_Laser_Armadillo_C_On_Overheating_Value Parms{};

	Parms.CurrentValue = CurrentValue;
	Parms.MaxValue = MaxValue;
	Parms.State = State;
	Parms.bIsInCooldown = bIsInCooldown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Laser_Armadillo.B_Laser_Armadillo_C.OnLeaveSpace
// (BlueprintCallable, BlueprintEvent)

void AB_Laser_Armadillo_C::OnLeaveSpace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Laser_Armadillo_C", "OnLeaveSpace");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Laser_Armadillo.B_Laser_Armadillo_C.OnLocalFailedToFireWhenOverheated
// (Event, Protected, BlueprintEvent)

void AB_Laser_Armadillo_C::OnLocalFailedToFireWhenOverheated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Laser_Armadillo_C", "OnLocalFailedToFireWhenOverheated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Laser_Armadillo.B_Laser_Armadillo_C.OnPlayWeaponFireFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bPersistentFire                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSecondaryFire                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Laser_Armadillo_C::OnPlayWeaponFireFX(bool bPersistentFire, bool bSecondaryFire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Laser_Armadillo_C", "OnPlayWeaponFireFX");

	Params::B_Laser_Armadillo_C_OnPlayWeaponFireFX Parms{};

	Parms.bPersistentFire = bPersistentFire;
	Parms.bSecondaryFire = bSecondaryFire;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Laser_Armadillo.B_Laser_Armadillo_C.OnStartOverheated
// (Event, Protected, BlueprintEvent)

void AB_Laser_Armadillo_C::OnStartOverheated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Laser_Armadillo_C", "OnStartOverheated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Laser_Armadillo.B_Laser_Armadillo_C.OnWeaponAttached
// (Event, Public, BlueprintEvent)

void AB_Laser_Armadillo_C::OnWeaponAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Laser_Armadillo_C", "OnWeaponAttached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Laser_Armadillo.B_Laser_Armadillo_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_Laser_Armadillo_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Laser_Armadillo_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

