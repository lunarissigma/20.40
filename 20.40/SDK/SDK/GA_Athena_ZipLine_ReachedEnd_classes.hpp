#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_ZipLine_ReachedEnd

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_ZipLine_ReachedEnd.GA_Athena_ZipLine_ReachedEnd_C
// 0x00F8 (0x0BB0 - 0x0AB8)
class UGA_Athena_ZipLine_ReachedEnd_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         MaxLateralSpeed;                                   // 0x0AC8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                ImpulseVec;                                        // 0x0AF0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         JumpVertStrength;                                  // 0x0B08(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         LateralDamping;                                    // 0x0B30(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MaxZiplineVel;                                     // 0x0B58(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Debug;                                             // 0x0B80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B81[0x7];                                      // 0x0B81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         MinJumpVertStrength;                               // 0x0B88(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GA_Athena_ZipLine_ReachedEnd(int32 EntryPoint);
	void K2_ActivateAbility();
	void K2_OnEndAbility(bool bWasCancelled);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_ZipLine_ReachedEnd_C">();
	}
	static class UGA_Athena_ZipLine_ReachedEnd_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_ZipLine_ReachedEnd_C>();
	}
};
static_assert(alignof(UGA_Athena_ZipLine_ReachedEnd_C) == 0x000008, "Wrong alignment on UGA_Athena_ZipLine_ReachedEnd_C");
static_assert(sizeof(UGA_Athena_ZipLine_ReachedEnd_C) == 0x000BB0, "Wrong size on UGA_Athena_ZipLine_ReachedEnd_C");
static_assert(offsetof(UGA_Athena_ZipLine_ReachedEnd_C, UberGraphFrame) == 0x000AB8, "Member 'UGA_Athena_ZipLine_ReachedEnd_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_ReachedEnd_C, PlayerPawn) == 0x000AC0, "Member 'UGA_Athena_ZipLine_ReachedEnd_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_ReachedEnd_C, MaxLateralSpeed) == 0x000AC8, "Member 'UGA_Athena_ZipLine_ReachedEnd_C::MaxLateralSpeed' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_ReachedEnd_C, ImpulseVec) == 0x000AF0, "Member 'UGA_Athena_ZipLine_ReachedEnd_C::ImpulseVec' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_ReachedEnd_C, JumpVertStrength) == 0x000B08, "Member 'UGA_Athena_ZipLine_ReachedEnd_C::JumpVertStrength' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_ReachedEnd_C, LateralDamping) == 0x000B30, "Member 'UGA_Athena_ZipLine_ReachedEnd_C::LateralDamping' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_ReachedEnd_C, MaxZiplineVel) == 0x000B58, "Member 'UGA_Athena_ZipLine_ReachedEnd_C::MaxZiplineVel' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_ReachedEnd_C, Debug) == 0x000B80, "Member 'UGA_Athena_ZipLine_ReachedEnd_C::Debug' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZipLine_ReachedEnd_C, MinJumpVertStrength) == 0x000B88, "Member 'UGA_Athena_ZipLine_ReachedEnd_C::MinJumpVertStrength' has a wrong offset!");

}

