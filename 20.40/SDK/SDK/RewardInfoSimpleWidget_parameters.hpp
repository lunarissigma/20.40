#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RewardInfoSimpleWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function RewardInfoSimpleWidget.RewardInfoSimpleWidget_C.ExecuteUbergraph_RewardInfoSimpleWidget
// 0x0068 (0x0068 - 0x0000)
struct RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetQuantity_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              CallFunc_GetItemInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	class UFortItemDefinition*                    CallFunc_GetItemDefinitionBP_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetSmallPreviewImage_ReturnValue;         // 0x0038(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget) == 0x000008, "Wrong alignment on RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget");
static_assert(sizeof(RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget) == 0x000068, "Wrong size on RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget");
static_assert(offsetof(RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget, EntryPoint) == 0x000000, "Member 'RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget, CallFunc_GetQuantity_ReturnValue) == 0x000004, "Member 'RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget::CallFunc_GetQuantity_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget, CallFunc_GetItemInstance_ReturnValue) == 0x000008, "Member 'RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget::CallFunc_GetItemInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget, CallFunc_GetItemDefinitionBP_ReturnValue) == 0x000028, "Member 'RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget::CallFunc_GetItemDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000030, "Member 'RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000031, "Member 'RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget, CallFunc_GetSmallPreviewImage_ReturnValue) == 0x000038, "Member 'RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget::CallFunc_GetSmallPreviewImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget, CallFunc_BooleanAND_ReturnValue) == 0x000060, "Member 'RewardInfoSimpleWidget_C_ExecuteUbergraph_RewardInfoSimpleWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function RewardInfoSimpleWidget.RewardInfoSimpleWidget_C.GetDisplayName
// 0x1190 (0x1190 - 0x0000)
struct RewardInfoSimpleWidget_C_GetDisplayName final
{
public:
	class FText                                   DisplayName;                                       // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   OutName;                                           // 0x0018(0x0018)(Edit, BlueprintVisible)
	EFortItemType                                 Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0050(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0080(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0098(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0110(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0128(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0140(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x0158(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x0170(0x0018)()
	class FText                                   Temp_text_Variable_14;                             // 0x0188(0x0018)()
	class FText                                   Temp_text_Variable_15;                             // 0x01A0(0x0018)()
	class FText                                   Temp_text_Variable_16;                             // 0x01B8(0x0018)()
	class FText                                   Temp_text_Variable_17;                             // 0x01D0(0x0018)()
	class FText                                   Temp_text_Variable_18;                             // 0x01E8(0x0018)()
	class FText                                   Temp_text_Variable_19;                             // 0x0200(0x0018)()
	class FText                                   Temp_text_Variable_20;                             // 0x0218(0x0018)()
	class FText                                   Temp_text_Variable_21;                             // 0x0230(0x0018)()
	class FText                                   Temp_text_Variable_22;                             // 0x0248(0x0018)()
	class FText                                   Temp_text_Variable_23;                             // 0x0260(0x0018)()
	class FText                                   Temp_text_Variable_24;                             // 0x0278(0x0018)()
	class FText                                   Temp_text_Variable_25;                             // 0x0290(0x0018)()
	class FText                                   Temp_text_Variable_26;                             // 0x02A8(0x0018)()
	class FText                                   Temp_text_Variable_27;                             // 0x02C0(0x0018)()
	class FText                                   Temp_text_Variable_28;                             // 0x02D8(0x0018)()
	class FText                                   Temp_text_Variable_29;                             // 0x02F0(0x0018)()
	class FText                                   Temp_text_Variable_30;                             // 0x0308(0x0018)()
	class FText                                   Temp_text_Variable_31;                             // 0x0320(0x0018)()
	class FText                                   Temp_text_Variable_32;                             // 0x0338(0x0018)()
	class FText                                   Temp_text_Variable_33;                             // 0x0350(0x0018)()
	class FText                                   Temp_text_Variable_34;                             // 0x0368(0x0018)()
	class FText                                   Temp_text_Variable_35;                             // 0x0380(0x0018)()
	class FText                                   Temp_text_Variable_36;                             // 0x0398(0x0018)()
	class FText                                   Temp_text_Variable_37;                             // 0x03B0(0x0018)()
	class FText                                   Temp_text_Variable_38;                             // 0x03C8(0x0018)()
	class FText                                   Temp_text_Variable_39;                             // 0x03E0(0x0018)()
	class FText                                   Temp_text_Variable_40;                             // 0x03F8(0x0018)()
	class FText                                   Temp_text_Variable_41;                             // 0x0410(0x0018)()
	class FText                                   Temp_text_Variable_42;                             // 0x0428(0x0018)()
	class FText                                   Temp_text_Variable_43;                             // 0x0440(0x0018)()
	class FText                                   Temp_text_Variable_44;                             // 0x0458(0x0018)()
	class FText                                   Temp_text_Variable_45;                             // 0x0470(0x0018)()
	class FText                                   Temp_text_Variable_46;                             // 0x0488(0x0018)()
	class FText                                   Temp_text_Variable_47;                             // 0x04A0(0x0018)()
	class FText                                   Temp_text_Variable_48;                             // 0x04B8(0x0018)()
	class FText                                   Temp_text_Variable_49;                             // 0x04D0(0x0018)()
	class FText                                   Temp_text_Variable_50;                             // 0x04E8(0x0018)()
	class FText                                   Temp_text_Variable_51;                             // 0x0500(0x0018)()
	class FText                                   Temp_text_Variable_52;                             // 0x0518(0x0018)()
	class FText                                   Temp_text_Variable_53;                             // 0x0530(0x0018)()
	class FText                                   Temp_text_Variable_54;                             // 0x0548(0x0018)()
	class FText                                   Temp_text_Variable_55;                             // 0x0560(0x0018)()
	class FText                                   Temp_text_Variable_56;                             // 0x0578(0x0018)()
	class FText                                   Temp_text_Variable_57;                             // 0x0590(0x0018)()
	class FText                                   Temp_text_Variable_58;                             // 0x05A8(0x0018)()
	class FText                                   Temp_text_Variable_59;                             // 0x05C0(0x0018)()
	class FText                                   Temp_text_Variable_60;                             // 0x05D8(0x0018)()
	class FText                                   Temp_text_Variable_61;                             // 0x05F0(0x0018)()
	class FText                                   Temp_text_Variable_62;                             // 0x0608(0x0018)()
	class FText                                   Temp_text_Variable_63;                             // 0x0620(0x0018)()
	class FText                                   Temp_text_Variable_64;                             // 0x0638(0x0018)()
	class FText                                   Temp_text_Variable_65;                             // 0x0650(0x0018)()
	class FText                                   Temp_text_Variable_66;                             // 0x0668(0x0018)()
	class FText                                   Temp_text_Variable_67;                             // 0x0680(0x0018)()
	class FText                                   Temp_text_Variable_68;                             // 0x0698(0x0018)()
	class FText                                   Temp_text_Variable_69;                             // 0x06B0(0x0018)()
	class FText                                   Temp_text_Variable_70;                             // 0x06C8(0x0018)()
	class FText                                   Temp_text_Variable_71;                             // 0x06E0(0x0018)()
	class FText                                   Temp_text_Variable_72;                             // 0x06F8(0x0018)()
	class FText                                   Temp_text_Variable_73;                             // 0x0710(0x0018)()
	class FText                                   Temp_text_Variable_74;                             // 0x0728(0x0018)()
	class FText                                   Temp_text_Variable_75;                             // 0x0740(0x0018)()
	class FText                                   Temp_text_Variable_76;                             // 0x0758(0x0018)()
	class FText                                   Temp_text_Variable_77;                             // 0x0770(0x0018)()
	class FText                                   Temp_text_Variable_78;                             // 0x0788(0x0018)()
	class FText                                   Temp_text_Variable_79;                             // 0x07A0(0x0018)()
	class FText                                   Temp_text_Variable_80;                             // 0x07B8(0x0018)()
	class FText                                   Temp_text_Variable_81;                             // 0x07D0(0x0018)()
	class FText                                   Temp_text_Variable_82;                             // 0x07E8(0x0018)()
	class FText                                   Temp_text_Variable_83;                             // 0x0800(0x0018)()
	class FText                                   Temp_text_Variable_84;                             // 0x0818(0x0018)()
	class FText                                   Temp_text_Variable_85;                             // 0x0830(0x0018)()
	class FText                                   Temp_text_Variable_86;                             // 0x0848(0x0018)()
	class FText                                   Temp_text_Variable_87;                             // 0x0860(0x0018)()
	class FText                                   Temp_text_Variable_88;                             // 0x0878(0x0018)()
	class FText                                   Temp_text_Variable_89;                             // 0x0890(0x0018)()
	class FText                                   Temp_text_Variable_90;                             // 0x08A8(0x0018)()
	class FText                                   Temp_text_Variable_91;                             // 0x08C0(0x0018)()
	class FText                                   Temp_text_Variable_92;                             // 0x08D8(0x0018)()
	class FText                                   Temp_text_Variable_93;                             // 0x08F0(0x0018)()
	class FText                                   Temp_text_Variable_94;                             // 0x0908(0x0018)()
	class FText                                   Temp_text_Variable_95;                             // 0x0920(0x0018)()
	class FText                                   Temp_text_Variable_96;                             // 0x0938(0x0018)()
	class FText                                   Temp_text_Variable_97;                             // 0x0950(0x0018)()
	class FText                                   Temp_text_Variable_98;                             // 0x0968(0x0018)()
	class FText                                   Temp_text_Variable_99;                             // 0x0980(0x0018)()
	class FText                                   Temp_text_Variable_100;                            // 0x0998(0x0018)()
	class FText                                   Temp_text_Variable_101;                            // 0x09B0(0x0018)()
	class FText                                   Temp_text_Variable_102;                            // 0x09C8(0x0018)()
	class FText                                   Temp_text_Variable_103;                            // 0x09E0(0x0018)()
	class FText                                   Temp_text_Variable_104;                            // 0x09F8(0x0018)()
	class FText                                   Temp_text_Variable_105;                            // 0x0A10(0x0018)()
	class FText                                   Temp_text_Variable_106;                            // 0x0A28(0x0018)()
	class FText                                   Temp_text_Variable_107;                            // 0x0A40(0x0018)()
	class FText                                   Temp_text_Variable_108;                            // 0x0A58(0x0018)()
	class FText                                   Temp_text_Variable_109;                            // 0x0A70(0x0018)()
	class FText                                   Temp_text_Variable_110;                            // 0x0A88(0x0018)()
	class FText                                   Temp_text_Variable_111;                            // 0x0AA0(0x0018)()
	class FText                                   Temp_text_Variable_112;                            // 0x0AB8(0x0018)()
	class FText                                   Temp_text_Variable_113;                            // 0x0AD0(0x0018)()
	class FText                                   Temp_text_Variable_114;                            // 0x0AE8(0x0018)()
	class FText                                   Temp_text_Variable_115;                            // 0x0B00(0x0018)()
	class FText                                   Temp_text_Variable_116;                            // 0x0B18(0x0018)()
	class FText                                   Temp_text_Variable_117;                            // 0x0B30(0x0018)()
	class FText                                   Temp_text_Variable_118;                            // 0x0B48(0x0018)()
	class FText                                   Temp_text_Variable_119;                            // 0x0B60(0x0018)()
	class FText                                   Temp_text_Variable_120;                            // 0x0B78(0x0018)()
	class FText                                   Temp_text_Variable_121;                            // 0x0B90(0x0018)()
	class FText                                   Temp_text_Variable_122;                            // 0x0BA8(0x0018)()
	class FText                                   Temp_text_Variable_123;                            // 0x0BC0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0BD8(0x0018)()
	class UFortItem*                              CallFunc_GetItemInstance_ReturnValue;              // 0x0BF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0BF8(0x0050)(HasGetValueTypeHash)
	EFortRarity                                   CallFunc_GetRarity_ReturnValue;                    // 0x0C48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C49[0x7];                                      // 0x0C49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0C50(0x0018)()
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue;              // 0x0C68(0x0080)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0CE8(0x0050)(HasGetValueTypeHash)
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue_1;            // 0x0D38(0x0080)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0DB8(0x0050)(HasGetValueTypeHash)
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue_2;            // 0x0E08(0x0080)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0E88(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0ED8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0EE8(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0F38(0x0018)()
	class UFortItem*                              CallFunc_GetItemInstance_ReturnValue_1;            // 0x0F50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWorker*                            K2Node_DynamicCast_AsFort_Worker;                  // 0x0F58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0F60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortInventoryFilter                          CallFunc_GetFilterCategory_ReturnValue;            // 0x0F61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0F62(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F63[0x5];                                      // 0x0F63(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              CallFunc_GetItemInstance_ReturnValue_2;            // 0x0F68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTertiaryCategory_ItemCategoryText;     // 0x0F70(0x0018)()
	uint8                                         Pad_F88[0x8];                                      // 0x0F88(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetTertiaryCategory_ItemCategoryBrush;    // 0x0F90(0x00C0)()
	bool                                          CallFunc_GetTertiaryCategory_ReturnValue;          // 0x1050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1051[0x7];                                     // 0x1051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              CallFunc_GetItemInstance_ReturnValue_3;            // 0x1058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x1060(0x0050)(HasGetValueTypeHash)
	EFortItemType                                 CallFunc_GetType_ReturnValue;                      // 0x10B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10B1[0x7];                                     // 0x10B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x10B8(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x10C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C9[0x7];                                     // 0x10C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x10D0(0x0018)()
	class UFortItem*                              CallFunc_GetItemInstance_ReturnValue_4;            // 0x10E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemType                                 CallFunc_GetType_ReturnValue_1;                    // 0x10F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10F1[0x7];                                     // 0x10F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x10F8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x1110(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x1160(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x1170(0x0018)()
};
static_assert(alignof(RewardInfoSimpleWidget_C_GetDisplayName) == 0x000010, "Wrong alignment on RewardInfoSimpleWidget_C_GetDisplayName");
static_assert(sizeof(RewardInfoSimpleWidget_C_GetDisplayName) == 0x001190, "Wrong size on RewardInfoSimpleWidget_C_GetDisplayName");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, DisplayName) == 0x000000, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::DisplayName' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, OutName) == 0x000018, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::OutName' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_byte_Variable) == 0x000030, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable) == 0x000038, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_1) == 0x000050, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_2) == 0x000068, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_3) == 0x000080, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_4) == 0x000098, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_5) == 0x0000B0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_6) == 0x0000C8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_7) == 0x0000E0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_8) == 0x0000F8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_9) == 0x000110, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_10) == 0x000128, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_11) == 0x000140, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_12) == 0x000158, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_13) == 0x000170, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_14) == 0x000188, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_14' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_15) == 0x0001A0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_15' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_16) == 0x0001B8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_16' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_17) == 0x0001D0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_17' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_18) == 0x0001E8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_18' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_19) == 0x000200, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_19' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_20) == 0x000218, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_20' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_21) == 0x000230, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_21' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_22) == 0x000248, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_22' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_23) == 0x000260, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_23' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_24) == 0x000278, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_24' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_25) == 0x000290, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_25' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_26) == 0x0002A8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_26' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_27) == 0x0002C0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_27' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_28) == 0x0002D8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_28' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_29) == 0x0002F0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_29' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_30) == 0x000308, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_30' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_31) == 0x000320, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_31' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_32) == 0x000338, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_32' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_33) == 0x000350, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_33' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_34) == 0x000368, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_34' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_35) == 0x000380, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_35' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_36) == 0x000398, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_36' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_37) == 0x0003B0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_37' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_38) == 0x0003C8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_38' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_39) == 0x0003E0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_39' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_40) == 0x0003F8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_40' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_41) == 0x000410, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_41' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_42) == 0x000428, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_42' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_43) == 0x000440, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_43' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_44) == 0x000458, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_44' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_45) == 0x000470, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_45' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_46) == 0x000488, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_46' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_47) == 0x0004A0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_47' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_48) == 0x0004B8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_48' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_49) == 0x0004D0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_49' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_50) == 0x0004E8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_50' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_51) == 0x000500, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_51' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_52) == 0x000518, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_52' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_53) == 0x000530, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_53' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_54) == 0x000548, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_54' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_55) == 0x000560, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_55' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_56) == 0x000578, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_56' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_57) == 0x000590, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_57' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_58) == 0x0005A8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_58' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_59) == 0x0005C0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_59' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_60) == 0x0005D8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_60' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_61) == 0x0005F0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_61' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_62) == 0x000608, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_62' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_63) == 0x000620, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_63' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_64) == 0x000638, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_64' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_65) == 0x000650, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_65' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_66) == 0x000668, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_66' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_67) == 0x000680, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_67' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_68) == 0x000698, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_68' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_69) == 0x0006B0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_69' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_70) == 0x0006C8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_70' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_71) == 0x0006E0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_71' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_72) == 0x0006F8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_72' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_73) == 0x000710, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_73' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_74) == 0x000728, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_74' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_75) == 0x000740, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_75' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_76) == 0x000758, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_76' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_77) == 0x000770, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_77' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_78) == 0x000788, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_78' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_79) == 0x0007A0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_79' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_80) == 0x0007B8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_80' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_81) == 0x0007D0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_81' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_82) == 0x0007E8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_82' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_83) == 0x000800, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_83' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_84) == 0x000818, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_84' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_85) == 0x000830, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_85' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_86) == 0x000848, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_86' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_87) == 0x000860, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_87' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_88) == 0x000878, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_88' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_89) == 0x000890, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_89' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_90) == 0x0008A8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_90' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_91) == 0x0008C0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_91' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_92) == 0x0008D8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_92' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_93) == 0x0008F0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_93' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_94) == 0x000908, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_94' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_95) == 0x000920, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_95' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_96) == 0x000938, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_96' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_97) == 0x000950, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_97' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_98) == 0x000968, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_98' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_99) == 0x000980, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_99' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_100) == 0x000998, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_100' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_101) == 0x0009B0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_101' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_102) == 0x0009C8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_102' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_103) == 0x0009E0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_103' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_104) == 0x0009F8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_104' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_105) == 0x000A10, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_105' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_106) == 0x000A28, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_106' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_107) == 0x000A40, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_107' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_108) == 0x000A58, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_108' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_109) == 0x000A70, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_109' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_110) == 0x000A88, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_110' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_111) == 0x000AA0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_111' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_112) == 0x000AB8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_112' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_113) == 0x000AD0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_113' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_114) == 0x000AE8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_114' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_115) == 0x000B00, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_115' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_116) == 0x000B18, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_116' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_117) == 0x000B30, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_117' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_118) == 0x000B48, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_118' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_119) == 0x000B60, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_119' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_120) == 0x000B78, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_120' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_121) == 0x000B90, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_121' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_122) == 0x000BA8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_122' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, Temp_text_Variable_123) == 0x000BC0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::Temp_text_Variable_123' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_MakeLiteralText_ReturnValue) == 0x000BD8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_GetItemInstance_ReturnValue) == 0x000BF0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_GetItemInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, K2Node_MakeStruct_FormatArgumentData) == 0x000BF8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_GetRarity_ReturnValue) == 0x000C48, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000C50, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_BPGetRarityData_ReturnValue) == 0x000C68, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_BPGetRarityData_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, K2Node_MakeStruct_FormatArgumentData_1) == 0x000CE8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_BPGetRarityData_ReturnValue_1) == 0x000D38, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_BPGetRarityData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, K2Node_MakeStruct_FormatArgumentData_2) == 0x000DB8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_BPGetRarityData_ReturnValue_2) == 0x000E08, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_BPGetRarityData_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, K2Node_MakeStruct_FormatArgumentData_3) == 0x000E88, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, K2Node_MakeArray_Array) == 0x000ED8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, K2Node_MakeStruct_FormatArgumentData_4) == 0x000EE8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_Format_ReturnValue) == 0x000F38, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_GetItemInstance_ReturnValue_1) == 0x000F50, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_GetItemInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, K2Node_DynamicCast_AsFort_Worker) == 0x000F58, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::K2Node_DynamicCast_AsFort_Worker' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, K2Node_DynamicCast_bSuccess) == 0x000F60, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_GetFilterCategory_ReturnValue) == 0x000F61, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_GetFilterCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000F62, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_GetItemInstance_ReturnValue_2) == 0x000F68, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_GetItemInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_GetTertiaryCategory_ItemCategoryText) == 0x000F70, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_GetTertiaryCategory_ItemCategoryText' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_GetTertiaryCategory_ItemCategoryBrush) == 0x000F90, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_GetTertiaryCategory_ItemCategoryBrush' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_GetTertiaryCategory_ReturnValue) == 0x001050, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_GetTertiaryCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_GetItemInstance_ReturnValue_3) == 0x001058, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_GetItemInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, K2Node_MakeStruct_FormatArgumentData_5) == 0x001060, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_GetType_ReturnValue) == 0x0010B0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_GetType_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, K2Node_MakeArray_Array_1) == 0x0010B8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0010C8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_Format_ReturnValue_1) == 0x0010D0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_GetItemInstance_ReturnValue_4) == 0x0010E8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_GetItemInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_GetType_ReturnValue_1) == 0x0010F0, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_GetType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, K2Node_Select_Default) == 0x0010F8, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, K2Node_MakeStruct_FormatArgumentData_6) == 0x001110, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, K2Node_MakeArray_Array_2) == 0x001160, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(RewardInfoSimpleWidget_C_GetDisplayName, CallFunc_Format_ReturnValue_2) == 0x001170, "Member 'RewardInfoSimpleWidget_C_GetDisplayName::CallFunc_Format_ReturnValue_2' has a wrong offset!");

}

