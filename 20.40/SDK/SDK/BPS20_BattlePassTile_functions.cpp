#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPS20_BattlePassTile

#include "Basic.hpp"

#include "BPS20_BattlePassTile_classes.hpp"
#include "BPS20_BattlePassTile_parameters.hpp"


namespace SDK
{

// Function BPS20_BattlePassTile.BPS20_BattlePassTile_C.BP_OnHoldCompleted
// (Event, Protected, BlueprintEvent)

void UBPS20_BattlePassTile_C::BP_OnHoldCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPS20_BattlePassTile_C", "BP_OnHoldCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPS20_BattlePassTile.BPS20_BattlePassTile_C.BP_OnHoldEnded
// (Event, Protected, BlueprintEvent)
// Parameters:
// const float                             HoldPercentage                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const bool                              bInUseSecondaryHoldAnimation                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPS20_BattlePassTile_C::BP_OnHoldEnded(const float HoldPercentage, const bool bInUseSecondaryHoldAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPS20_BattlePassTile_C", "BP_OnHoldEnded");

	Params::BPS20_BattlePassTile_C_BP_OnHoldEnded Parms{};

	Parms.HoldPercentage = HoldPercentage;
	Parms.bInUseSecondaryHoldAnimation = bInUseSecondaryHoldAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPS20_BattlePassTile.BPS20_BattlePassTile_C.BP_OnHoldReset
// (Event, Protected, BlueprintEvent)

void UBPS20_BattlePassTile_C::BP_OnHoldReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPS20_BattlePassTile_C", "BP_OnHoldReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPS20_BattlePassTile.BPS20_BattlePassTile_C.BP_OnHoldStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// const float                             HoldPercentage                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const bool                              bInUseSecondaryHoldAnimation                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPS20_BattlePassTile_C::BP_OnHoldStarted(const float HoldPercentage, const bool bInUseSecondaryHoldAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPS20_BattlePassTile_C", "BP_OnHoldStarted");

	Params::BPS20_BattlePassTile_C_BP_OnHoldStarted Parms{};

	Parms.HoldPercentage = HoldPercentage;
	Parms.bInUseSecondaryHoldAnimation = bInUseSecondaryHoldAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPS20_BattlePassTile.BPS20_BattlePassTile_C.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UBPS20_BattlePassTile_C::BP_OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPS20_BattlePassTile_C", "BP_OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPS20_BattlePassTile.BPS20_BattlePassTile_C.BP_OnUnhovered
// (Event, Protected, BlueprintEvent)

void UBPS20_BattlePassTile_C::BP_OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPS20_BattlePassTile_C", "BP_OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPS20_BattlePassTile.BPS20_BattlePassTile_C.ExecuteUbergraph_BPS20_BattlePassTile
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPS20_BattlePassTile_C::ExecuteUbergraph_BPS20_BattlePassTile(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPS20_BattlePassTile_C", "ExecuteUbergraph_BPS20_BattlePassTile");

	Params::BPS20_BattlePassTile_C_ExecuteUbergraph_BPS20_BattlePassTile Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPS20_BattlePassTile.BPS20_BattlePassTile_C.OnAffordabilityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bHasEnougCurrency                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPS20_BattlePassTile_C::OnAffordabilityChanged(const bool bHasEnougCurrency)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPS20_BattlePassTile_C", "OnAffordabilityChanged");

	Params::BPS20_BattlePassTile_C_OnAffordabilityChanged Parms{};

	Parms.bHasEnougCurrency = bHasEnougCurrency;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPS20_BattlePassTile.BPS20_BattlePassTile_C.OnFocusReceived
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// const struct FFocusEvent&               InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBPS20_BattlePassTile_C::OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPS20_BattlePassTile_C", "OnFocusReceived");

	Params::BPS20_BattlePassTile_C_OnFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPS20_BattlePassTile.BPS20_BattlePassTile_C.OnHighlighted
// (Event, Protected, BlueprintEvent)

void UBPS20_BattlePassTile_C::OnHighlighted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPS20_BattlePassTile_C", "OnHighlighted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPS20_BattlePassTile.BPS20_BattlePassTile_C.OnLockedProgressUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// const float                             Progress                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const int32                             CurrentlyOwnedRewards                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const int32                             NeededRewards                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPS20_BattlePassTile_C::OnLockedProgressUpdated(const float Progress, const int32 CurrentlyOwnedRewards, const int32 NeededRewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPS20_BattlePassTile_C", "OnLockedProgressUpdated");

	Params::BPS20_BattlePassTile_C_OnLockedProgressUpdated Parms{};

	Parms.Progress = Progress;
	Parms.CurrentlyOwnedRewards = CurrentlyOwnedRewards;
	Parms.NeededRewards = NeededRewards;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPS20_BattlePassTile.BPS20_BattlePassTile_C.OnLockedStateUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              OwnsBattlePass                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const bool                              ParentUnlocked                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const bool                              HasRemainingPrerequisites                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const bool                              bIsDelayed                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPS20_BattlePassTile_C::OnLockedStateUpdated(const bool OwnsBattlePass, const bool ParentUnlocked, const bool HasRemainingPrerequisites, const bool bIsDelayed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPS20_BattlePassTile_C", "OnLockedStateUpdated");

	Params::BPS20_BattlePassTile_C_OnLockedStateUpdated Parms{};

	Parms.OwnsBattlePass = OwnsBattlePass;
	Parms.ParentUnlocked = ParentUnlocked;
	Parms.HasRemainingPrerequisites = HasRemainingPrerequisites;
	Parms.bIsDelayed = bIsDelayed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPS20_BattlePassTile.BPS20_BattlePassTile_C.OnPeeked
// (Event, Public, BlueprintEvent)

void UBPS20_BattlePassTile_C::OnPeeked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPS20_BattlePassTile_C", "OnPeeked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPS20_BattlePassTile.BPS20_BattlePassTile_C.OnPreviewed
// (Event, Public, BlueprintEvent)

void UBPS20_BattlePassTile_C::OnPreviewed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPS20_BattlePassTile_C", "OnPreviewed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPS20_BattlePassTile.BPS20_BattlePassTile_C.OnRevealed
// (Event, Public, BlueprintEvent)

void UBPS20_BattlePassTile_C::OnRevealed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPS20_BattlePassTile_C", "OnRevealed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPS20_BattlePassTile.BPS20_BattlePassTile_C.OnSetCurrencyAndPrice
// (Event, Protected, BlueprintEvent)
// Parameters:
// const EBattlePassCurrencyType           Currency                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const int32                             Price                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPS20_BattlePassTile_C::OnSetCurrencyAndPrice(const EBattlePassCurrencyType Currency, const int32 Price)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPS20_BattlePassTile_C", "OnSetCurrencyAndPrice");

	Params::BPS20_BattlePassTile_C_OnSetCurrencyAndPrice Parms{};

	Parms.Currency = Currency;
	Parms.Price = Price;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPS20_BattlePassTile.BPS20_BattlePassTile_C.OnSetTrack
// (Event, Protected, BlueprintEvent)
// Parameters:
// const bool                              bIsFreeTrack                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const bool                              bOwnsBattlePass                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPS20_BattlePassTile_C::OnSetTrack(const bool bIsFreeTrack, const bool bOwnsBattlePass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPS20_BattlePassTile_C", "OnSetTrack");

	Params::BPS20_BattlePassTile_C_OnSetTrack Parms{};

	Parms.bIsFreeTrack = bIsFreeTrack;
	Parms.bOwnsBattlePass = bOwnsBattlePass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPS20_BattlePassTile.BPS20_BattlePassTile_C.OnStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// const EBattlePassTileAvailabilityStates NewState                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBPS20_BattlePassTile_C::OnStateChanged(const EBattlePassTileAvailabilityStates NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPS20_BattlePassTile_C", "OnStateChanged");

	Params::BPS20_BattlePassTile_C_OnStateChanged Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPS20_BattlePassTile.BPS20_BattlePassTile_C.OnUnhighlighted
// (Event, Protected, BlueprintEvent)

void UBPS20_BattlePassTile_C::OnUnhighlighted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPS20_BattlePassTile_C", "OnUnhighlighted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPS20_BattlePassTile.BPS20_BattlePassTile_C.OnUnpreviewed
// (Event, Public, BlueprintEvent)

void UBPS20_BattlePassTile_C::OnUnpreviewed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPS20_BattlePassTile_C", "OnUnpreviewed");

	UObject::ProcessEvent(Func, nullptr);
}

}

