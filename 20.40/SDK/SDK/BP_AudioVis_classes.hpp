#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AudioVis

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AudioVis.BP_AudioVis_C
// 0x0118 (0x0388 - 0x0270)
class ABP_AudioVis_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   LeftBar5;                                          // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RightBar1;                                         // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RightBar2;                                         // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RightBar5;                                         // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RightBar3;                                         // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RightBar6;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LeftBar3;                                          // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LeftBar2;                                          // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LeftBar1;                                          // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MiddleBar;                                         // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LeftBar4;                                          // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RightBar4;                                         // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LeftBar10;                                         // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LeftBar8;                                          // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LeftBar9;                                          // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LeftBar6;                                          // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LeftBar7;                                          // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RightBar7;                                         // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RightBar8;                                         // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RightBar9;                                         // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RightBar10;                                        // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        MeshRoot;                                          // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Armadillo_Logo;                                 // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LogoRoot;                                          // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         VisualizerVisibilityTimeline_Visibility_2B1F1DF447D7BF9E1BD92ABFAFAA0F90; // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            VisualizerVisibilityTimeline__Direction_2B1F1DF447D7BF9E1BD92ABFAFAA0F90; // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D[0x3];                                      // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     VisualizerVisibilityTimeline;                      // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Target;                                            // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AmplitudeA;                                        // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AmplitudeB;                                        // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AmplitudeC;                                        // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVoPlaying;                                       // 0x036C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseLogoRotation;                                   // 0x036D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36E[0x2];                                      // 0x036E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LogoYawRotation;                                   // 0x0370(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VisualizerFlickerTime;                             // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             DeactivateSound;                                   // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ActivateSound;                                     // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_AudioVis(int32 EntryPoint);
	void LogAmplitudeValues();
	void LogoRotation(float DeltaSeconds);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void ToggleAudioVisualizer(bool IsVoPlaying_0);
	void ToggleLogoMesh(bool IsVoPlaying_0);
	void ToggleVisualizerMeshes(bool IsVoPlaying_0);
	void VisualizerVisibilityTimeline__FinishedFunc();
	void VisualizerVisibilityTimeline__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AudioVis_C">();
	}
	static class ABP_AudioVis_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AudioVis_C>();
	}
};
static_assert(alignof(ABP_AudioVis_C) == 0x000008, "Wrong alignment on ABP_AudioVis_C");
static_assert(sizeof(ABP_AudioVis_C) == 0x000388, "Wrong size on ABP_AudioVis_C");
static_assert(offsetof(ABP_AudioVis_C, UberGraphFrame) == 0x000270, "Member 'ABP_AudioVis_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, LeftBar5) == 0x000278, "Member 'ABP_AudioVis_C::LeftBar5' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, RightBar1) == 0x000280, "Member 'ABP_AudioVis_C::RightBar1' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, RightBar2) == 0x000288, "Member 'ABP_AudioVis_C::RightBar2' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, RightBar5) == 0x000290, "Member 'ABP_AudioVis_C::RightBar5' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, RightBar3) == 0x000298, "Member 'ABP_AudioVis_C::RightBar3' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, RightBar6) == 0x0002A0, "Member 'ABP_AudioVis_C::RightBar6' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, LeftBar3) == 0x0002A8, "Member 'ABP_AudioVis_C::LeftBar3' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, LeftBar2) == 0x0002B0, "Member 'ABP_AudioVis_C::LeftBar2' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, LeftBar1) == 0x0002B8, "Member 'ABP_AudioVis_C::LeftBar1' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, MiddleBar) == 0x0002C0, "Member 'ABP_AudioVis_C::MiddleBar' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, LeftBar4) == 0x0002C8, "Member 'ABP_AudioVis_C::LeftBar4' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, RightBar4) == 0x0002D0, "Member 'ABP_AudioVis_C::RightBar4' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, LeftBar10) == 0x0002D8, "Member 'ABP_AudioVis_C::LeftBar10' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, LeftBar8) == 0x0002E0, "Member 'ABP_AudioVis_C::LeftBar8' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, LeftBar9) == 0x0002E8, "Member 'ABP_AudioVis_C::LeftBar9' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, LeftBar6) == 0x0002F0, "Member 'ABP_AudioVis_C::LeftBar6' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, LeftBar7) == 0x0002F8, "Member 'ABP_AudioVis_C::LeftBar7' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, RightBar7) == 0x000300, "Member 'ABP_AudioVis_C::RightBar7' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, RightBar8) == 0x000308, "Member 'ABP_AudioVis_C::RightBar8' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, RightBar9) == 0x000310, "Member 'ABP_AudioVis_C::RightBar9' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, RightBar10) == 0x000318, "Member 'ABP_AudioVis_C::RightBar10' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, MeshRoot) == 0x000320, "Member 'ABP_AudioVis_C::MeshRoot' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, SM_Armadillo_Logo) == 0x000328, "Member 'ABP_AudioVis_C::SM_Armadillo_Logo' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, LogoRoot) == 0x000330, "Member 'ABP_AudioVis_C::LogoRoot' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, Audio) == 0x000338, "Member 'ABP_AudioVis_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, DefaultSceneRoot) == 0x000340, "Member 'ABP_AudioVis_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, VisualizerVisibilityTimeline_Visibility_2B1F1DF447D7BF9E1BD92ABFAFAA0F90) == 0x000348, "Member 'ABP_AudioVis_C::VisualizerVisibilityTimeline_Visibility_2B1F1DF447D7BF9E1BD92ABFAFAA0F90' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, VisualizerVisibilityTimeline__Direction_2B1F1DF447D7BF9E1BD92ABFAFAA0F90) == 0x00034C, "Member 'ABP_AudioVis_C::VisualizerVisibilityTimeline__Direction_2B1F1DF447D7BF9E1BD92ABFAFAA0F90' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, VisualizerVisibilityTimeline) == 0x000350, "Member 'ABP_AudioVis_C::VisualizerVisibilityTimeline' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, Target) == 0x000358, "Member 'ABP_AudioVis_C::Target' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, AmplitudeA) == 0x000360, "Member 'ABP_AudioVis_C::AmplitudeA' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, AmplitudeB) == 0x000364, "Member 'ABP_AudioVis_C::AmplitudeB' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, AmplitudeC) == 0x000368, "Member 'ABP_AudioVis_C::AmplitudeC' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, IsVoPlaying) == 0x00036C, "Member 'ABP_AudioVis_C::IsVoPlaying' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, UseLogoRotation) == 0x00036D, "Member 'ABP_AudioVis_C::UseLogoRotation' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, LogoYawRotation) == 0x000370, "Member 'ABP_AudioVis_C::LogoYawRotation' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, VisualizerFlickerTime) == 0x000374, "Member 'ABP_AudioVis_C::VisualizerFlickerTime' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, DeactivateSound) == 0x000378, "Member 'ABP_AudioVis_C::DeactivateSound' has a wrong offset!");
static_assert(offsetof(ABP_AudioVis_C, ActivateSound) == 0x000380, "Member 'ABP_AudioVis_C::ActivateSound' has a wrong offset!");

}

