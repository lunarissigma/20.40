#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LeaderboardListViewWrapper

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function LeaderboardListViewWrapper.LeaderboardListViewWrapper_C.ExecuteUbergraph_LeaderboardListViewWrapper
// 0x0228 (0x0228 - 0x0000)
struct LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELeaderboardDisplayType                       Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortTournamentDisplayInfo             K2Node_CustomEvent_DisplayInfo;                    // 0x0008(0x01D0)()
	float                                         CallFunc_RGBToHSV_H;                               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RGBToHSV_S;                               // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RGBToHSV_V;                               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RGBToHSV_A;                               // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_HSVToRGB_ReturnValue;                     // 0x01EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_EventId;                        // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_EventWindowId;                  // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ELeaderboardDisplayType                       K2Node_Event_NewDisplayType;                       // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper) == 0x000008, "Wrong alignment on LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper");
static_assert(sizeof(LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper) == 0x000228, "Wrong size on LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper");
static_assert(offsetof(LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper, EntryPoint) == 0x000000, "Member 'LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper::EntryPoint' has a wrong offset!");
static_assert(offsetof(LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper, Temp_byte_Variable) == 0x000004, "Member 'LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper, Temp_byte_Variable_1) == 0x000005, "Member 'LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper, Temp_byte_Variable_2) == 0x000006, "Member 'LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper, K2Node_CustomEvent_DisplayInfo) == 0x000008, "Member 'LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper::K2Node_CustomEvent_DisplayInfo' has a wrong offset!");
static_assert(offsetof(LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper, CallFunc_RGBToHSV_H) == 0x0001D8, "Member 'LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper::CallFunc_RGBToHSV_H' has a wrong offset!");
static_assert(offsetof(LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper, CallFunc_RGBToHSV_S) == 0x0001DC, "Member 'LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper::CallFunc_RGBToHSV_S' has a wrong offset!");
static_assert(offsetof(LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper, CallFunc_RGBToHSV_V) == 0x0001E0, "Member 'LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper::CallFunc_RGBToHSV_V' has a wrong offset!");
static_assert(offsetof(LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper, CallFunc_RGBToHSV_A) == 0x0001E4, "Member 'LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper::CallFunc_RGBToHSV_A' has a wrong offset!");
static_assert(offsetof(LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper, CallFunc_FClamp_ReturnValue) == 0x0001E8, "Member 'LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper, CallFunc_HSVToRGB_ReturnValue) == 0x0001EC, "Member 'LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper::CallFunc_HSVToRGB_ReturnValue' has a wrong offset!");
static_assert(offsetof(LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper, K2Node_CustomEvent_EventId) == 0x000200, "Member 'LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper::K2Node_CustomEvent_EventId' has a wrong offset!");
static_assert(offsetof(LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper, K2Node_CustomEvent_EventWindowId) == 0x000210, "Member 'LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper::K2Node_CustomEvent_EventWindowId' has a wrong offset!");
static_assert(offsetof(LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper, K2Node_Event_NewDisplayType) == 0x000220, "Member 'LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper::K2Node_Event_NewDisplayType' has a wrong offset!");
static_assert(offsetof(LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper, K2Node_Select_Default) == 0x000221, "Member 'LeaderboardListViewWrapper_C_ExecuteUbergraph_LeaderboardListViewWrapper::K2Node_Select_Default' has a wrong offset!");

// Function LeaderboardListViewWrapper.LeaderboardListViewWrapper_C.OnLeaderboardDisplayTypeChanged
// 0x0001 (0x0001 - 0x0000)
struct LeaderboardListViewWrapper_C_OnLeaderboardDisplayTypeChanged final
{
public:
	ELeaderboardDisplayType                       NewDisplayType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LeaderboardListViewWrapper_C_OnLeaderboardDisplayTypeChanged) == 0x000001, "Wrong alignment on LeaderboardListViewWrapper_C_OnLeaderboardDisplayTypeChanged");
static_assert(sizeof(LeaderboardListViewWrapper_C_OnLeaderboardDisplayTypeChanged) == 0x000001, "Wrong size on LeaderboardListViewWrapper_C_OnLeaderboardDisplayTypeChanged");
static_assert(offsetof(LeaderboardListViewWrapper_C_OnLeaderboardDisplayTypeChanged, NewDisplayType) == 0x000000, "Member 'LeaderboardListViewWrapper_C_OnLeaderboardDisplayTypeChanged::NewDisplayType' has a wrong offset!");

// Function LeaderboardListViewWrapper.LeaderboardListViewWrapper_C.Set Display Info
// 0x01D0 (0x01D0 - 0x0000)
struct LeaderboardListViewWrapper_C_Set_Display_Info final
{
public:
	struct FFortTournamentDisplayInfo             DisplayInfo_0;                                     // 0x0000(0x01D0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(LeaderboardListViewWrapper_C_Set_Display_Info) == 0x000008, "Wrong alignment on LeaderboardListViewWrapper_C_Set_Display_Info");
static_assert(sizeof(LeaderboardListViewWrapper_C_Set_Display_Info) == 0x0001D0, "Wrong size on LeaderboardListViewWrapper_C_Set_Display_Info");
static_assert(offsetof(LeaderboardListViewWrapper_C_Set_Display_Info, DisplayInfo_0) == 0x000000, "Member 'LeaderboardListViewWrapper_C_Set_Display_Info::DisplayInfo_0' has a wrong offset!");

// Function LeaderboardListViewWrapper.LeaderboardListViewWrapper_C.Set Event
// 0x0020 (0x0020 - 0x0000)
struct LeaderboardListViewWrapper_C_Set_Event final
{
public:
	class FString                                 EventId;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 EventWindowId;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(LeaderboardListViewWrapper_C_Set_Event) == 0x000008, "Wrong alignment on LeaderboardListViewWrapper_C_Set_Event");
static_assert(sizeof(LeaderboardListViewWrapper_C_Set_Event) == 0x000020, "Wrong size on LeaderboardListViewWrapper_C_Set_Event");
static_assert(offsetof(LeaderboardListViewWrapper_C_Set_Event, EventId) == 0x000000, "Member 'LeaderboardListViewWrapper_C_Set_Event::EventId' has a wrong offset!");
static_assert(offsetof(LeaderboardListViewWrapper_C_Set_Event, EventWindowId) == 0x000010, "Member 'LeaderboardListViewWrapper_C_Set_Event::EventWindowId' has a wrong offset!");

}

