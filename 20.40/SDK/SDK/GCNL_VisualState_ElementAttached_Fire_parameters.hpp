#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_VisualState_ElementAttached_Fire

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "B_Enum_PlayerFireStates_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GCNL_VisualState_ElementAttached_Fire.GCNL_VisualState_ElementAttached_Fire_C.ActivateBodyFX
// 0x0020 (0x0020 - 0x0000)
struct GCNL_VisualState_ElementAttached_Fire_C_ActivateBodyFX final
{
public:
	class UNiagaraSystem*                         CallFunc_GetNiagaraSystemTemplate_NiagaraSystem;   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_VisualState_ElementAttached_Fire_C_ActivateBodyFX) == 0x000008, "Wrong alignment on GCNL_VisualState_ElementAttached_Fire_C_ActivateBodyFX");
static_assert(sizeof(GCNL_VisualState_ElementAttached_Fire_C_ActivateBodyFX) == 0x000020, "Wrong size on GCNL_VisualState_ElementAttached_Fire_C_ActivateBodyFX");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_ActivateBodyFX, CallFunc_GetNiagaraSystemTemplate_NiagaraSystem) == 0x000000, "Member 'GCNL_VisualState_ElementAttached_Fire_C_ActivateBodyFX::CallFunc_GetNiagaraSystemTemplate_NiagaraSystem' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_ActivateBodyFX, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'GCNL_VisualState_ElementAttached_Fire_C_ActivateBodyFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_ActivateBodyFX, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000010, "Member 'GCNL_VisualState_ElementAttached_Fire_C_ActivateBodyFX::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_ActivateBodyFX, CallFunc_IsActive_ReturnValue) == 0x000018, "Member 'GCNL_VisualState_ElementAttached_Fire_C_ActivateBodyFX::CallFunc_IsActive_ReturnValue' has a wrong offset!");

// Function GCNL_VisualState_ElementAttached_Fire.GCNL_VisualState_ElementAttached_Fire_C.DeactivateBodyFX
// 0x0001 (0x0001 - 0x0000)
struct GCNL_VisualState_ElementAttached_Fire_C_DeactivateBodyFX final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_VisualState_ElementAttached_Fire_C_DeactivateBodyFX) == 0x000001, "Wrong alignment on GCNL_VisualState_ElementAttached_Fire_C_DeactivateBodyFX");
static_assert(sizeof(GCNL_VisualState_ElementAttached_Fire_C_DeactivateBodyFX) == 0x000001, "Wrong size on GCNL_VisualState_ElementAttached_Fire_C_DeactivateBodyFX");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_DeactivateBodyFX, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'GCNL_VisualState_ElementAttached_Fire_C_DeactivateBodyFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GCNL_VisualState_ElementAttached_Fire.GCNL_VisualState_ElementAttached_Fire_C.ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire
// 0x0228 (0x0228 - 0x0000)
struct GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_MyTarget_1;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters_1;                         // 0x0010(0x00D0)(ConstParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       K2Node_Event_ParticleComponents_1;                 // 0x00E0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents_1;                    // 0x00F0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UMatineeCameraShake*                    K2Node_Event_BurstCameraShakeInstance_1;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            K2Node_Event_BurstDecalInstance_1;                 // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_MyTarget;                             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 K2Node_Event_Parameters;                           // 0x0118(0x00D0)(ConstParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       K2Node_Event_ParticleComponents;                   // 0x01E8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                K2Node_Event_AudioComponents;                      // 0x01F8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UMatineeCameraShake*                    K2Node_Event_BurstCameraShakeInstance;             // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            K2Node_Event_BurstDecalInstance;                   // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              K2Node_DynamicCast_AsFort_Pawn;                    // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EB_Enum_PlayerFireStates                      CallFunc_GetPlayerFireState_PlayerState;           // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire) == 0x000008, "Wrong alignment on GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire");
static_assert(sizeof(GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire) == 0x000228, "Wrong size on GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire, EntryPoint) == 0x000000, "Member 'GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire, K2Node_Event_MyTarget_1) == 0x000008, "Member 'GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire::K2Node_Event_MyTarget_1' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire, K2Node_Event_Parameters_1) == 0x000010, "Member 'GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire::K2Node_Event_Parameters_1' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire, K2Node_Event_ParticleComponents_1) == 0x0000E0, "Member 'GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire::K2Node_Event_ParticleComponents_1' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire, K2Node_Event_AudioComponents_1) == 0x0000F0, "Member 'GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire::K2Node_Event_AudioComponents_1' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire, K2Node_Event_BurstCameraShakeInstance_1) == 0x000100, "Member 'GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire::K2Node_Event_BurstCameraShakeInstance_1' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire, K2Node_Event_BurstDecalInstance_1) == 0x000108, "Member 'GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire::K2Node_Event_BurstDecalInstance_1' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire, K2Node_Event_MyTarget) == 0x000110, "Member 'GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire::K2Node_Event_MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire, K2Node_Event_Parameters) == 0x000118, "Member 'GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire::K2Node_Event_Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire, K2Node_Event_ParticleComponents) == 0x0001E8, "Member 'GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire::K2Node_Event_ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire, K2Node_Event_AudioComponents) == 0x0001F8, "Member 'GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire::K2Node_Event_AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire, K2Node_Event_BurstCameraShakeInstance) == 0x000208, "Member 'GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire::K2Node_Event_BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire, K2Node_Event_BurstDecalInstance) == 0x000210, "Member 'GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire::K2Node_Event_BurstDecalInstance' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire, K2Node_DynamicCast_AsFort_Pawn) == 0x000218, "Member 'GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire::K2Node_DynamicCast_AsFort_Pawn' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire, K2Node_DynamicCast_bSuccess) == 0x000220, "Member 'GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire, CallFunc_GetPlayerFireState_PlayerState) == 0x000221, "Member 'GCNL_VisualState_ElementAttached_Fire_C_ExecuteUbergraph_GCNL_VisualState_ElementAttached_Fire::CallFunc_GetPlayerFireState_PlayerState' has a wrong offset!");

// Function GCNL_VisualState_ElementAttached_Fire.GCNL_VisualState_ElementAttached_Fire_C.FadeOnFireAudioComponent
// 0x0001 (0x0001 - 0x0000)
struct GCNL_VisualState_ElementAttached_Fire_C_FadeOnFireAudioComponent final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_VisualState_ElementAttached_Fire_C_FadeOnFireAudioComponent) == 0x000001, "Wrong alignment on GCNL_VisualState_ElementAttached_Fire_C_FadeOnFireAudioComponent");
static_assert(sizeof(GCNL_VisualState_ElementAttached_Fire_C_FadeOnFireAudioComponent) == 0x000001, "Wrong size on GCNL_VisualState_ElementAttached_Fire_C_FadeOnFireAudioComponent");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_FadeOnFireAudioComponent, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'GCNL_VisualState_ElementAttached_Fire_C_FadeOnFireAudioComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GCNL_VisualState_ElementAttached_Fire.GCNL_VisualState_ElementAttached_Fire_C.GetNiagaraSystemTemplate
// 0x0060 (0x0060 - 0x0000)
struct GCNL_VisualState_ElementAttached_Fire_C_GetNiagaraSystemTemplate final
{
public:
	class UNiagaraSystem*                         NiagaraSystem;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0020(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_VisualState_ElementAttached_Fire_C_GetNiagaraSystemTemplate) == 0x000008, "Wrong alignment on GCNL_VisualState_ElementAttached_Fire_C_GetNiagaraSystemTemplate");
static_assert(sizeof(GCNL_VisualState_ElementAttached_Fire_C_GetNiagaraSystemTemplate) == 0x000060, "Wrong size on GCNL_VisualState_ElementAttached_Fire_C_GetNiagaraSystemTemplate");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_GetNiagaraSystemTemplate, NiagaraSystem) == 0x000000, "Member 'GCNL_VisualState_ElementAttached_Fire_C_GetNiagaraSystemTemplate::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_GetNiagaraSystemTemplate, Temp_bool_Variable) == 0x000008, "Member 'GCNL_VisualState_ElementAttached_Fire_C_GetNiagaraSystemTemplate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_GetNiagaraSystemTemplate, Temp_object_Variable) == 0x000010, "Member 'GCNL_VisualState_ElementAttached_Fire_C_GetNiagaraSystemTemplate::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_GetNiagaraSystemTemplate, Temp_object_Variable_1) == 0x000018, "Member 'GCNL_VisualState_ElementAttached_Fire_C_GetNiagaraSystemTemplate::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_GetNiagaraSystemTemplate, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000020, "Member 'GCNL_VisualState_ElementAttached_Fire_C_GetNiagaraSystemTemplate::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_GetNiagaraSystemTemplate, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000040, "Member 'GCNL_VisualState_ElementAttached_Fire_C_GetNiagaraSystemTemplate::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_GetNiagaraSystemTemplate, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000050, "Member 'GCNL_VisualState_ElementAttached_Fire_C_GetNiagaraSystemTemplate::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_GetNiagaraSystemTemplate, K2Node_Select_Default) == 0x000058, "Member 'GCNL_VisualState_ElementAttached_Fire_C_GetNiagaraSystemTemplate::K2Node_Select_Default' has a wrong offset!");

// Function GCNL_VisualState_ElementAttached_Fire.GCNL_VisualState_ElementAttached_Fire_C.GetPlayerFireState
// 0x0002 (0x0002 - 0x0000)
struct GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireState final
{
public:
	EB_Enum_PlayerFireStates                      PlayerState;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EB_Enum_PlayerFireStates                      CallFunc_GetPlayerFireStateInternal_PlayerState;   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireState) == 0x000001, "Wrong alignment on GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireState");
static_assert(sizeof(GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireState) == 0x000002, "Wrong size on GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireState");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireState, PlayerState) == 0x000000, "Member 'GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireState::PlayerState' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireState, CallFunc_GetPlayerFireStateInternal_PlayerState) == 0x000001, "Member 'GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireState::CallFunc_GetPlayerFireStateInternal_PlayerState' has a wrong offset!");

// Function GCNL_VisualState_ElementAttached_Fire.GCNL_VisualState_ElementAttached_Fire_C.GetPlayerFireStateInternal
// 0x0040 (0x0040 - 0x0000)
struct GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireStateInternal final
{
public:
	EB_Enum_PlayerFireStates                      PlayerState;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0008(0x0020)()
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireStateInternal) == 0x000008, "Wrong alignment on GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireStateInternal");
static_assert(sizeof(GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireStateInternal) == 0x000040, "Wrong size on GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireStateInternal");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireStateInternal, PlayerState) == 0x000000, "Member 'GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireStateInternal::PlayerState' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireStateInternal, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000008, "Member 'GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireStateInternal::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireStateInternal, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000028, "Member 'GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireStateInternal::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireStateInternal, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000038, "Member 'GCNL_VisualState_ElementAttached_Fire_C_GetPlayerFireStateInternal::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function GCNL_VisualState_ElementAttached_Fire.GCNL_VisualState_ElementAttached_Fire_C.OnApplication
// 0x0108 (0x0108 - 0x0000)
struct GCNL_VisualState_ElementAttached_Fire_C_OnApplication final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       ParticleComponents;                                // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00E8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UMatineeCameraShake*                    BurstCameraShakeInstance;                          // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x0100(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_VisualState_ElementAttached_Fire_C_OnApplication) == 0x000008, "Wrong alignment on GCNL_VisualState_ElementAttached_Fire_C_OnApplication");
static_assert(sizeof(GCNL_VisualState_ElementAttached_Fire_C_OnApplication) == 0x000108, "Wrong size on GCNL_VisualState_ElementAttached_Fire_C_OnApplication");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_OnApplication, MyTarget) == 0x000000, "Member 'GCNL_VisualState_ElementAttached_Fire_C_OnApplication::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_OnApplication, Parameters) == 0x000008, "Member 'GCNL_VisualState_ElementAttached_Fire_C_OnApplication::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_OnApplication, ParticleComponents) == 0x0000D8, "Member 'GCNL_VisualState_ElementAttached_Fire_C_OnApplication::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_OnApplication, AudioComponents) == 0x0000E8, "Member 'GCNL_VisualState_ElementAttached_Fire_C_OnApplication::AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_OnApplication, BurstCameraShakeInstance) == 0x0000F8, "Member 'GCNL_VisualState_ElementAttached_Fire_C_OnApplication::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_OnApplication, BurstDecalInstance) == 0x000100, "Member 'GCNL_VisualState_ElementAttached_Fire_C_OnApplication::BurstDecalInstance' has a wrong offset!");

// Function GCNL_VisualState_ElementAttached_Fire.GCNL_VisualState_ElementAttached_Fire_C.OnRemoval
// 0x0108 (0x0108 - 0x0000)
struct GCNL_VisualState_ElementAttached_Fire_C_OnRemoval final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UParticleSystemComponent*>       ParticleComponents;                                // 0x00D8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UAudioComponent*>                AudioComponents;                                   // 0x00E8(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UMatineeCameraShake*                    BurstCameraShakeInstance;                          // 0x00F8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x0100(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_VisualState_ElementAttached_Fire_C_OnRemoval) == 0x000008, "Wrong alignment on GCNL_VisualState_ElementAttached_Fire_C_OnRemoval");
static_assert(sizeof(GCNL_VisualState_ElementAttached_Fire_C_OnRemoval) == 0x000108, "Wrong size on GCNL_VisualState_ElementAttached_Fire_C_OnRemoval");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_OnRemoval, MyTarget) == 0x000000, "Member 'GCNL_VisualState_ElementAttached_Fire_C_OnRemoval::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_OnRemoval, Parameters) == 0x000008, "Member 'GCNL_VisualState_ElementAttached_Fire_C_OnRemoval::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_OnRemoval, ParticleComponents) == 0x0000D8, "Member 'GCNL_VisualState_ElementAttached_Fire_C_OnRemoval::ParticleComponents' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_OnRemoval, AudioComponents) == 0x0000E8, "Member 'GCNL_VisualState_ElementAttached_Fire_C_OnRemoval::AudioComponents' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_OnRemoval, BurstCameraShakeInstance) == 0x0000F8, "Member 'GCNL_VisualState_ElementAttached_Fire_C_OnRemoval::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_OnRemoval, BurstDecalInstance) == 0x000100, "Member 'GCNL_VisualState_ElementAttached_Fire_C_OnRemoval::BurstDecalInstance' has a wrong offset!");

// Function GCNL_VisualState_ElementAttached_Fire.GCNL_VisualState_ElementAttached_Fire_C.SetBodyFXParameters
// 0x0034 (0x0034 - 0x0000)
struct GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters final
{
public:
	EB_Enum_PlayerFireStates                      PreviousPlayerFireState_0;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EB_Enum_PlayerFireStates                      Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EB_Enum_PlayerFireStates                      Temp_byte_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters) == 0x000004, "Wrong alignment on GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters");
static_assert(sizeof(GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters) == 0x000034, "Wrong size on GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters, PreviousPlayerFireState_0) == 0x000000, "Member 'GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters::PreviousPlayerFireState_0' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters, Temp_byte_Variable) == 0x000001, "Member 'GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters, Temp_float_Variable) == 0x000004, "Member 'GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters, Temp_float_Variable_1) == 0x000008, "Member 'GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters, Temp_byte_Variable_1) == 0x00000C, "Member 'GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters, Temp_float_Variable_2) == 0x000010, "Member 'GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters, Temp_float_Variable_3) == 0x000014, "Member 'GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters, Temp_float_Variable_4) == 0x000018, "Member 'GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters, CallFunc_IsLocallyControlled_ReturnValue) == 0x00001D, "Member 'GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters, K2Node_Select_Default) == 0x000020, "Member 'GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000024, "Member 'GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters, K2Node_Select_Default_1) == 0x000028, "Member 'GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x00002C, "Member 'GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters, CallFunc_Add_FloatFloat_ReturnValue) == 0x000030, "Member 'GCNL_VisualState_ElementAttached_Fire_C_SetBodyFXParameters::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function GCNL_VisualState_ElementAttached_Fire.GCNL_VisualState_ElementAttached_Fire_C.SetTargetPawn
// 0x0010 (0x0010 - 0x0000)
struct GCNL_VisualState_ElementAttached_Fire_C_SetTargetPawn final
{
public:
	class AFortPawn*                              TargetPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_VisualState_ElementAttached_Fire_C_SetTargetPawn) == 0x000008, "Wrong alignment on GCNL_VisualState_ElementAttached_Fire_C_SetTargetPawn");
static_assert(sizeof(GCNL_VisualState_ElementAttached_Fire_C_SetTargetPawn) == 0x000010, "Wrong size on GCNL_VisualState_ElementAttached_Fire_C_SetTargetPawn");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_SetTargetPawn, TargetPawn) == 0x000000, "Member 'GCNL_VisualState_ElementAttached_Fire_C_SetTargetPawn::TargetPawn' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_SetTargetPawn, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'GCNL_VisualState_ElementAttached_Fire_C_SetTargetPawn::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function GCNL_VisualState_ElementAttached_Fire.GCNL_VisualState_ElementAttached_Fire_C.UpdatePlayerVisualsByState
// 0x0028 (0x0028 - 0x0000)
struct GCNL_VisualState_ElementAttached_Fire_C_UpdatePlayerVisualsByState final
{
public:
	EB_Enum_PlayerFireStates                      PlayerState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyViewed_ReturnValue;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetBoolParameter_self_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_VisualState_ElementAttached_Fire_C_UpdatePlayerVisualsByState) == 0x000008, "Wrong alignment on GCNL_VisualState_ElementAttached_Fire_C_UpdatePlayerVisualsByState");
static_assert(sizeof(GCNL_VisualState_ElementAttached_Fire_C_UpdatePlayerVisualsByState) == 0x000028, "Wrong size on GCNL_VisualState_ElementAttached_Fire_C_UpdatePlayerVisualsByState");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_UpdatePlayerVisualsByState, PlayerState) == 0x000000, "Member 'GCNL_VisualState_ElementAttached_Fire_C_UpdatePlayerVisualsByState::PlayerState' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_UpdatePlayerVisualsByState, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'GCNL_VisualState_ElementAttached_Fire_C_UpdatePlayerVisualsByState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_UpdatePlayerVisualsByState, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'GCNL_VisualState_ElementAttached_Fire_C_UpdatePlayerVisualsByState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_UpdatePlayerVisualsByState, CallFunc_IsLocallyViewed_ReturnValue) == 0x000003, "Member 'GCNL_VisualState_ElementAttached_Fire_C_UpdatePlayerVisualsByState::CallFunc_IsLocallyViewed_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_UpdatePlayerVisualsByState, CallFunc_SetBoolParameter_self_CastInput) == 0x000008, "Member 'GCNL_VisualState_ElementAttached_Fire_C_UpdatePlayerVisualsByState::CallFunc_SetBoolParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_UpdatePlayerVisualsByState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000018, "Member 'GCNL_VisualState_ElementAttached_Fire_C_UpdatePlayerVisualsByState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_VisualState_ElementAttached_Fire_C_UpdatePlayerVisualsByState, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000020, "Member 'GCNL_VisualState_ElementAttached_Fire_C_UpdatePlayerVisualsByState::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

}

