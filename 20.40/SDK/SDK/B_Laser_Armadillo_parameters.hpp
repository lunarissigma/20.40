#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Laser_Armadillo

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function B_Laser_Armadillo.B_Laser_Armadillo_C.ExecuteUbergraph_B_Laser_Armadillo
// 0x00A0 (0x00A0 - 0x0000)
struct B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         CallFunc_SetBeamNiagaraSystem_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetInstigatorController_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float CurrentValue, float MaxValue, EFortWeaponOverheatState State, bool bIsInCooldown)> K2Node_CreateDelegate_OutputDelegate; // 0x002C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPersistentFire;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSecondaryFire;                       // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_1;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  CallFunc_GetFirstLocalFortPlayerController_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetPlayerPawn_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFirstLocalFortPlayerController_ReturnValue_1; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_Select_Default;                             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         CallFunc_SetBeamNiagaraSystem_ReturnValue_1;       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_1;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo) == 0x000008, "Wrong alignment on B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo");
static_assert(sizeof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo) == 0x0000A0, "Wrong size on B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, EntryPoint) == 0x000000, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, Temp_bool_Variable) == 0x000004, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, CallFunc_GetInstigator_ReturnValue) == 0x000008, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, CallFunc_SetBeamNiagaraSystem_ReturnValue) == 0x000010, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::CallFunc_SetBeamNiagaraSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, Temp_bool_Variable_1) == 0x000018, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, CallFunc_GetInstigatorController_ReturnValue) == 0x000020, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::CallFunc_GetInstigatorController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000029, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, K2Node_Event_bPersistentFire) == 0x000038, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::K2Node_Event_bPersistentFire' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, K2Node_Event_bSecondaryFire) == 0x000039, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::K2Node_Event_bSecondaryFire' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, CallFunc_IsDedicatedServer_ReturnValue) == 0x00003A, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, CallFunc_GetInstigator_ReturnValue_1) == 0x000040, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::CallFunc_GetInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, CallFunc_GetFirstLocalFortPlayerController_ReturnValue) == 0x000048, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::CallFunc_GetFirstLocalFortPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, CallFunc_GetPlayerPawn_ReturnValue) == 0x000058, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000060, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, CallFunc_GetFirstLocalFortPlayerController_ReturnValue_1) == 0x000068, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::CallFunc_GetFirstLocalFortPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, K2Node_Select_Default) == 0x000070, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, CallFunc_IsValid_ReturnValue_2) == 0x000078, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, CallFunc_SetBeamNiagaraSystem_ReturnValue_1) == 0x000080, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::CallFunc_SetBeamNiagaraSystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000088, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000090, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo, K2Node_Select_Default_1) == 0x000098, "Member 'B_Laser_Armadillo_C_ExecuteUbergraph_B_Laser_Armadillo::K2Node_Select_Default_1' has a wrong offset!");

// Function B_Laser_Armadillo.B_Laser_Armadillo_C.HandleWeaponFiltering
// 0x0001 (0x0001 - 0x0000)
struct B_Laser_Armadillo_C_HandleWeaponFiltering final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Laser_Armadillo_C_HandleWeaponFiltering) == 0x000001, "Wrong alignment on B_Laser_Armadillo_C_HandleWeaponFiltering");
static_assert(sizeof(B_Laser_Armadillo_C_HandleWeaponFiltering) == 0x000001, "Wrong size on B_Laser_Armadillo_C_HandleWeaponFiltering");
static_assert(offsetof(B_Laser_Armadillo_C_HandleWeaponFiltering, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'B_Laser_Armadillo_C_HandleWeaponFiltering::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_Laser_Armadillo.B_Laser_Armadillo_C.On Overheating Value
// 0x0040 (0x0040 - 0x0000)
struct B_Laser_Armadillo_C_On_Overheating_Value final
{
public:
	float                                         CurrentValue;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortWeaponOverheatState                      State;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInCooldown;                                     // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFirstLocalFortPlayerController_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetPlayerPawn_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Laser_Armadillo_C_On_Overheating_Value) == 0x000008, "Wrong alignment on B_Laser_Armadillo_C_On_Overheating_Value");
static_assert(sizeof(B_Laser_Armadillo_C_On_Overheating_Value) == 0x000040, "Wrong size on B_Laser_Armadillo_C_On_Overheating_Value");
static_assert(offsetof(B_Laser_Armadillo_C_On_Overheating_Value, CurrentValue) == 0x000000, "Member 'B_Laser_Armadillo_C_On_Overheating_Value::CurrentValue' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_On_Overheating_Value, MaxValue) == 0x000004, "Member 'B_Laser_Armadillo_C_On_Overheating_Value::MaxValue' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_On_Overheating_Value, State) == 0x000008, "Member 'B_Laser_Armadillo_C_On_Overheating_Value::State' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_On_Overheating_Value, bIsInCooldown) == 0x000009, "Member 'B_Laser_Armadillo_C_On_Overheating_Value::bIsInCooldown' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_On_Overheating_Value, K2Node_SwitchEnum_CmpSuccess) == 0x00000A, "Member 'B_Laser_Armadillo_C_On_Overheating_Value::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_On_Overheating_Value, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'B_Laser_Armadillo_C_On_Overheating_Value::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_On_Overheating_Value, CallFunc_GetInstigator_ReturnValue) == 0x000010, "Member 'B_Laser_Armadillo_C_On_Overheating_Value::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_On_Overheating_Value, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'B_Laser_Armadillo_C_On_Overheating_Value::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_On_Overheating_Value, CallFunc_GetFirstLocalFortPlayerController_ReturnValue) == 0x000020, "Member 'B_Laser_Armadillo_C_On_Overheating_Value::CallFunc_GetFirstLocalFortPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_On_Overheating_Value, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'B_Laser_Armadillo_C_On_Overheating_Value::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_On_Overheating_Value, CallFunc_GetPlayerPawn_ReturnValue) == 0x000030, "Member 'B_Laser_Armadillo_C_On_Overheating_Value::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_On_Overheating_Value, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000038, "Member 'B_Laser_Armadillo_C_On_Overheating_Value::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function B_Laser_Armadillo.B_Laser_Armadillo_C.OnPlayWeaponFireFX
// 0x0002 (0x0002 - 0x0000)
struct B_Laser_Armadillo_C_OnPlayWeaponFireFX final
{
public:
	bool                                          bPersistentFire;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSecondaryFire;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Laser_Armadillo_C_OnPlayWeaponFireFX) == 0x000001, "Wrong alignment on B_Laser_Armadillo_C_OnPlayWeaponFireFX");
static_assert(sizeof(B_Laser_Armadillo_C_OnPlayWeaponFireFX) == 0x000002, "Wrong size on B_Laser_Armadillo_C_OnPlayWeaponFireFX");
static_assert(offsetof(B_Laser_Armadillo_C_OnPlayWeaponFireFX, bPersistentFire) == 0x000000, "Member 'B_Laser_Armadillo_C_OnPlayWeaponFireFX::bPersistentFire' has a wrong offset!");
static_assert(offsetof(B_Laser_Armadillo_C_OnPlayWeaponFireFX, bSecondaryFire) == 0x000001, "Member 'B_Laser_Armadillo_C_OnPlayWeaponFireFX::bSecondaryFire' has a wrong offset!");

}

