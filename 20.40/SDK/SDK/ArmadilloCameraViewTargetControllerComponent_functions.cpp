#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ArmadilloCameraViewTargetControllerComponent

#include "Basic.hpp"

#include "ArmadilloCameraViewTargetControllerComponent_classes.hpp"
#include "ArmadilloCameraViewTargetControllerComponent_parameters.hpp"


namespace SDK
{

// Function ArmadilloCameraViewTargetControllerComponent.ArmadilloCameraViewTargetControllerComponent_C.ExecuteUbergraph_ArmadilloCameraViewTargetControllerComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmadilloCameraViewTargetControllerComponent_C::ExecuteUbergraph_ArmadilloCameraViewTargetControllerComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmadilloCameraViewTargetControllerComponent_C", "ExecuteUbergraph_ArmadilloCameraViewTargetControllerComponent");

	Params::ArmadilloCameraViewTargetControllerComponent_C_ExecuteUbergraph_ArmadilloCameraViewTargetControllerComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmadilloCameraViewTargetControllerComponent.ArmadilloCameraViewTargetControllerComponent_C.GetLocalPlayerPawn
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn**                 PlayerPawn                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmadilloCameraViewTargetControllerComponent_C::GetLocalPlayerPawn(class AFortPlayerPawn** PlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmadilloCameraViewTargetControllerComponent_C", "GetLocalPlayerPawn");

	Params::ArmadilloCameraViewTargetControllerComponent_C_GetLocalPlayerPawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerPawn != nullptr)
		*PlayerPawn = Parms.PlayerPawn;
}


// Function ArmadilloCameraViewTargetControllerComponent.ArmadilloCameraViewTargetControllerComponent_C.HandleActivated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bReset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmadilloCameraViewTargetControllerComponent_C::HandleActivated(class UActorComponent* Component, bool bReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmadilloCameraViewTargetControllerComponent_C", "HandleActivated");

	Params::ArmadilloCameraViewTargetControllerComponent_C_HandleActivated Parms{};

	Parms.Component = Component;
	Parms.bReset = bReset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmadilloCameraViewTargetControllerComponent.ArmadilloCameraViewTargetControllerComponent_C.HandleCursorPawnComponentSet
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USpecialEventCursorPawnComponent* CursorPawnComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortWeapon*                      Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmadilloCameraViewTargetControllerComponent_C::HandleCursorPawnComponentSet(class USpecialEventCursorPawnComponent* CursorPawnComponent, class AFortWeapon* Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmadilloCameraViewTargetControllerComponent_C", "HandleCursorPawnComponentSet");

	Params::ArmadilloCameraViewTargetControllerComponent_C_HandleCursorPawnComponentSet Parms{};

	Parms.CursorPawnComponent = CursorPawnComponent;
	Parms.Weapon = Weapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmadilloCameraViewTargetControllerComponent.ArmadilloCameraViewTargetControllerComponent_C.HandleCursorViewportLocationChanged
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USpecialEventCursorPawnComponent* CursorComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 NormalizedLocation                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector2D&                 ViewportLocation                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmadilloCameraViewTargetControllerComponent_C::HandleCursorViewportLocationChanged(class USpecialEventCursorPawnComponent* CursorComponent, const struct FVector2D& NormalizedLocation, const struct FVector2D& ViewportLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmadilloCameraViewTargetControllerComponent_C", "HandleCursorViewportLocationChanged");

	Params::ArmadilloCameraViewTargetControllerComponent_C_HandleCursorViewportLocationChanged Parms{};

	Parms.CursorComponent = CursorComponent;
	Parms.NormalizedLocation = std::move(NormalizedLocation);
	Parms.ViewportLocation = std::move(ViewportLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmadilloCameraViewTargetControllerComponent.ArmadilloCameraViewTargetControllerComponent_C.HandleDeactivated
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UActorComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmadilloCameraViewTargetControllerComponent_C::HandleDeactivated(class UActorComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmadilloCameraViewTargetControllerComponent_C", "HandleDeactivated");

	Params::ArmadilloCameraViewTargetControllerComponent_C_HandleDeactivated Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmadilloCameraViewTargetControllerComponent.ArmadilloCameraViewTargetControllerComponent_C.HandleViewTargetChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerController*            PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OldViewTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           NewViewTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmadilloCameraViewTargetControllerComponent_C::HandleViewTargetChanged(class AFortPlayerController* PlayerController, class AActor* OldViewTarget, class AActor* NewViewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmadilloCameraViewTargetControllerComponent_C", "HandleViewTargetChanged");

	Params::ArmadilloCameraViewTargetControllerComponent_C_HandleViewTargetChanged Parms{};

	Parms.PlayerController = PlayerController;
	Parms.OldViewTarget = OldViewTarget;
	Parms.NewViewTarget = NewViewTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmadilloCameraViewTargetControllerComponent.ArmadilloCameraViewTargetControllerComponent_C.HandleWeaponEquipped
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortWeapon*                      NewWeapon                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortWeapon*                      PrevWeapon                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmadilloCameraViewTargetControllerComponent_C::HandleWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmadilloCameraViewTargetControllerComponent_C", "HandleWeaponEquipped");

	Params::ArmadilloCameraViewTargetControllerComponent_C_HandleWeaponEquipped Parms{};

	Parms.NewWeapon = NewWeapon;
	Parms.PrevWeapon = PrevWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmadilloCameraViewTargetControllerComponent.ArmadilloCameraViewTargetControllerComponent_C.OnReady_B1ED7DBE42E7851FCEC39CA5A1DAD38B
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortGameStateAthena*             GameState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class UFortPlaylist*              Playlist                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTagContainer&     PlaylistContextTags                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UArmadilloCameraViewTargetControllerComponent_C::OnReady_B1ED7DBE42E7851FCEC39CA5A1DAD38B(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmadilloCameraViewTargetControllerComponent_C", "OnReady_B1ED7DBE42E7851FCEC39CA5A1DAD38B");

	Params::ArmadilloCameraViewTargetControllerComponent_C_OnReady_B1ED7DBE42E7851FCEC39CA5A1DAD38B Parms{};

	Parms.GameState = GameState;
	Parms.Playlist = Playlist;
	Parms.PlaylistContextTags = std::move(PlaylistContextTags);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmadilloCameraViewTargetControllerComponent.ArmadilloCameraViewTargetControllerComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UArmadilloCameraViewTargetControllerComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmadilloCameraViewTargetControllerComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmadilloCameraViewTargetControllerComponent.ArmadilloCameraViewTargetControllerComponent_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmadilloCameraViewTargetControllerComponent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmadilloCameraViewTargetControllerComponent_C", "ReceiveEndPlay");

	Params::ArmadilloCameraViewTargetControllerComponent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmadilloCameraViewTargetControllerComponent.ArmadilloCameraViewTargetControllerComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmadilloCameraViewTargetControllerComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmadilloCameraViewTargetControllerComponent_C", "ReceiveTick");

	Params::ArmadilloCameraViewTargetControllerComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmadilloCameraViewTargetControllerComponent.ArmadilloCameraViewTargetControllerComponent_C.CalculateAdditiveRotationOffset
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FRotator&                        currentRotationOffset                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator*                        NewRotationOffset                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UArmadilloCameraViewTargetControllerComponent_C::CalculateAdditiveRotationOffset(struct FRotator& currentRotationOffset, float DeltaTime, struct FRotator* NewRotationOffset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmadilloCameraViewTargetControllerComponent_C", "CalculateAdditiveRotationOffset");

	Params::ArmadilloCameraViewTargetControllerComponent_C_CalculateAdditiveRotationOffset Parms{};

	Parms.currentRotationOffset = std::move(currentRotationOffset);
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	currentRotationOffset = std::move(Parms.currentRotationOffset);

	if (NewRotationOffset != nullptr)
		*NewRotationOffset = std::move(Parms.NewRotationOffset);
}

}

