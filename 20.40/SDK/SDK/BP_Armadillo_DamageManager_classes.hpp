#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Armadillo_DamageManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Armadillo_DamageManager.BP_Armadillo_DamageManager_C
// 0x0090 (0x0300 - 0x0270)
class ABP_Armadillo_DamageManager_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         TL_LerpDamage_Emissive_3EFDD8854B66730B3B740AB0D6E0F296; // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TL_LerpDamage_Lerp_3EFDD8854B66730B3B740AB0D6E0F296; // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            TL_LerpDamage__Direction_3EFDD8854B66730B3B740AB0D6E0F296; // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     TL_LerpDamage;                                     // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialParameterCollection*           ArmadilloMPC;                                      // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DamageParam;                                       // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelfRelevancyIndex;                                // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ScreenFXTag;                                       // 0x02A8(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCameraShakeBase>           CameraShake;                                       // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   FFEffect;                                          // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Last;                                              // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         New;                                               // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(float Damage, float NDamage)> OnDamageReceived;                    // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         HealthDoggus;                                      // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(float NDamage)> OnDamageChanged;                                   // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void(float HealFor, float NHealFor)> OnHealthReceived;                  // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ApplyDamage(float DamageAmmount);
	void ExecuteUbergraph_BP_Armadillo_DamageManager(int32 EntryPoint);
	void Lerp();
	void RemoveDamage(float RemoveDamageAmmount);
	void TL_LerpDamage__FinishedFunc();
	void TL_LerpDamage__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Armadillo_DamageManager_C">();
	}
	static class ABP_Armadillo_DamageManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Armadillo_DamageManager_C>();
	}
};
static_assert(alignof(ABP_Armadillo_DamageManager_C) == 0x000008, "Wrong alignment on ABP_Armadillo_DamageManager_C");
static_assert(sizeof(ABP_Armadillo_DamageManager_C) == 0x000300, "Wrong size on ABP_Armadillo_DamageManager_C");
static_assert(offsetof(ABP_Armadillo_DamageManager_C, UberGraphFrame) == 0x000270, "Member 'ABP_Armadillo_DamageManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_DamageManager_C, DefaultSceneRoot) == 0x000278, "Member 'ABP_Armadillo_DamageManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_DamageManager_C, TL_LerpDamage_Emissive_3EFDD8854B66730B3B740AB0D6E0F296) == 0x000280, "Member 'ABP_Armadillo_DamageManager_C::TL_LerpDamage_Emissive_3EFDD8854B66730B3B740AB0D6E0F296' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_DamageManager_C, TL_LerpDamage_Lerp_3EFDD8854B66730B3B740AB0D6E0F296) == 0x000284, "Member 'ABP_Armadillo_DamageManager_C::TL_LerpDamage_Lerp_3EFDD8854B66730B3B740AB0D6E0F296' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_DamageManager_C, TL_LerpDamage__Direction_3EFDD8854B66730B3B740AB0D6E0F296) == 0x000288, "Member 'ABP_Armadillo_DamageManager_C::TL_LerpDamage__Direction_3EFDD8854B66730B3B740AB0D6E0F296' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_DamageManager_C, TL_LerpDamage) == 0x000290, "Member 'ABP_Armadillo_DamageManager_C::TL_LerpDamage' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_DamageManager_C, ArmadilloMPC) == 0x000298, "Member 'ABP_Armadillo_DamageManager_C::ArmadilloMPC' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_DamageManager_C, DamageParam) == 0x0002A0, "Member 'ABP_Armadillo_DamageManager_C::DamageParam' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_DamageManager_C, SelfRelevancyIndex) == 0x0002A4, "Member 'ABP_Armadillo_DamageManager_C::SelfRelevancyIndex' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_DamageManager_C, ScreenFXTag) == 0x0002A8, "Member 'ABP_Armadillo_DamageManager_C::ScreenFXTag' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_DamageManager_C, CameraShake) == 0x0002B0, "Member 'ABP_Armadillo_DamageManager_C::CameraShake' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_DamageManager_C, FFEffect) == 0x0002B8, "Member 'ABP_Armadillo_DamageManager_C::FFEffect' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_DamageManager_C, Last) == 0x0002C0, "Member 'ABP_Armadillo_DamageManager_C::Last' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_DamageManager_C, New) == 0x0002C4, "Member 'ABP_Armadillo_DamageManager_C::New' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_DamageManager_C, OnDamageReceived) == 0x0002C8, "Member 'ABP_Armadillo_DamageManager_C::OnDamageReceived' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_DamageManager_C, HealthDoggus) == 0x0002D8, "Member 'ABP_Armadillo_DamageManager_C::HealthDoggus' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_DamageManager_C, OnDamageChanged) == 0x0002E0, "Member 'ABP_Armadillo_DamageManager_C::OnDamageChanged' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_DamageManager_C, OnHealthReceived) == 0x0002F0, "Member 'ABP_Armadillo_DamageManager_C::OnHealthReceived' has a wrong offset!");

}

