#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Armadillo_HeartacheViewport

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CinematicCamera_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Armadillo_HeartacheViewport.BP_Armadillo_HeartacheViewport_C
// 0x0160 (0x0B10 - 0x09B0)
class ABP_Armadillo_HeartacheViewport_C final : public ACineCameraActor
{
public:
	uint8                                         Pad_9A8[0x8];                                      // 0x09A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x09B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Postprocess_effect_Plane;                          // 0x09B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortWidgetComponent*                   Widget_ConsoleMsg;                                 // 0x09C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight6;                                        // 0x09C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight5;                                        // 0x09D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortCameraModeOverrideComponent*       FortCameraModeOverride;                            // 0x09D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight1;                                        // 0x09E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight3;                                        // 0x09E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Top_ShadowCast;                                 // 0x09F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CenterConsole;                                  // 0x09F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CenterTop;                                      // 0x0A00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_RightWall;                                      // 0x0A08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_LeftWall;                                       // 0x0A10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight4;                                        // 0x0A18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight;                                         // 0x0A20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AttachComp_1;                                      // 0x0A28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AttachComp_0;                                      // 0x0A30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AttachComp_3;                                      // 0x0A38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        AttachComp_2;                                      // 0x0A40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        RootPlayerAttach;                                  // 0x0A48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortAutoRegisterActorComponent*        FortAutoRegisterActor;                             // 0x0A50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SwayLimit_Y;                                       // 0x0A58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SwayLimit_Z;                                       // 0x0A5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            HUDWidget;                                         // 0x0A60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                PlayerAttachComponents;                            // 0x0A68(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	float                                         VerticalFOV;                                       // 0x0A78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A7C[0x4];                                      // 0x0A7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortWorldItemDefinition*>       DoggusWeapons;                                     // 0x0A80(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UCameraComponent*                       Camera_Reference;                                  // 0x0A90(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            Block_Emote_GE;                                    // 0x0A98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<class AActor*>                         DamageManager;                                     // 0x0AA0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ABP_Armadillo_DamageManager_C*          DamagerManagerLocal;                               // 0x0AB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              RequestPlayHUDIntroAnimation;                      // 0x0AB8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class UFortWorldItemDefinition*>       DoggusWeapons_Upgraded;                            // 0x0AC8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               MIDOverheat;                                       // 0x0AD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         WeaponClassList;                                   // 0x0AE0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               MIDWeapon;                                         // 0x0AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DestroyHUDSetPawnHidden;                           // 0x0AF8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AF9[0x3];                                      // 0x0AF9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           HidePawnMoonViewportTag;                           // 0x0AFC(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         DisablePawnCollision;                              // 0x0B00(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddDoggusHUD();
	void ApplyDamage(float Damage, class AActor* DamageCauser);
	void CreateArmadilloHUD(bool AddToViewport);
	void DisableDoggusView(bool DestroyHUD);
	void EnableDoggusView();
	void ExecuteUbergraph_BP_Armadillo_HeartacheViewport(int32 EntryPoint);
	void HandlePawnVisibility(bool SetPawnHidden);
	void OnComplete_3E0B03E447F8FBBA97A0CC8BAF3B0662(class UUserWidget* UserWidget);
	void OnComplete_67F22BB14D221DBD7D3D7B933B253A90(class UUserWidget* UserWidget);
	void OnOvercharged();
	void OnReady_B8ECD083466D3ACD3D5412A1525A2B09(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void RemoveDoggusHUD(bool DestroyHUD);
	void RequestSetHUDVisibility(bool bShouldBeVisible, bool bShouldAnimateIntro);
	void ServerAttachPawnToHeadBP(TArray<class AFortPlayerPawn*>& FortPlayerPawn);
	void ServerDestroyComponents();
	void ServerDetachPawn(class AFortPlayerPawn* Player, const struct FVector& PlayerTeleportLocation, const struct FRotator& PlayerTeleportRotation);
	void SetCameraReference(class UCameraComponent* CameraComponent_0);
	void SetupEmergencyWidget();
	void TestDog();
	void ToggleDoggusView(bool bEnable, bool DestroyHUD);
	void UpdateOverheat(float Value);
	void UpdateWeaponIcon(class AFortWeaponRanged* Weapon);

	void GetViewExtents(float Distance, struct FVector2D* Extents) const;
	void NormalizedViewToWorldPosition(const struct FVector& NormalizedViewPosition, struct FVector* WorldPosition) const;
	void WorldToNormalizedViewPosition(const struct FVector& WorldPosition, struct FVector* NormalizedViewPosition) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Armadillo_HeartacheViewport_C">();
	}
	static class ABP_Armadillo_HeartacheViewport_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Armadillo_HeartacheViewport_C>();
	}
};
static_assert(alignof(ABP_Armadillo_HeartacheViewport_C) == 0x000010, "Wrong alignment on ABP_Armadillo_HeartacheViewport_C");
static_assert(sizeof(ABP_Armadillo_HeartacheViewport_C) == 0x000B10, "Wrong size on ABP_Armadillo_HeartacheViewport_C");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, UberGraphFrame) == 0x0009B0, "Member 'ABP_Armadillo_HeartacheViewport_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, Postprocess_effect_Plane) == 0x0009B8, "Member 'ABP_Armadillo_HeartacheViewport_C::Postprocess_effect_Plane' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, Widget_ConsoleMsg) == 0x0009C0, "Member 'ABP_Armadillo_HeartacheViewport_C::Widget_ConsoleMsg' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, RectLight6) == 0x0009C8, "Member 'ABP_Armadillo_HeartacheViewport_C::RectLight6' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, RectLight5) == 0x0009D0, "Member 'ABP_Armadillo_HeartacheViewport_C::RectLight5' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, FortCameraModeOverride) == 0x0009D8, "Member 'ABP_Armadillo_HeartacheViewport_C::FortCameraModeOverride' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, RectLight1) == 0x0009E0, "Member 'ABP_Armadillo_HeartacheViewport_C::RectLight1' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, RectLight3) == 0x0009E8, "Member 'ABP_Armadillo_HeartacheViewport_C::RectLight3' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, SM_Top_ShadowCast) == 0x0009F0, "Member 'ABP_Armadillo_HeartacheViewport_C::SM_Top_ShadowCast' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, SM_CenterConsole) == 0x0009F8, "Member 'ABP_Armadillo_HeartacheViewport_C::SM_CenterConsole' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, SM_CenterTop) == 0x000A00, "Member 'ABP_Armadillo_HeartacheViewport_C::SM_CenterTop' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, SM_RightWall) == 0x000A08, "Member 'ABP_Armadillo_HeartacheViewport_C::SM_RightWall' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, SM_LeftWall) == 0x000A10, "Member 'ABP_Armadillo_HeartacheViewport_C::SM_LeftWall' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, RectLight4) == 0x000A18, "Member 'ABP_Armadillo_HeartacheViewport_C::RectLight4' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, RectLight) == 0x000A20, "Member 'ABP_Armadillo_HeartacheViewport_C::RectLight' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, AttachComp_1) == 0x000A28, "Member 'ABP_Armadillo_HeartacheViewport_C::AttachComp_1' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, AttachComp_0) == 0x000A30, "Member 'ABP_Armadillo_HeartacheViewport_C::AttachComp_0' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, AttachComp_3) == 0x000A38, "Member 'ABP_Armadillo_HeartacheViewport_C::AttachComp_3' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, AttachComp_2) == 0x000A40, "Member 'ABP_Armadillo_HeartacheViewport_C::AttachComp_2' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, RootPlayerAttach) == 0x000A48, "Member 'ABP_Armadillo_HeartacheViewport_C::RootPlayerAttach' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, FortAutoRegisterActor) == 0x000A50, "Member 'ABP_Armadillo_HeartacheViewport_C::FortAutoRegisterActor' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, SwayLimit_Y) == 0x000A58, "Member 'ABP_Armadillo_HeartacheViewport_C::SwayLimit_Y' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, SwayLimit_Z) == 0x000A5C, "Member 'ABP_Armadillo_HeartacheViewport_C::SwayLimit_Z' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, HUDWidget) == 0x000A60, "Member 'ABP_Armadillo_HeartacheViewport_C::HUDWidget' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, PlayerAttachComponents) == 0x000A68, "Member 'ABP_Armadillo_HeartacheViewport_C::PlayerAttachComponents' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, VerticalFOV) == 0x000A78, "Member 'ABP_Armadillo_HeartacheViewport_C::VerticalFOV' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, DoggusWeapons) == 0x000A80, "Member 'ABP_Armadillo_HeartacheViewport_C::DoggusWeapons' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, Camera_Reference) == 0x000A90, "Member 'ABP_Armadillo_HeartacheViewport_C::Camera_Reference' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, Block_Emote_GE) == 0x000A98, "Member 'ABP_Armadillo_HeartacheViewport_C::Block_Emote_GE' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, DamageManager) == 0x000AA0, "Member 'ABP_Armadillo_HeartacheViewport_C::DamageManager' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, DamagerManagerLocal) == 0x000AB0, "Member 'ABP_Armadillo_HeartacheViewport_C::DamagerManagerLocal' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, RequestPlayHUDIntroAnimation) == 0x000AB8, "Member 'ABP_Armadillo_HeartacheViewport_C::RequestPlayHUDIntroAnimation' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, DoggusWeapons_Upgraded) == 0x000AC8, "Member 'ABP_Armadillo_HeartacheViewport_C::DoggusWeapons_Upgraded' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, MIDOverheat) == 0x000AD8, "Member 'ABP_Armadillo_HeartacheViewport_C::MIDOverheat' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, WeaponClassList) == 0x000AE0, "Member 'ABP_Armadillo_HeartacheViewport_C::WeaponClassList' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, MIDWeapon) == 0x000AF0, "Member 'ABP_Armadillo_HeartacheViewport_C::MIDWeapon' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, DestroyHUDSetPawnHidden) == 0x000AF8, "Member 'ABP_Armadillo_HeartacheViewport_C::DestroyHUDSetPawnHidden' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, HidePawnMoonViewportTag) == 0x000AFC, "Member 'ABP_Armadillo_HeartacheViewport_C::HidePawnMoonViewportTag' has a wrong offset!");
static_assert(offsetof(ABP_Armadillo_HeartacheViewport_C, DisablePawnCollision) == 0x000B00, "Member 'ABP_Armadillo_HeartacheViewport_C::DisablePawnCollision' has a wrong offset!");

}

