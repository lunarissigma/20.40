#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Events_AudioAnalysis_Stem_Component

#include "Basic.hpp"


namespace SDK::Params
{

// Function Events_AudioAnalysis_Stem_Component.Events_AudioAnalysis_Stem_Component_C.UpdateOnset
// 0x0058 (0x0058 - 0x0000)
struct Events_AudioAnalysis_Stem_Component_C_UpdateOnset final
{
public:
	float                                         InputPin;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOnsetNRT*                              K2Node_DynamicCast_AsOnset_NRT;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_GetNormalizedChannelOnsetsBetweenTimes_OutOnsetTimestamps; // 0x0018(0x0010)(ReferenceParm)
	TArray<float>                                 CallFunc_GetNormalizedChannelOnsetsBetweenTimes_OutOnsetStrengths; // 0x0028(0x0010)(ReferenceParm)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Events_AudioAnalysis_Stem_Component_C_UpdateOnset) == 0x000008, "Wrong alignment on Events_AudioAnalysis_Stem_Component_C_UpdateOnset");
static_assert(sizeof(Events_AudioAnalysis_Stem_Component_C_UpdateOnset) == 0x000058, "Wrong size on Events_AudioAnalysis_Stem_Component_C_UpdateOnset");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateOnset, InputPin) == 0x000000, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateOnset::InputPin' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateOnset, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateOnset::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateOnset, K2Node_DynamicCast_AsOnset_NRT) == 0x000008, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateOnset::K2Node_DynamicCast_AsOnset_NRT' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateOnset, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateOnset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateOnset, CallFunc_GetNormalizedChannelOnsetsBetweenTimes_OutOnsetTimestamps) == 0x000018, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateOnset::CallFunc_GetNormalizedChannelOnsetsBetweenTimes_OutOnsetTimestamps' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateOnset, CallFunc_GetNormalizedChannelOnsetsBetweenTimes_OutOnsetStrengths) == 0x000028, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateOnset::CallFunc_GetNormalizedChannelOnsetsBetweenTimes_OutOnsetStrengths' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateOnset, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000038, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateOnset::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateOnset, CallFunc_MaxOfFloatArray_IndexOfMaxValue) == 0x00003C, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateOnset::CallFunc_MaxOfFloatArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateOnset, CallFunc_MaxOfFloatArray_MaxValue) == 0x000040, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateOnset::CallFunc_MaxOfFloatArray_MaxValue' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateOnset, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000044, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateOnset::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateOnset, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000048, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateOnset::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateOnset, CallFunc_Abs_ReturnValue) == 0x00004C, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateOnset::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateOnset, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000050, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateOnset::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateOnset, CallFunc_BooleanAND_ReturnValue) == 0x000051, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateOnset::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Events_AudioAnalysis_Stem_Component.Events_AudioAnalysis_Stem_Component_C.UpdateLoudness
// 0x0018 (0x0018 - 0x0000)
struct Events_AudioAnalysis_Stem_Component_C_UpdateLoudness final
{
public:
	float                                         InSeconds;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULoudnessNRT*                           K2Node_DynamicCast_AsLoudness_NRT;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetNormalizedLoudnessAtTime_OutLoudness;  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Events_AudioAnalysis_Stem_Component_C_UpdateLoudness) == 0x000008, "Wrong alignment on Events_AudioAnalysis_Stem_Component_C_UpdateLoudness");
static_assert(sizeof(Events_AudioAnalysis_Stem_Component_C_UpdateLoudness) == 0x000018, "Wrong size on Events_AudioAnalysis_Stem_Component_C_UpdateLoudness");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateLoudness, InSeconds) == 0x000000, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateLoudness::InSeconds' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateLoudness, K2Node_DynamicCast_AsLoudness_NRT) == 0x000008, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateLoudness::K2Node_DynamicCast_AsLoudness_NRT' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateLoudness, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateLoudness::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateLoudness, CallFunc_GetNormalizedLoudnessAtTime_OutLoudness) == 0x000014, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateLoudness::CallFunc_GetNormalizedLoudnessAtTime_OutLoudness' has a wrong offset!");

// Function Events_AudioAnalysis_Stem_Component.Events_AudioAnalysis_Stem_Component_C.UpdateConstantQ
// 0x0028 (0x0028 - 0x0000)
struct Events_AudioAnalysis_Stem_Component_C_UpdateConstantQ final
{
public:
	float                                         InSeconds;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UConstantQNRT*                          K2Node_DynamicCast_AsConstant_QNRT;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_GetNormalizedChannelConstantQAtTime_OutConstantQ; // 0x0018(0x0010)(ReferenceParm)
};
static_assert(alignof(Events_AudioAnalysis_Stem_Component_C_UpdateConstantQ) == 0x000008, "Wrong alignment on Events_AudioAnalysis_Stem_Component_C_UpdateConstantQ");
static_assert(sizeof(Events_AudioAnalysis_Stem_Component_C_UpdateConstantQ) == 0x000028, "Wrong size on Events_AudioAnalysis_Stem_Component_C_UpdateConstantQ");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateConstantQ, InSeconds) == 0x000000, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateConstantQ::InSeconds' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateConstantQ, K2Node_DynamicCast_AsConstant_QNRT) == 0x000008, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateConstantQ::K2Node_DynamicCast_AsConstant_QNRT' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateConstantQ, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateConstantQ::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_UpdateConstantQ, CallFunc_GetNormalizedChannelConstantQAtTime_OutConstantQ) == 0x000018, "Member 'Events_AudioAnalysis_Stem_Component_C_UpdateConstantQ::CallFunc_GetNormalizedChannelConstantQAtTime_OutConstantQ' has a wrong offset!");

// Function Events_AudioAnalysis_Stem_Component.Events_AudioAnalysis_Stem_Component_C.Update
// 0x000C (0x000C - 0x0000)
struct Events_AudioAnalysis_Stem_Component_C_Update final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeLocal;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Events_AudioAnalysis_Stem_Component_C_Update) == 0x000004, "Wrong alignment on Events_AudioAnalysis_Stem_Component_C_Update");
static_assert(sizeof(Events_AudioAnalysis_Stem_Component_C_Update) == 0x00000C, "Wrong size on Events_AudioAnalysis_Stem_Component_C_Update");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_Update, Time) == 0x000000, "Member 'Events_AudioAnalysis_Stem_Component_C_Update::Time' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_Update, TimeLocal) == 0x000004, "Member 'Events_AudioAnalysis_Stem_Component_C_Update::TimeLocal' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_Update, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'Events_AudioAnalysis_Stem_Component_C_Update::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_Update, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'Events_AudioAnalysis_Stem_Component_C_Update::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Events_AudioAnalysis_Stem_Component.Events_AudioAnalysis_Stem_Component_C.PostUpdate
// 0x0001 (0x0001 - 0x0000)
struct Events_AudioAnalysis_Stem_Component_C_PostUpdate final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Events_AudioAnalysis_Stem_Component_C_PostUpdate) == 0x000001, "Wrong alignment on Events_AudioAnalysis_Stem_Component_C_PostUpdate");
static_assert(sizeof(Events_AudioAnalysis_Stem_Component_C_PostUpdate) == 0x000001, "Wrong size on Events_AudioAnalysis_Stem_Component_C_PostUpdate");
static_assert(offsetof(Events_AudioAnalysis_Stem_Component_C_PostUpdate, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Events_AudioAnalysis_Stem_Component_C_PostUpdate::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

