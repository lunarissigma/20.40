#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_SCMachine_Passive

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_SCMachine_Passive.GA_Athena_SCMachine_Passive_C
// 0x0030 (0x0AE8 - 0x0AB8)
class UGA_Athena_SCMachine_Passive_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPlayerPawnAthena*                  PlayerPawn;                                        // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnZOffset;                                      // 0x0AC8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           BlockChipSpawnTag;                                 // 0x0AE0(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Check_Resurrection_Active(bool* bEnabled);
	void CheckPlayerChipSpawnEnabled(bool* IsChipSpawnEnabled);
	void ExecuteUbergraph_GA_Athena_SCMachine_Passive(int32 EntryPoint);
	void HandleOnFortPlayerDied(class AFortPlayerPawnAthena* FortPlayerPawnAthena);
	void K2_ActivateAbility();
	void SaveOutPlayer();
	void Spawn();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_SCMachine_Passive_C">();
	}
	static class UGA_Athena_SCMachine_Passive_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_SCMachine_Passive_C>();
	}
};
static_assert(alignof(UGA_Athena_SCMachine_Passive_C) == 0x000008, "Wrong alignment on UGA_Athena_SCMachine_Passive_C");
static_assert(sizeof(UGA_Athena_SCMachine_Passive_C) == 0x000AE8, "Wrong size on UGA_Athena_SCMachine_Passive_C");
static_assert(offsetof(UGA_Athena_SCMachine_Passive_C, UberGraphFrame) == 0x000AB8, "Member 'UGA_Athena_SCMachine_Passive_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_SCMachine_Passive_C, PlayerPawn) == 0x000AC0, "Member 'UGA_Athena_SCMachine_Passive_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_SCMachine_Passive_C, SpawnZOffset) == 0x000AC8, "Member 'UGA_Athena_SCMachine_Passive_C::SpawnZOffset' has a wrong offset!");
static_assert(offsetof(UGA_Athena_SCMachine_Passive_C, BlockChipSpawnTag) == 0x000AE0, "Member 'UGA_Athena_SCMachine_Passive_C::BlockChipSpawnTag' has a wrong offset!");

}

