#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_WeaponAutoSwapping

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_WeaponAutoSwapping.GA_WeaponAutoSwapping_C
// 0x0030 (0x0AE8 - 0x0AB8)
class UGA_WeaponAutoSwapping_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPawn*                              As_Fort_Pawn;                                      // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         EquippedWeapon;                                    // 0x0AC8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UClass*>                         EquippedWeapon_Upgraded;                           // 0x0AD8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GA_WeaponAutoSwapping(int32 EntryPoint);
	void FailedToActivatePassiveAbility();
	void GetNextWeapon(const class UClass*& ItemToFind, int32* Index_0, bool* Found);
	void K2_ActivateAbility();
	void OnOverheatChanged(float CurrentValue, float MaxValue, EFortWeaponOverheatState State, bool bIsInCooldown);
	void SpecialEventClient(const struct FSpecialClientEvent& ClientEventData);
	void WeaponChanged(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_WeaponAutoSwapping_C">();
	}
	static class UGA_WeaponAutoSwapping_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_WeaponAutoSwapping_C>();
	}
};
static_assert(alignof(UGA_WeaponAutoSwapping_C) == 0x000008, "Wrong alignment on UGA_WeaponAutoSwapping_C");
static_assert(sizeof(UGA_WeaponAutoSwapping_C) == 0x000AE8, "Wrong size on UGA_WeaponAutoSwapping_C");
static_assert(offsetof(UGA_WeaponAutoSwapping_C, UberGraphFrame) == 0x000AB8, "Member 'UGA_WeaponAutoSwapping_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_WeaponAutoSwapping_C, As_Fort_Pawn) == 0x000AC0, "Member 'UGA_WeaponAutoSwapping_C::As_Fort_Pawn' has a wrong offset!");
static_assert(offsetof(UGA_WeaponAutoSwapping_C, EquippedWeapon) == 0x000AC8, "Member 'UGA_WeaponAutoSwapping_C::EquippedWeapon' has a wrong offset!");
static_assert(offsetof(UGA_WeaponAutoSwapping_C, EquippedWeapon_Upgraded) == 0x000AD8, "Member 'UGA_WeaponAutoSwapping_C::EquippedWeapon_Upgraded' has a wrong offset!");

}

