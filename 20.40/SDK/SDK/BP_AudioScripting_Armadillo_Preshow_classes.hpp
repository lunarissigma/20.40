#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AudioScripting_Armadillo_Preshow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_AudioScripting_Parent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AudioScripting_Armadillo_Preshow.BP_AudioScripting_Armadillo_Preshow_C
// 0x00E8 (0x0550 - 0x0468)
class ABP_AudioScripting_Armadillo_Preshow_C final : public ABP_AudioScripting_Parent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AudioScripting_Armadillo_Preshow_C; // 0x0468(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USoundMix*                              ArmadilloPreShowSoundMix;                          // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundMix*                              ActiveSoundMix;                                    // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PreEvent_Ambient_Name;                             // 0x0480(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484[0x4];                                      // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAmbientAudioDataAsset*                 PreEventAmbientAsset;                              // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreEventAmbientPriority;                           // 0x0490(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreEventAmbient_Crossfade_Time;                    // 0x0494(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PodAmbiancePriority;                               // 0x0498(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pod_Ambiance_Crossfade_Time;                       // 0x049C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PodAmbient_Name;                                   // 0x04A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4[0x4];                                      // 0x04A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAmbientAudioDataAsset*                 Pod_Ambiance_Asset;                                // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class AFortSplineAudioActor>   Armadillo_BridgeWindow_SplineAudioActor_SoftRef;   // 0x04B0(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_Frontend_EventLevel_NavObject_MapTable_Fixed_C> Armadillo_BridgeHologram_Actor_SoftRef; // 0x04D8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          PlayMusic;                                         // 0x0500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        PreShowMusicAudio;                                 // 0x0508(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             PreShowMusicSound;                                 // 0x0510(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ABP_Generic_TimerManager_C> TimerManager_SoftReference;                     // 0x0518(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class AAmbientSound>>   TimerSounds;                                       // 0x0540(0x0010)(Edit, BlueprintVisible)

public:
	void Disable_Previous_Active_Sound_Mix();
	void Enable_Active_Sound_mix(class USoundMix*& New_Sound_Mix);
	void EnterPod();
	void ExecuteUbergraph_BP_AudioScripting_Armadillo_Preshow(int32 EntryPoint);
	void ExitPod();
	void Mix_Mod_Activated(class USoundMix* InSoundMixModifier);
	void PlayBeepSound(int32 SecondsRemaining);
	void PlayPreEventAmbiance(float Crossfade_Time);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void SetAndEnableSoundMix(class USoundMix* Sound_Mix);
	void SetPlayMusic(bool PlayMusic_0);
	void StartPreShowMusic();
	void StopPreEventAmbiance();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AudioScripting_Armadillo_Preshow_C">();
	}
	static class ABP_AudioScripting_Armadillo_Preshow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AudioScripting_Armadillo_Preshow_C>();
	}
};
static_assert(alignof(ABP_AudioScripting_Armadillo_Preshow_C) == 0x000008, "Wrong alignment on ABP_AudioScripting_Armadillo_Preshow_C");
static_assert(sizeof(ABP_AudioScripting_Armadillo_Preshow_C) == 0x000550, "Wrong size on ABP_AudioScripting_Armadillo_Preshow_C");
static_assert(offsetof(ABP_AudioScripting_Armadillo_Preshow_C, UberGraphFrame_BP_AudioScripting_Armadillo_Preshow_C) == 0x000468, "Member 'ABP_AudioScripting_Armadillo_Preshow_C::UberGraphFrame_BP_AudioScripting_Armadillo_Preshow_C' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Armadillo_Preshow_C, ArmadilloPreShowSoundMix) == 0x000470, "Member 'ABP_AudioScripting_Armadillo_Preshow_C::ArmadilloPreShowSoundMix' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Armadillo_Preshow_C, ActiveSoundMix) == 0x000478, "Member 'ABP_AudioScripting_Armadillo_Preshow_C::ActiveSoundMix' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Armadillo_Preshow_C, PreEvent_Ambient_Name) == 0x000480, "Member 'ABP_AudioScripting_Armadillo_Preshow_C::PreEvent_Ambient_Name' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Armadillo_Preshow_C, PreEventAmbientAsset) == 0x000488, "Member 'ABP_AudioScripting_Armadillo_Preshow_C::PreEventAmbientAsset' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Armadillo_Preshow_C, PreEventAmbientPriority) == 0x000490, "Member 'ABP_AudioScripting_Armadillo_Preshow_C::PreEventAmbientPriority' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Armadillo_Preshow_C, PreEventAmbient_Crossfade_Time) == 0x000494, "Member 'ABP_AudioScripting_Armadillo_Preshow_C::PreEventAmbient_Crossfade_Time' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Armadillo_Preshow_C, PodAmbiancePriority) == 0x000498, "Member 'ABP_AudioScripting_Armadillo_Preshow_C::PodAmbiancePriority' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Armadillo_Preshow_C, Pod_Ambiance_Crossfade_Time) == 0x00049C, "Member 'ABP_AudioScripting_Armadillo_Preshow_C::Pod_Ambiance_Crossfade_Time' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Armadillo_Preshow_C, PodAmbient_Name) == 0x0004A0, "Member 'ABP_AudioScripting_Armadillo_Preshow_C::PodAmbient_Name' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Armadillo_Preshow_C, Pod_Ambiance_Asset) == 0x0004A8, "Member 'ABP_AudioScripting_Armadillo_Preshow_C::Pod_Ambiance_Asset' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Armadillo_Preshow_C, Armadillo_BridgeWindow_SplineAudioActor_SoftRef) == 0x0004B0, "Member 'ABP_AudioScripting_Armadillo_Preshow_C::Armadillo_BridgeWindow_SplineAudioActor_SoftRef' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Armadillo_Preshow_C, Armadillo_BridgeHologram_Actor_SoftRef) == 0x0004D8, "Member 'ABP_AudioScripting_Armadillo_Preshow_C::Armadillo_BridgeHologram_Actor_SoftRef' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Armadillo_Preshow_C, PlayMusic) == 0x000500, "Member 'ABP_AudioScripting_Armadillo_Preshow_C::PlayMusic' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Armadillo_Preshow_C, PreShowMusicAudio) == 0x000508, "Member 'ABP_AudioScripting_Armadillo_Preshow_C::PreShowMusicAudio' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Armadillo_Preshow_C, PreShowMusicSound) == 0x000510, "Member 'ABP_AudioScripting_Armadillo_Preshow_C::PreShowMusicSound' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Armadillo_Preshow_C, TimerManager_SoftReference) == 0x000518, "Member 'ABP_AudioScripting_Armadillo_Preshow_C::TimerManager_SoftReference' has a wrong offset!");
static_assert(offsetof(ABP_AudioScripting_Armadillo_Preshow_C, TimerSounds) == 0x000540, "Member 'ABP_AudioScripting_Armadillo_Preshow_C::TimerSounds' has a wrong offset!");

}

