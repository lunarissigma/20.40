#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ActivityBrowserModeSetListEntry

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "DiscoveryBrowserUI_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ActivityBrowserModeSetListEntry.ActivityBrowserModeSetListEntry_C
// 0x00E0 (0x1090 - 0x0FB0)
class UActivityBrowserModeSetListEntry_C final : public UFortActivityBrowserModeSetListEntry
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0FB0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       SetDisabledColoration;                             // 0x0FB8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnDisabledClick;                                   // 0x0FC0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnDisabledIconPulse;                               // 0x0FC8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnHoverUnhoverRehover;                             // 0x0FD0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OnImageLoaded;                                     // 0x0FD8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCategoryButton_C*                      CategoryButton;                                    // 0x0FE0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       DisabledWarningMessage;                            // 0x0FE8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               IconOvr;                                           // 0x0FF0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_KeyArt;                                      // 0x0FF8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Ovr_Primary;                                       // 0x1000(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OvrDisabledWarning;                                // 0x1008(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Primary;                                   // 0x1010(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   KeyArtParameter;                                   // 0x1018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MissingArtParameter;                               // 0x101C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ImageScaleAddParameter;                            // 0x1020(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HasFavoriteButtonParameter;                        // 0x1024(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HasDetailsButtonParameter;                         // 0x1028(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   IsFavoritedParameter;                              // 0x102C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsKeyArtValid;                                     // 0x1030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1031[0x7];                                     // 0x1031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               DefaultImage;                                      // 0x1038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTileActive;                                      // 0x1040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1041[0x7];                                     // 0x1041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           DisabledClickTimer;                                // 0x1048(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         DisabledClickDuration;                             // 0x1050(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActivityValid;                                   // 0x1054(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1055[0x3];                                     // 0x1055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              TileSize;                                          // 0x1058(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      DefaultMaterial;                                   // 0x1068(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      RequiresPurchaseMaterial;                          // 0x1070(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TextHoverParameter;                                // 0x1078(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FrameBorderBrightParameter;                        // 0x107C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FrameBorderMidParameter;                           // 0x1080(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TopBannerParameter;                                // 0x1084(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DesaturateAndDarkenParam;                          // 0x1088(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   IsDisabledFrameParam;                              // 0x108C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_OnHovered();
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void BP_OnUnhovered();
	void Construct();
	void ExecuteUbergraph_ActivityBrowserModeSetListEntry(int32 EntryPoint);
	void OnActivityNameSet(const class FText& ActivityName);
	void OnPreviewImageChanged(const bool bIsLoading, const class UTexture* Texture);
	void RefreshDisabledState();
	void ResetSetDisabledColorationAnimation();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ActivityBrowserModeSetListEntry_C">();
	}
	static class UActivityBrowserModeSetListEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UActivityBrowserModeSetListEntry_C>();
	}
};
static_assert(alignof(UActivityBrowserModeSetListEntry_C) == 0x000010, "Wrong alignment on UActivityBrowserModeSetListEntry_C");
static_assert(sizeof(UActivityBrowserModeSetListEntry_C) == 0x001090, "Wrong size on UActivityBrowserModeSetListEntry_C");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, UberGraphFrame) == 0x000FB0, "Member 'UActivityBrowserModeSetListEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, SetDisabledColoration) == 0x000FB8, "Member 'UActivityBrowserModeSetListEntry_C::SetDisabledColoration' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, OnDisabledClick) == 0x000FC0, "Member 'UActivityBrowserModeSetListEntry_C::OnDisabledClick' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, OnDisabledIconPulse) == 0x000FC8, "Member 'UActivityBrowserModeSetListEntry_C::OnDisabledIconPulse' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, OnHoverUnhoverRehover) == 0x000FD0, "Member 'UActivityBrowserModeSetListEntry_C::OnHoverUnhoverRehover' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, OnImageLoaded) == 0x000FD8, "Member 'UActivityBrowserModeSetListEntry_C::OnImageLoaded' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, CategoryButton) == 0x000FE0, "Member 'UActivityBrowserModeSetListEntry_C::CategoryButton' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, DisabledWarningMessage) == 0x000FE8, "Member 'UActivityBrowserModeSetListEntry_C::DisabledWarningMessage' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, IconOvr) == 0x000FF0, "Member 'UActivityBrowserModeSetListEntry_C::IconOvr' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, Image_KeyArt) == 0x000FF8, "Member 'UActivityBrowserModeSetListEntry_C::Image_KeyArt' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, Ovr_Primary) == 0x001000, "Member 'UActivityBrowserModeSetListEntry_C::Ovr_Primary' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, OvrDisabledWarning) == 0x001008, "Member 'UActivityBrowserModeSetListEntry_C::OvrDisabledWarning' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, SizeBox_Primary) == 0x001010, "Member 'UActivityBrowserModeSetListEntry_C::SizeBox_Primary' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, KeyArtParameter) == 0x001018, "Member 'UActivityBrowserModeSetListEntry_C::KeyArtParameter' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, MissingArtParameter) == 0x00101C, "Member 'UActivityBrowserModeSetListEntry_C::MissingArtParameter' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, ImageScaleAddParameter) == 0x001020, "Member 'UActivityBrowserModeSetListEntry_C::ImageScaleAddParameter' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, HasFavoriteButtonParameter) == 0x001024, "Member 'UActivityBrowserModeSetListEntry_C::HasFavoriteButtonParameter' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, HasDetailsButtonParameter) == 0x001028, "Member 'UActivityBrowserModeSetListEntry_C::HasDetailsButtonParameter' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, IsFavoritedParameter) == 0x00102C, "Member 'UActivityBrowserModeSetListEntry_C::IsFavoritedParameter' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, IsKeyArtValid) == 0x001030, "Member 'UActivityBrowserModeSetListEntry_C::IsKeyArtValid' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, DefaultImage) == 0x001038, "Member 'UActivityBrowserModeSetListEntry_C::DefaultImage' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, IsTileActive) == 0x001040, "Member 'UActivityBrowserModeSetListEntry_C::IsTileActive' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, DisabledClickTimer) == 0x001048, "Member 'UActivityBrowserModeSetListEntry_C::DisabledClickTimer' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, DisabledClickDuration) == 0x001050, "Member 'UActivityBrowserModeSetListEntry_C::DisabledClickDuration' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, IsActivityValid) == 0x001054, "Member 'UActivityBrowserModeSetListEntry_C::IsActivityValid' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, TileSize) == 0x001058, "Member 'UActivityBrowserModeSetListEntry_C::TileSize' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, DefaultMaterial) == 0x001068, "Member 'UActivityBrowserModeSetListEntry_C::DefaultMaterial' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, RequiresPurchaseMaterial) == 0x001070, "Member 'UActivityBrowserModeSetListEntry_C::RequiresPurchaseMaterial' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, TextHoverParameter) == 0x001078, "Member 'UActivityBrowserModeSetListEntry_C::TextHoverParameter' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, FrameBorderBrightParameter) == 0x00107C, "Member 'UActivityBrowserModeSetListEntry_C::FrameBorderBrightParameter' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, FrameBorderMidParameter) == 0x001080, "Member 'UActivityBrowserModeSetListEntry_C::FrameBorderMidParameter' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, TopBannerParameter) == 0x001084, "Member 'UActivityBrowserModeSetListEntry_C::TopBannerParameter' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, DesaturateAndDarkenParam) == 0x001088, "Member 'UActivityBrowserModeSetListEntry_C::DesaturateAndDarkenParam' has a wrong offset!");
static_assert(offsetof(UActivityBrowserModeSetListEntry_C, IsDisabledFrameParam) == 0x00108C, "Member 'UActivityBrowserModeSetListEntry_C::IsDisabledFrameParam' has a wrong offset!");

}

