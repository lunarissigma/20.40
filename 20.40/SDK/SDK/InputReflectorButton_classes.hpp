#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InputReflectorButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUILegacy_classes.hpp"
#include "SlateCore_structs.hpp"
#include "CommonInput_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass InputReflectorButton.InputReflectorButton_C
// 0x0140 (0x1140 - 0x1000)
class UInputReflectorButton_C final : public UCommonPopupButtonLegacy
{
public:
	uint8                                         Pad_FF8[0x8];                                      // 0x0FF8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1000(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       CenterButtonTextWidget;                            // 0x1008(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                ContentBorder;                                     // 0x1010(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftSideImage;                                     // 0x1018(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             RightExtraContentSlot;                             // 0x1020(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   ButtonText;                                        // 0x1028(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	struct FSlateBrush                            IconBrush;                                         // 0x1040(0x00C0)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UClass*                                 ControllerInputStyle;                              // 0x1100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UClass*                                 MouseKeyboardStyle;                                // 0x1108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 MobileInputStyle;                                  // 0x1110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EHorizontalAlignment                          ContentAlignment;                                  // 0x1118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMouseKeyboardStyleSet;                            // 0x1119(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111A[0x6];                                     // 0x111A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OverrideButtonText;                                // 0x1120(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void UpdateTextStyle();
	void UpdateTextAndStyle(ECommonInputType CommonInputType);
	void UpdateText();
	void UpdateStyle(ECommonInputType UsingGamepad);
	void UpdateContentAlignment();
	void ShowIcon(bool bShouldShow);
	void SetTextInternal(const class FText& InButtonText);
	void SetMouseKeyboardStyle(class UClass* ControllerInputStyle_0);
	void SetMobileStyle(class UClass* MobileInputStyle_0);
	void SetInitialMouseKeyboardStyle();
	void SetControllerStyle(class UClass* ControllerInputStyle_0);
	void SetContentAlignment(EHorizontalAlignment ContentAlignment_0);
	void Set_Text(const class FText& ButtonText_0);
	void Set_Icon(const struct FSlateBrush& IconBrush_0);
	void PreConstruct(bool IsDesignTime);
	void OnTriggeredInputActionChanged(const struct FDataTableRowHandle& NewTriggeredAction);
	void OnCurrentTextStyleChanged();
	void OnActionProgress(float HeldPercent);
	void OnActionComplete();
	void InitializeButton();
	void ExecuteUbergraph_InputReflectorButton(int32 EntryPoint);
	void Destruct();
	void Construct();
	void BndEvt__CommonActionWidgetAction_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature(bool bUsingGamepad);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"InputReflectorButton_C">();
	}
	static class UInputReflectorButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputReflectorButton_C>();
	}
};
static_assert(alignof(UInputReflectorButton_C) == 0x000010, "Wrong alignment on UInputReflectorButton_C");
static_assert(sizeof(UInputReflectorButton_C) == 0x001140, "Wrong size on UInputReflectorButton_C");
static_assert(offsetof(UInputReflectorButton_C, UberGraphFrame) == 0x001000, "Member 'UInputReflectorButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UInputReflectorButton_C, CenterButtonTextWidget) == 0x001008, "Member 'UInputReflectorButton_C::CenterButtonTextWidget' has a wrong offset!");
static_assert(offsetof(UInputReflectorButton_C, ContentBorder) == 0x001010, "Member 'UInputReflectorButton_C::ContentBorder' has a wrong offset!");
static_assert(offsetof(UInputReflectorButton_C, LeftSideImage) == 0x001018, "Member 'UInputReflectorButton_C::LeftSideImage' has a wrong offset!");
static_assert(offsetof(UInputReflectorButton_C, RightExtraContentSlot) == 0x001020, "Member 'UInputReflectorButton_C::RightExtraContentSlot' has a wrong offset!");
static_assert(offsetof(UInputReflectorButton_C, ButtonText) == 0x001028, "Member 'UInputReflectorButton_C::ButtonText' has a wrong offset!");
static_assert(offsetof(UInputReflectorButton_C, IconBrush) == 0x001040, "Member 'UInputReflectorButton_C::IconBrush' has a wrong offset!");
static_assert(offsetof(UInputReflectorButton_C, ControllerInputStyle) == 0x001100, "Member 'UInputReflectorButton_C::ControllerInputStyle' has a wrong offset!");
static_assert(offsetof(UInputReflectorButton_C, MouseKeyboardStyle) == 0x001108, "Member 'UInputReflectorButton_C::MouseKeyboardStyle' has a wrong offset!");
static_assert(offsetof(UInputReflectorButton_C, MobileInputStyle) == 0x001110, "Member 'UInputReflectorButton_C::MobileInputStyle' has a wrong offset!");
static_assert(offsetof(UInputReflectorButton_C, ContentAlignment) == 0x001118, "Member 'UInputReflectorButton_C::ContentAlignment' has a wrong offset!");
static_assert(offsetof(UInputReflectorButton_C, bMouseKeyboardStyleSet) == 0x001119, "Member 'UInputReflectorButton_C::bMouseKeyboardStyleSet' has a wrong offset!");
static_assert(offsetof(UInputReflectorButton_C, OverrideButtonText) == 0x001120, "Member 'UInputReflectorButton_C::OverrideButtonText' has a wrong offset!");

}

