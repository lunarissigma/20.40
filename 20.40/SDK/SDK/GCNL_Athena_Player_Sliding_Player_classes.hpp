#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_Athena_Player_Sliding_Player

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCNL_Athena_Player_Sliding_Player.GCNL_Athena_Player_Sliding_Player_C
// 0x0040 (0x0A18 - 0x09D8)
class AGCNL_Athena_Player_Sliding_Player_C final : public AFortGameplayCueNotifyLoop_Sliding
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x09D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortCollisionAudioComponent*           FortCollisionAudio;                                // 0x09E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bUpdateAudioParams;                                // 0x09E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E9[0x3];                                      // 0x09E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VelocityLengthAudioParam;                          // 0x09EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ZVelocityAudioParam;                               // 0x09F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F4[0x4];                                      // 0x09F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             StopSlideSound;                                    // 0x09F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Stop_Slide_Audio;                                  // 0x0A00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           SlidingFailsafeTimerHandle;                        // 0x0A08(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             StartSlideSound;                                   // 0x0A10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GCNL_Athena_Player_Sliding_Player(int32 EntryPoint);
	void Initiate_Start_Audio();
	void On_Target_Pawn_Actor_Hit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnApplicationGeneric(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UFXSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class UMatineeCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void OnRemovalGeneric(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, const TArray<class UFXSystemComponent*>& ParticleComponents, const TArray<class UAudioComponent*>& AudioComponents, class UMatineeCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void ResetAudioData();
	void SlideStopAudio();
	void Sliding_Failsafe_Check();
	void StartSlideAudio();
	void Stop_Sliding_Audio();
	void ToggleLoopingSoundIndicator(bool bEnableSoundIndicator);
	void UpdateSlideAudio();
	void UpdateSoundComponentParameters(class AFortPlayerPawn* PlayerPawn_0, class UAudioComponent* AudioComponent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCNL_Athena_Player_Sliding_Player_C">();
	}
	static class AGCNL_Athena_Player_Sliding_Player_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCNL_Athena_Player_Sliding_Player_C>();
	}
};
static_assert(alignof(AGCNL_Athena_Player_Sliding_Player_C) == 0x000008, "Wrong alignment on AGCNL_Athena_Player_Sliding_Player_C");
static_assert(sizeof(AGCNL_Athena_Player_Sliding_Player_C) == 0x000A18, "Wrong size on AGCNL_Athena_Player_Sliding_Player_C");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, UberGraphFrame) == 0x0009D8, "Member 'AGCNL_Athena_Player_Sliding_Player_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, FortCollisionAudio) == 0x0009E0, "Member 'AGCNL_Athena_Player_Sliding_Player_C::FortCollisionAudio' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, bUpdateAudioParams) == 0x0009E8, "Member 'AGCNL_Athena_Player_Sliding_Player_C::bUpdateAudioParams' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, VelocityLengthAudioParam) == 0x0009EC, "Member 'AGCNL_Athena_Player_Sliding_Player_C::VelocityLengthAudioParam' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, ZVelocityAudioParam) == 0x0009F0, "Member 'AGCNL_Athena_Player_Sliding_Player_C::ZVelocityAudioParam' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, StopSlideSound) == 0x0009F8, "Member 'AGCNL_Athena_Player_Sliding_Player_C::StopSlideSound' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, Stop_Slide_Audio) == 0x000A00, "Member 'AGCNL_Athena_Player_Sliding_Player_C::Stop_Slide_Audio' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, SlidingFailsafeTimerHandle) == 0x000A08, "Member 'AGCNL_Athena_Player_Sliding_Player_C::SlidingFailsafeTimerHandle' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Player_Sliding_Player_C, StartSlideSound) == 0x000A10, "Member 'AGCNL_Athena_Player_Sliding_Player_C::StartSlideSound' has a wrong offset!");

}

