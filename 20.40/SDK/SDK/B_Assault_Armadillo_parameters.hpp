#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Assault_Armadillo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK::Params
{

// Function B_Assault_Armadillo.B_Assault_Armadillo_C.ExecuteUbergraph_B_Assault_Armadillo
// 0x0198 (0x0198 - 0x0000)
struct B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFirstLocalFortPlayerController_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetPlayerPawn_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         CallFunc_SetBeamNiagaraSystem_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetInstigatorController_ReturnValue;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AFortWeapon* Weapon)>    K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeapon*                            K2Node_CustomEvent_Weapon_1;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AFortWeapon* Weapon)>    K2Node_CreateDelegate_OutputDelegate_1;            // 0x0058(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeapon*                            K2Node_CustomEvent_Weapon;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float CurrentValue, float MaxValue, EFortWeaponOverheatState State, bool bIsInCooldown)> K2Node_CreateDelegate_OutputDelegate_2; // 0x0074(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPersistentFire;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSecondaryFire;                       // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x0090(0x00E0)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EPhysicalSurface                              K2Node_Event_ImpactPhysicalSurface;                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFXSystemComponent*                     K2Node_Event_SpawnedPSC;                           // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_183[0x5];                                      // 0x0183(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_Select_Default;                             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         CallFunc_SetBeamNiagaraSystem_ReturnValue_1;       // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo) == 0x000008, "Wrong alignment on B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo");
static_assert(sizeof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo) == 0x000198, "Wrong size on B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, EntryPoint) == 0x000000, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000005, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, CallFunc_GetFirstLocalFortPlayerController_ReturnValue) == 0x000008, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::CallFunc_GetFirstLocalFortPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, CallFunc_GetInstigator_ReturnValue) == 0x000010, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, CallFunc_GetPlayerPawn_ReturnValue) == 0x000020, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000029, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, CallFunc_IsValid_ReturnValue_1) == 0x00002A, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, CallFunc_SetBeamNiagaraSystem_ReturnValue) == 0x000030, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::CallFunc_SetBeamNiagaraSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, CallFunc_GetInstigatorController_ReturnValue) == 0x000038, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::CallFunc_GetInstigatorController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, CallFunc_IsValid_ReturnValue_2) == 0x00004C, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, CallFunc_IsLocalPlayerController_ReturnValue) == 0x00004D, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, K2Node_CustomEvent_Weapon_1) == 0x000050, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::K2Node_CustomEvent_Weapon_1' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, K2Node_CreateDelegate_OutputDelegate_1) == 0x000058, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, K2Node_CustomEvent_Weapon) == 0x000068, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::K2Node_CustomEvent_Weapon' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, K2Node_Event_EndPlayReason) == 0x000070, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, CallFunc_IsValid_ReturnValue_3) == 0x000071, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, K2Node_CreateDelegate_OutputDelegate_2) == 0x000074, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000080, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, K2Node_Event_bPersistentFire) == 0x000088, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::K2Node_Event_bPersistentFire' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, K2Node_Event_bSecondaryFire) == 0x000089, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::K2Node_Event_bSecondaryFire' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x00008A, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, K2Node_Event_HitResult) == 0x000090, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, K2Node_Event_ImpactPhysicalSurface) == 0x000170, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::K2Node_Event_ImpactPhysicalSurface' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, K2Node_Event_SpawnedPSC) == 0x000178, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::K2Node_Event_SpawnedPSC' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, CallFunc_IsValid_ReturnValue_4) == 0x000180, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x000181, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, Temp_bool_Variable) == 0x000182, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, K2Node_Select_Default) == 0x000188, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo, CallFunc_SetBeamNiagaraSystem_ReturnValue_1) == 0x000190, "Member 'B_Assault_Armadillo_C_ExecuteUbergraph_B_Assault_Armadillo::CallFunc_SetBeamNiagaraSystem_ReturnValue_1' has a wrong offset!");

// Function B_Assault_Armadillo.B_Assault_Armadillo_C.HandleWeaponFiltering
// 0x0001 (0x0001 - 0x0000)
struct B_Assault_Armadillo_C_HandleWeaponFiltering final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Assault_Armadillo_C_HandleWeaponFiltering) == 0x000001, "Wrong alignment on B_Assault_Armadillo_C_HandleWeaponFiltering");
static_assert(sizeof(B_Assault_Armadillo_C_HandleWeaponFiltering) == 0x000001, "Wrong size on B_Assault_Armadillo_C_HandleWeaponFiltering");
static_assert(offsetof(B_Assault_Armadillo_C_HandleWeaponFiltering, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'B_Assault_Armadillo_C_HandleWeaponFiltering::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_Assault_Armadillo.B_Assault_Armadillo_C.OnOverheatingValue
// 0x0048 (0x0048 - 0x0000)
struct B_Assault_Armadillo_C_OnOverheatingValue final
{
public:
	float                                         CurrentValue;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxValue;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortWeaponOverheatState                      State;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInCooldown;                                     // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetFloatParameter_self_CastInput; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  CallFunc_GetFirstLocalFortPlayerController_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        CallFunc_GetPlayerPawn_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Assault_Armadillo_C_OnOverheatingValue) == 0x000008, "Wrong alignment on B_Assault_Armadillo_C_OnOverheatingValue");
static_assert(sizeof(B_Assault_Armadillo_C_OnOverheatingValue) == 0x000048, "Wrong size on B_Assault_Armadillo_C_OnOverheatingValue");
static_assert(offsetof(B_Assault_Armadillo_C_OnOverheatingValue, CurrentValue) == 0x000000, "Member 'B_Assault_Armadillo_C_OnOverheatingValue::CurrentValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_OnOverheatingValue, MaxValue) == 0x000004, "Member 'B_Assault_Armadillo_C_OnOverheatingValue::MaxValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_OnOverheatingValue, State) == 0x000008, "Member 'B_Assault_Armadillo_C_OnOverheatingValue::State' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_OnOverheatingValue, bIsInCooldown) == 0x000009, "Member 'B_Assault_Armadillo_C_OnOverheatingValue::bIsInCooldown' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_OnOverheatingValue, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'B_Assault_Armadillo_C_OnOverheatingValue::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_OnOverheatingValue, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'B_Assault_Armadillo_C_OnOverheatingValue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_OnOverheatingValue, CallFunc_SetFloatParameter_self_CastInput) == 0x000018, "Member 'B_Assault_Armadillo_C_OnOverheatingValue::CallFunc_SetFloatParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_OnOverheatingValue, CallFunc_GetInstigator_ReturnValue) == 0x000028, "Member 'B_Assault_Armadillo_C_OnOverheatingValue::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_OnOverheatingValue, CallFunc_GetFirstLocalFortPlayerController_ReturnValue) == 0x000030, "Member 'B_Assault_Armadillo_C_OnOverheatingValue::CallFunc_GetFirstLocalFortPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_OnOverheatingValue, CallFunc_GetPlayerPawn_ReturnValue) == 0x000038, "Member 'B_Assault_Armadillo_C_OnOverheatingValue::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_OnOverheatingValue, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'B_Assault_Armadillo_C_OnOverheatingValue::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_OnOverheatingValue, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000041, "Member 'B_Assault_Armadillo_C_OnOverheatingValue::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function B_Assault_Armadillo.B_Assault_Armadillo_C.OnPlayImpactFX
// 0x00F0 (0x00F0 - 0x0000)
struct B_Assault_Armadillo_C_OnPlayImpactFX final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x00E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EPhysicalSurface                              ImpactPhysicalSurface;                             // 0x00E0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFXSystemComponent*                     SpawnedPSC;                                        // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Assault_Armadillo_C_OnPlayImpactFX) == 0x000008, "Wrong alignment on B_Assault_Armadillo_C_OnPlayImpactFX");
static_assert(sizeof(B_Assault_Armadillo_C_OnPlayImpactFX) == 0x0000F0, "Wrong size on B_Assault_Armadillo_C_OnPlayImpactFX");
static_assert(offsetof(B_Assault_Armadillo_C_OnPlayImpactFX, HitResult) == 0x000000, "Member 'B_Assault_Armadillo_C_OnPlayImpactFX::HitResult' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_OnPlayImpactFX, ImpactPhysicalSurface) == 0x0000E0, "Member 'B_Assault_Armadillo_C_OnPlayImpactFX::ImpactPhysicalSurface' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_OnPlayImpactFX, SpawnedPSC) == 0x0000E8, "Member 'B_Assault_Armadillo_C_OnPlayImpactFX::SpawnedPSC' has a wrong offset!");

// Function B_Assault_Armadillo.B_Assault_Armadillo_C.OnPlayWeaponFireFX
// 0x0002 (0x0002 - 0x0000)
struct B_Assault_Armadillo_C_OnPlayWeaponFireFX final
{
public:
	bool                                          bPersistentFire;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSecondaryFire;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Assault_Armadillo_C_OnPlayWeaponFireFX) == 0x000001, "Wrong alignment on B_Assault_Armadillo_C_OnPlayWeaponFireFX");
static_assert(sizeof(B_Assault_Armadillo_C_OnPlayWeaponFireFX) == 0x000002, "Wrong size on B_Assault_Armadillo_C_OnPlayWeaponFireFX");
static_assert(offsetof(B_Assault_Armadillo_C_OnPlayWeaponFireFX, bPersistentFire) == 0x000000, "Member 'B_Assault_Armadillo_C_OnPlayWeaponFireFX::bPersistentFire' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_OnPlayWeaponFireFX, bSecondaryFire) == 0x000001, "Member 'B_Assault_Armadillo_C_OnPlayWeaponFireFX::bSecondaryFire' has a wrong offset!");

// Function B_Assault_Armadillo.B_Assault_Armadillo_C.OnRep_bStartLoop
// 0x0001 (0x0001 - 0x0000)
struct B_Assault_Armadillo_C_OnRep_bStartLoop final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Assault_Armadillo_C_OnRep_bStartLoop) == 0x000001, "Wrong alignment on B_Assault_Armadillo_C_OnRep_bStartLoop");
static_assert(sizeof(B_Assault_Armadillo_C_OnRep_bStartLoop) == 0x000001, "Wrong size on B_Assault_Armadillo_C_OnRep_bStartLoop");
static_assert(offsetof(B_Assault_Armadillo_C_OnRep_bStartLoop, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'B_Assault_Armadillo_C_OnRep_bStartLoop::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function B_Assault_Armadillo.B_Assault_Armadillo_C.PlayFireAudio
// 0x0058 (0x0058 - 0x0000)
struct B_Assault_Armadillo_C_PlayFireAudio final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetFloatParameter_self_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverheated_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFirstLocalFortPlayerController_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        CallFunc_GetPlayerPawn_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x000C)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Assault_Armadillo_C_PlayFireAudio) == 0x000008, "Wrong alignment on B_Assault_Armadillo_C_PlayFireAudio");
static_assert(sizeof(B_Assault_Armadillo_C_PlayFireAudio) == 0x000058, "Wrong size on B_Assault_Armadillo_C_PlayFireAudio");
static_assert(offsetof(B_Assault_Armadillo_C_PlayFireAudio, Temp_bool_Variable) == 0x000000, "Member 'B_Assault_Armadillo_C_PlayFireAudio::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_PlayFireAudio, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'B_Assault_Armadillo_C_PlayFireAudio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_PlayFireAudio, CallFunc_SetFloatParameter_self_CastInput) == 0x000008, "Member 'B_Assault_Armadillo_C_PlayFireAudio::CallFunc_SetFloatParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_PlayFireAudio, CallFunc_GetInstigator_ReturnValue) == 0x000018, "Member 'B_Assault_Armadillo_C_PlayFireAudio::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_PlayFireAudio, CallFunc_IsOverheated_ReturnValue) == 0x000020, "Member 'B_Assault_Armadillo_C_PlayFireAudio::CallFunc_IsOverheated_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_PlayFireAudio, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'B_Assault_Armadillo_C_PlayFireAudio::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_PlayFireAudio, CallFunc_GetFirstLocalFortPlayerController_ReturnValue) == 0x000028, "Member 'B_Assault_Armadillo_C_PlayFireAudio::CallFunc_GetFirstLocalFortPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_PlayFireAudio, CallFunc_GetPlayerPawn_ReturnValue) == 0x000030, "Member 'B_Assault_Armadillo_C_PlayFireAudio::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_PlayFireAudio, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000038, "Member 'B_Assault_Armadillo_C_PlayFireAudio::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_PlayFireAudio, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'B_Assault_Armadillo_C_PlayFireAudio::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_PlayFireAudio, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'B_Assault_Armadillo_C_PlayFireAudio::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_PlayFireAudio, K2Node_Select_Default) == 0x000050, "Member 'B_Assault_Armadillo_C_PlayFireAudio::K2Node_Select_Default' has a wrong offset!");

// Function B_Assault_Armadillo.B_Assault_Armadillo_C.PressTrigger
// 0x0008 (0x0008 - 0x0000)
struct B_Assault_Armadillo_C_PressTrigger final
{
public:
	class AFortWeapon*                            Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Assault_Armadillo_C_PressTrigger) == 0x000008, "Wrong alignment on B_Assault_Armadillo_C_PressTrigger");
static_assert(sizeof(B_Assault_Armadillo_C_PressTrigger) == 0x000008, "Wrong size on B_Assault_Armadillo_C_PressTrigger");
static_assert(offsetof(B_Assault_Armadillo_C_PressTrigger, Weapon) == 0x000000, "Member 'B_Assault_Armadillo_C_PressTrigger::Weapon' has a wrong offset!");

// Function B_Assault_Armadillo.B_Assault_Armadillo_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct B_Assault_Armadillo_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Assault_Armadillo_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on B_Assault_Armadillo_C_ReceiveEndPlay");
static_assert(sizeof(B_Assault_Armadillo_C_ReceiveEndPlay) == 0x000001, "Wrong size on B_Assault_Armadillo_C_ReceiveEndPlay");
static_assert(offsetof(B_Assault_Armadillo_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'B_Assault_Armadillo_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function B_Assault_Armadillo.B_Assault_Armadillo_C.ReleaseTrigger
// 0x0008 (0x0008 - 0x0000)
struct B_Assault_Armadillo_C_ReleaseTrigger final
{
public:
	class AFortWeapon*                            Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Assault_Armadillo_C_ReleaseTrigger) == 0x000008, "Wrong alignment on B_Assault_Armadillo_C_ReleaseTrigger");
static_assert(sizeof(B_Assault_Armadillo_C_ReleaseTrigger) == 0x000008, "Wrong size on B_Assault_Armadillo_C_ReleaseTrigger");
static_assert(offsetof(B_Assault_Armadillo_C_ReleaseTrigger, Weapon) == 0x000000, "Member 'B_Assault_Armadillo_C_ReleaseTrigger::Weapon' has a wrong offset!");

// Function B_Assault_Armadillo.B_Assault_Armadillo_C.ReturnAudioParamToNormal
// 0x0018 (0x0018 - 0x0000)
struct B_Assault_Armadillo_C_ReturnAudioParamToNormal final
{
public:
	TScriptInterface<class IAudioParameterControllerInterface> CallFunc_SetFloatParameter_self_CastInput; // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Assault_Armadillo_C_ReturnAudioParamToNormal) == 0x000008, "Wrong alignment on B_Assault_Armadillo_C_ReturnAudioParamToNormal");
static_assert(sizeof(B_Assault_Armadillo_C_ReturnAudioParamToNormal) == 0x000018, "Wrong size on B_Assault_Armadillo_C_ReturnAudioParamToNormal");
static_assert(offsetof(B_Assault_Armadillo_C_ReturnAudioParamToNormal, CallFunc_SetFloatParameter_self_CastInput) == 0x000000, "Member 'B_Assault_Armadillo_C_ReturnAudioParamToNormal::CallFunc_SetFloatParameter_self_CastInput' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_ReturnAudioParamToNormal, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'B_Assault_Armadillo_C_ReturnAudioParamToNormal::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_Assault_Armadillo.B_Assault_Armadillo_C.StopFireAudio
// 0x0030 (0x0030 - 0x0000)
struct B_Assault_Armadillo_C_StopFireAudio final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFirstLocalFortPlayerController_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        CallFunc_GetPlayerPawn_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Assault_Armadillo_C_StopFireAudio) == 0x000008, "Wrong alignment on B_Assault_Armadillo_C_StopFireAudio");
static_assert(sizeof(B_Assault_Armadillo_C_StopFireAudio) == 0x000030, "Wrong size on B_Assault_Armadillo_C_StopFireAudio");
static_assert(offsetof(B_Assault_Armadillo_C_StopFireAudio, Temp_bool_Variable) == 0x000000, "Member 'B_Assault_Armadillo_C_StopFireAudio::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_StopFireAudio, CallFunc_GetFirstLocalFortPlayerController_ReturnValue) == 0x000008, "Member 'B_Assault_Armadillo_C_StopFireAudio::CallFunc_GetFirstLocalFortPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_StopFireAudio, CallFunc_GetInstigator_ReturnValue) == 0x000010, "Member 'B_Assault_Armadillo_C_StopFireAudio::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_StopFireAudio, CallFunc_GetPlayerPawn_ReturnValue) == 0x000018, "Member 'B_Assault_Armadillo_C_StopFireAudio::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_StopFireAudio, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'B_Assault_Armadillo_C_StopFireAudio::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Assault_Armadillo_C_StopFireAudio, K2Node_Select_Default) == 0x000028, "Member 'B_Assault_Armadillo_C_StopFireAudio::K2Node_Select_Default' has a wrong offset!");

}

