#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Scoreboard_UI_ColumnLabels

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Scoreboard_UI_ColumnLabels.Scoreboard_UI_ColumnLabels_C
// 0x00C0 (0x0338 - 0x0278)
class UScoreboard_UI_ColumnLabels_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       DataBox1;                                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       DataBox2;                                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       DataBox3;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       DataBox4;                                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       DataBox5;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               DataHolder1;                                       // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               DataHolder2;                                       // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               DataHolder3;                                       // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               DataHolder4;                                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               DataHolder5;                                       // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         DataHorizontalBox;                                 // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               PlacementSizeBox;                                  // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               TeamgameSpacer;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               TotalColumn;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               WinsColumn;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             WinsText;                                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UTextBlock*>                     DataBoxes;                                         // 0x0300(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class USizeBox*>                       DataHolders;                                       // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class FText>                           DataText;                                          // 0x0320(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          bIsTeamGame;                                       // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bDisplayingWins;                                   // 0x0331(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bIngameScoreboard;                                 // 0x0332(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EMinigameWinCondition                         WinCondition;                                      // 0x0333(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bShowCumulativeScoreboard;                         // 0x0334(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_Scoreboard_UI_ColumnLabels(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void ProvideData(TArray<class FText>& InData);
	void UpdateColumnDisplay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Scoreboard_UI_ColumnLabels_C">();
	}
	static class UScoreboard_UI_ColumnLabels_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScoreboard_UI_ColumnLabels_C>();
	}
};
static_assert(alignof(UScoreboard_UI_ColumnLabels_C) == 0x000008, "Wrong alignment on UScoreboard_UI_ColumnLabels_C");
static_assert(sizeof(UScoreboard_UI_ColumnLabels_C) == 0x000338, "Wrong size on UScoreboard_UI_ColumnLabels_C");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, UberGraphFrame) == 0x000278, "Member 'UScoreboard_UI_ColumnLabels_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, DataBox1) == 0x000280, "Member 'UScoreboard_UI_ColumnLabels_C::DataBox1' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, DataBox2) == 0x000288, "Member 'UScoreboard_UI_ColumnLabels_C::DataBox2' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, DataBox3) == 0x000290, "Member 'UScoreboard_UI_ColumnLabels_C::DataBox3' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, DataBox4) == 0x000298, "Member 'UScoreboard_UI_ColumnLabels_C::DataBox4' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, DataBox5) == 0x0002A0, "Member 'UScoreboard_UI_ColumnLabels_C::DataBox5' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, DataHolder1) == 0x0002A8, "Member 'UScoreboard_UI_ColumnLabels_C::DataHolder1' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, DataHolder2) == 0x0002B0, "Member 'UScoreboard_UI_ColumnLabels_C::DataHolder2' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, DataHolder3) == 0x0002B8, "Member 'UScoreboard_UI_ColumnLabels_C::DataHolder3' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, DataHolder4) == 0x0002C0, "Member 'UScoreboard_UI_ColumnLabels_C::DataHolder4' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, DataHolder5) == 0x0002C8, "Member 'UScoreboard_UI_ColumnLabels_C::DataHolder5' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, DataHorizontalBox) == 0x0002D0, "Member 'UScoreboard_UI_ColumnLabels_C::DataHorizontalBox' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, PlacementSizeBox) == 0x0002D8, "Member 'UScoreboard_UI_ColumnLabels_C::PlacementSizeBox' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, TeamgameSpacer) == 0x0002E0, "Member 'UScoreboard_UI_ColumnLabels_C::TeamgameSpacer' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, TotalColumn) == 0x0002E8, "Member 'UScoreboard_UI_ColumnLabels_C::TotalColumn' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, WinsColumn) == 0x0002F0, "Member 'UScoreboard_UI_ColumnLabels_C::WinsColumn' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, WinsText) == 0x0002F8, "Member 'UScoreboard_UI_ColumnLabels_C::WinsText' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, DataBoxes) == 0x000300, "Member 'UScoreboard_UI_ColumnLabels_C::DataBoxes' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, DataHolders) == 0x000310, "Member 'UScoreboard_UI_ColumnLabels_C::DataHolders' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, DataText) == 0x000320, "Member 'UScoreboard_UI_ColumnLabels_C::DataText' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, bIsTeamGame) == 0x000330, "Member 'UScoreboard_UI_ColumnLabels_C::bIsTeamGame' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, bDisplayingWins) == 0x000331, "Member 'UScoreboard_UI_ColumnLabels_C::bDisplayingWins' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, bIngameScoreboard) == 0x000332, "Member 'UScoreboard_UI_ColumnLabels_C::bIngameScoreboard' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, WinCondition) == 0x000333, "Member 'UScoreboard_UI_ColumnLabels_C::WinCondition' has a wrong offset!");
static_assert(offsetof(UScoreboard_UI_ColumnLabels_C, bShowCumulativeScoreboard) == 0x000334, "Member 'UScoreboard_UI_ColumnLabels_C::bShowCumulativeScoreboard' has a wrong offset!");

}

