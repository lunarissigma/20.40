#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_Player_Slide

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_Player_Slide.GA_Athena_Player_Slide_C
// 0x0B30 (0x15E8 - 0x0AB8)
class UGA_Athena_Player_Slide_C final : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TSubclassOf<class UCameraShakeBase>           CameraShake;                                       // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UFortCameraMode>            Camera_Mode_Class;                                 // 0x0AC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FGameplayTag                           CameraShakeGCNL;                                   // 0x0AD0(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD4[0x4];                                      // 0x0AD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCameraModifier>            CameraModifier;                                    // 0x0AD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         MinAngleForMomentum;                               // 0x0AE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SpeedlinesCue;                                     // 0x0AE4(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UCameraShakeBase>           StartSlideCameraShake;                             // 0x0AE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         AdditionalLaunchVelocityOffRamp;                   // 0x0AF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AF4[0x4];                                      // 0x0AF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlidingControlParams                  DefaultSlidingParams;                              // 0x0AF8(0x0518)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlidingControlParams                  PostDashGroundSlidingParams;                       // 0x1010(0x0518)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         LevelGroundSlideDuration;                          // 0x1528(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152C[0x4];                                     // 0x152C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           EndLevelGroundSlideTimerHandle;                    // 0x1530(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         DashDuration;                                      // 0x1538(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           CameraFXDelay;                                     // 0x1560(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PlayerGameplayCue;                                 // 0x1568(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         CameraShakeDelay;                                  // 0x156C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         MinAdditionalMomentum;                             // 0x1570(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MaxAdditionalMomentum;                             // 0x1598(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MinAngleForAdditionalMomentum;                     // 0x15C0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AddMomentum();
	void CameraFX();
	void EndLevelGroundSlide();
	void ExecuteUbergraph_GA_Athena_Player_Slide(int32 EntryPoint);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void K2_OnEndAbility(bool bWasCancelled);
	void OnFinishedCharacterCustomization_Event_0(class AFortPlayerPawn* Pawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_Player_Slide_C">();
	}
	static class UGA_Athena_Player_Slide_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_Player_Slide_C>();
	}
};
static_assert(alignof(UGA_Athena_Player_Slide_C) == 0x000008, "Wrong alignment on UGA_Athena_Player_Slide_C");
static_assert(sizeof(UGA_Athena_Player_Slide_C) == 0x0015E8, "Wrong size on UGA_Athena_Player_Slide_C");
static_assert(offsetof(UGA_Athena_Player_Slide_C, UberGraphFrame) == 0x000AB8, "Member 'UGA_Athena_Player_Slide_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, CameraShake) == 0x000AC0, "Member 'UGA_Athena_Player_Slide_C::CameraShake' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, Camera_Mode_Class) == 0x000AC8, "Member 'UGA_Athena_Player_Slide_C::Camera_Mode_Class' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, CameraShakeGCNL) == 0x000AD0, "Member 'UGA_Athena_Player_Slide_C::CameraShakeGCNL' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, CameraModifier) == 0x000AD8, "Member 'UGA_Athena_Player_Slide_C::CameraModifier' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, MinAngleForMomentum) == 0x000AE0, "Member 'UGA_Athena_Player_Slide_C::MinAngleForMomentum' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, SpeedlinesCue) == 0x000AE4, "Member 'UGA_Athena_Player_Slide_C::SpeedlinesCue' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, StartSlideCameraShake) == 0x000AE8, "Member 'UGA_Athena_Player_Slide_C::StartSlideCameraShake' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, AdditionalLaunchVelocityOffRamp) == 0x000AF0, "Member 'UGA_Athena_Player_Slide_C::AdditionalLaunchVelocityOffRamp' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, DefaultSlidingParams) == 0x000AF8, "Member 'UGA_Athena_Player_Slide_C::DefaultSlidingParams' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, PostDashGroundSlidingParams) == 0x001010, "Member 'UGA_Athena_Player_Slide_C::PostDashGroundSlidingParams' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, LevelGroundSlideDuration) == 0x001528, "Member 'UGA_Athena_Player_Slide_C::LevelGroundSlideDuration' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, EndLevelGroundSlideTimerHandle) == 0x001530, "Member 'UGA_Athena_Player_Slide_C::EndLevelGroundSlideTimerHandle' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, DashDuration) == 0x001538, "Member 'UGA_Athena_Player_Slide_C::DashDuration' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, CameraFXDelay) == 0x001560, "Member 'UGA_Athena_Player_Slide_C::CameraFXDelay' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, PlayerGameplayCue) == 0x001568, "Member 'UGA_Athena_Player_Slide_C::PlayerGameplayCue' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, CameraShakeDelay) == 0x00156C, "Member 'UGA_Athena_Player_Slide_C::CameraShakeDelay' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, MinAdditionalMomentum) == 0x001570, "Member 'UGA_Athena_Player_Slide_C::MinAdditionalMomentum' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, MaxAdditionalMomentum) == 0x001598, "Member 'UGA_Athena_Player_Slide_C::MaxAdditionalMomentum' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Player_Slide_C, MinAngleForAdditionalMomentum) == 0x0015C0, "Member 'UGA_Athena_Player_Slide_C::MinAngleForAdditionalMomentum' has a wrong offset!");

}

