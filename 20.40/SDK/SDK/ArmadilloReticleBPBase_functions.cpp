#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ArmadilloReticleBPBase

#include "Basic.hpp"

#include "ArmadilloReticleBPBase_classes.hpp"
#include "ArmadilloReticleBPBase_parameters.hpp"


namespace SDK
{

// Function ArmadilloReticleBPBase.ArmadilloReticleBPBase_C.BP_OnDesiredVisibilityChanged
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class USpecialEventCursorPawnComponent* InCursorPawnComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FGameplayTag&              CursorModeTag                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// const bool                              bShouldBeVisible                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmadilloReticleBPBase_C::BP_OnDesiredVisibilityChanged(class USpecialEventCursorPawnComponent* InCursorPawnComponent, const struct FGameplayTag& CursorModeTag, const bool bShouldBeVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmadilloReticleBPBase_C", "BP_OnDesiredVisibilityChanged");

	Params::ArmadilloReticleBPBase_C_BP_OnDesiredVisibilityChanged Parms{};

	Parms.InCursorPawnComponent = InCursorPawnComponent;
	Parms.CursorModeTag = std::move(CursorModeTag);
	Parms.bShouldBeVisible = bShouldBeVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmadilloReticleBPBase.ArmadilloReticleBPBase_C.CheckIfAssault
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// const class AFortWeaponRanged*          Object                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   isAR                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmadilloReticleBPBase_C::CheckIfAssault(const class AFortWeaponRanged* Object, bool* isAR)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmadilloReticleBPBase_C", "CheckIfAssault");

	Params::ArmadilloReticleBPBase_C_CheckIfAssault Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);

	if (isAR != nullptr)
		*isAR = Parms.isAR;
}


// Function ArmadilloReticleBPBase.ArmadilloReticleBPBase_C.ExecuteUbergraph_ArmadilloReticleBPBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmadilloReticleBPBase_C::ExecuteUbergraph_ArmadilloReticleBPBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmadilloReticleBPBase_C", "ExecuteUbergraph_ArmadilloReticleBPBase");

	Params::ArmadilloReticleBPBase_C_ExecuteUbergraph_ArmadilloReticleBPBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmadilloReticleBPBase.ArmadilloReticleBPBase_C.InitializeForRangedWeapon
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortWeaponRanged*                InRangedWeapon                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmadilloReticleBPBase_C::InitializeForRangedWeapon(class AFortWeaponRanged* InRangedWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmadilloReticleBPBase_C", "InitializeForRangedWeapon");

	Params::ArmadilloReticleBPBase_C_InitializeForRangedWeapon Parms{};

	Parms.InRangedWeapon = InRangedWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmadilloReticleBPBase.ArmadilloReticleBPBase_C.OnLocalReloadCancelled
// (BlueprintCallable, BlueprintEvent)

void UArmadilloReticleBPBase_C::OnLocalReloadCancelled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmadilloReticleBPBase_C", "OnLocalReloadCancelled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ArmadilloReticleBPBase.ArmadilloReticleBPBase_C.OnLocalReloadStarted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReloadTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EFortWeaponReloadType                   ReloadType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmadilloReticleBPBase_C::OnLocalReloadStarted(float ReloadTime, EFortWeaponReloadType ReloadType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmadilloReticleBPBase_C", "OnLocalReloadStarted");

	Params::ArmadilloReticleBPBase_C_OnLocalReloadStarted Parms{};

	Parms.ReloadTime = ReloadTime;
	Parms.ReloadType = ReloadType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmadilloReticleBPBase.ArmadilloReticleBPBase_C.OnWeaponFireVisuals
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortWeapon*                      Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UArmadilloReticleBPBase_C::OnWeaponFireVisuals(class AFortWeapon* Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmadilloReticleBPBase_C", "OnWeaponFireVisuals");

	Params::ArmadilloReticleBPBase_C_OnWeaponFireVisuals Parms{};

	Parms.Weapon = Weapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ArmadilloReticleBPBase.ArmadilloReticleBPBase_C.UpdateLocalPlayerStyling
// (BlueprintCallable, BlueprintEvent)

void UArmadilloReticleBPBase_C::UpdateLocalPlayerStyling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArmadilloReticleBPBase_C", "UpdateLocalPlayerStyling");

	UObject::ProcessEvent(Func, nullptr);
}

}

