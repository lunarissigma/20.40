#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NPC_Pawn_Wildlife_Parent

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Enum_NPC_AlertLevel_structs.hpp"
#include "NPC_Pawn_Parent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass NPC_Pawn_Wildlife_Parent.NPC_Pawn_Wildlife_Parent_C
// 0x00F0 (0x38E0 - 0x37F0)
class ANPC_Pawn_Wildlife_Parent_C final : public ANPC_Pawn_Parent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_NPC_Pawn_Wildlife_Parent_C;         // 0x37F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      Wildlife_FootDust;                                 // 0x37F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortPawnComponent_Convert*             ConvertComponent;                                  // 0x3800(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Layer_Idle;                                        // 0x3808(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Layer_Locomotion;                                  // 0x3830(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   Layer_Jump;                                        // 0x3858(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	uint8                                         LeaderTeam;                                        // 0x3880(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3881[0x7];                                     // 0x3881(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundEffectSourcePresetChain*          VocalSourceEffectChainOverride;                    // 0x3888(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTamingEnabled;                                    // 0x3890(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3891[0x7];                                     // 0x3891(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void(class ANPC_Pawn_Wildlife_Parent_C* WildlifePawn, class AActor* ActorGrabbed)> OnPickupGrabbed_Destroyed; // 0x3898(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bCanBeInteractedWithWhileTamed;                    // 0x38A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A9[0x3];                                     // 0x38A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            GE_Quest_Converted_Handle;                         // 0x38AC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38B4[0x4];                                     // 0x38B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            GE_Quest_Converted_Irwin;                          // 0x38B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TMulticastInlineDelegate<void(bool Converted, class AFortPawn* InstigatorPawn)> ConvertedDispatcher; // 0x38C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bIsBeingRidden;                                    // 0x38D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NPC_StatusWidgetShouldDisplayDamage;               // 0x38D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AsyncLinkAnimationLayer(TSoftClassPtr<class UClass> AnimationLayer);
	void AttachAndApplyVocalFX(const struct FSoundLibraryPlaySoundResult& SoundLibraryResult);
	void BndEvt__ConvertComponent_K2Node_ComponentBoundEvent_0_ConvertedEvent__DelegateSignature(class AFortPawn* InstigatorPawn);
	void BndEvt__ConvertComponent_K2Node_ComponentBoundEvent_1_UnconvertedEvent__DelegateSignature();
	void BndEvt__SoundLibrary_Component_K2Node_ComponentBoundEvent_2_OnSoundLibraryPlayEvent__DelegateSignature(const struct FSoundLibraryPlaySoundResult& Results, const class USoundLibraryContext* Context);
	void CanBeInteractedWithWhenTamed(bool* bCanInteract_0);
	void ExecuteUbergraph_NPC_Pawn_Wildlife_Parent(int32 EntryPoint);
	void LinkAnimationLayers();
	void NPC_AlertLevelChangedServer(Enum_NPC_AlertLevel NPCAlertLevel);
	void NPC_CanBeInteractedWith(bool* CanInteract);
	void NPC_LeaderSet(bool Success_, class AActor* Leader);
	void NPC_PickupGrabbed_Destroyed(class AActor* ActorGrabbed);
	void NPC_SetupHealthBarOnDeath();
	void NPCStatusWidget_UpdateKeepVisible(bool ShouldKeepVisible);
	void On_NPC_PawnInteractedWith(class AActor* AIPawn, class AFortPlayerPawn* InteractingPlayerPawn);
	void OnApplyEffectOptimization(const int32 NewBudgetValue);
	void OnBeingControlledChanged(bool bControlled);
	void OnCustomizationsLoaded_BP();
	void OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnLoaded_9DC5FDA543FAF13BB29E95AA78B28A06(TSubclassOf<class UObject> Loaded);
	void OnPawnHealthChanged_Event_0();
	void OnRep_LeaderTeam();
	void Play_Sound_Lib(const struct FGameplayTag& Event_Name);
	void Play_Water_Splash_at_Water_Surface(class AFortWaterBodyActor* Water_Body, bool Enter_Water_0);
	void ReceiveBeginPlay();
	void SetTamingEnabled(bool EnableTaming);
	void UpdateTamingIndicator();

	bool IsValidAutoFireTarget(const class AActor* Attacker) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"NPC_Pawn_Wildlife_Parent_C">();
	}
	static class ANPC_Pawn_Wildlife_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANPC_Pawn_Wildlife_Parent_C>();
	}
};
static_assert(alignof(ANPC_Pawn_Wildlife_Parent_C) == 0x000010, "Wrong alignment on ANPC_Pawn_Wildlife_Parent_C");
static_assert(sizeof(ANPC_Pawn_Wildlife_Parent_C) == 0x0038E0, "Wrong size on ANPC_Pawn_Wildlife_Parent_C");
static_assert(offsetof(ANPC_Pawn_Wildlife_Parent_C, UberGraphFrame_NPC_Pawn_Wildlife_Parent_C) == 0x0037F0, "Member 'ANPC_Pawn_Wildlife_Parent_C::UberGraphFrame_NPC_Pawn_Wildlife_Parent_C' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Wildlife_Parent_C, Wildlife_FootDust) == 0x0037F8, "Member 'ANPC_Pawn_Wildlife_Parent_C::Wildlife_FootDust' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Wildlife_Parent_C, ConvertComponent) == 0x003800, "Member 'ANPC_Pawn_Wildlife_Parent_C::ConvertComponent' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Wildlife_Parent_C, Layer_Idle) == 0x003808, "Member 'ANPC_Pawn_Wildlife_Parent_C::Layer_Idle' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Wildlife_Parent_C, Layer_Locomotion) == 0x003830, "Member 'ANPC_Pawn_Wildlife_Parent_C::Layer_Locomotion' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Wildlife_Parent_C, Layer_Jump) == 0x003858, "Member 'ANPC_Pawn_Wildlife_Parent_C::Layer_Jump' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Wildlife_Parent_C, LeaderTeam) == 0x003880, "Member 'ANPC_Pawn_Wildlife_Parent_C::LeaderTeam' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Wildlife_Parent_C, VocalSourceEffectChainOverride) == 0x003888, "Member 'ANPC_Pawn_Wildlife_Parent_C::VocalSourceEffectChainOverride' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Wildlife_Parent_C, bTamingEnabled) == 0x003890, "Member 'ANPC_Pawn_Wildlife_Parent_C::bTamingEnabled' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Wildlife_Parent_C, OnPickupGrabbed_Destroyed) == 0x003898, "Member 'ANPC_Pawn_Wildlife_Parent_C::OnPickupGrabbed_Destroyed' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Wildlife_Parent_C, bCanBeInteractedWithWhileTamed) == 0x0038A8, "Member 'ANPC_Pawn_Wildlife_Parent_C::bCanBeInteractedWithWhileTamed' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Wildlife_Parent_C, GE_Quest_Converted_Handle) == 0x0038AC, "Member 'ANPC_Pawn_Wildlife_Parent_C::GE_Quest_Converted_Handle' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Wildlife_Parent_C, GE_Quest_Converted_Irwin) == 0x0038B8, "Member 'ANPC_Pawn_Wildlife_Parent_C::GE_Quest_Converted_Irwin' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Wildlife_Parent_C, ConvertedDispatcher) == 0x0038C0, "Member 'ANPC_Pawn_Wildlife_Parent_C::ConvertedDispatcher' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Wildlife_Parent_C, bIsBeingRidden) == 0x0038D0, "Member 'ANPC_Pawn_Wildlife_Parent_C::bIsBeingRidden' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Wildlife_Parent_C, NPC_StatusWidgetShouldDisplayDamage) == 0x0038D1, "Member 'ANPC_Pawn_Wildlife_Parent_C::NPC_StatusWidgetShouldDisplayDamage' has a wrong offset!");

}

