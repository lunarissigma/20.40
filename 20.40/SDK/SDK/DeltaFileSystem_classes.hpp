#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DeltaFileSystem

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"
#include "DeltaFileSystem_structs.hpp"


namespace SDK
{

// Class DeltaFileSystem.DeltaFile
// 0x0000 (0x0000 - 0x0000)
class IDeltaFile final
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeltaFile">();
	}
	static class IDeltaFile* GetDefaultObj()
	{
		return GetDefaultObjImpl<IDeltaFile>();
	}

	class UObject* AsUObject()
	{
		return reinterpret_cast<UObject*>(this);
	}
	const class UObject* AsUObject() const
	{
		return reinterpret_cast<const UObject*>(this);
	}
};
static_assert(alignof(IDeltaFile) == 0x000001, "Wrong alignment on IDeltaFile");
static_assert(sizeof(IDeltaFile) == 0x000001, "Wrong size on IDeltaFile");

// Class DeltaFileSystem.DeltaComponent
// 0x0010 (0x00B0 - 0x00A0)
class UDeltaComponent final : public UActorComponent
{
public:
	uint8                                         Pad_A0[0x10];                                      // 0x00A0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeltaComponent">();
	}
	static class UDeltaComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeltaComponent>();
	}
};
static_assert(alignof(UDeltaComponent) == 0x000008, "Wrong alignment on UDeltaComponent");
static_assert(sizeof(UDeltaComponent) == 0x0000B0, "Wrong size on UDeltaComponent");

// Class DeltaFileSystem.DeltaFileSubsystem
// 0x0000 (0x0030 - 0x0030)
class UDeltaFileSubsystem final : public UEngineSubsystem
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeltaFileSubsystem">();
	}
	static class UDeltaFileSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeltaFileSubsystem>();
	}
};
static_assert(alignof(UDeltaFileSubsystem) == 0x000008, "Wrong alignment on UDeltaFileSubsystem");
static_assert(sizeof(UDeltaFileSubsystem) == 0x000030, "Wrong size on UDeltaFileSubsystem");

// Class DeltaFileSystem.MapDelta
// 0x0048 (0x0070 - 0x0028)
class UMapDelta final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ParentMap;                                         // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAddAction>                     AddActions;                                        // 0x0040(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FUpdateAction>                  UpdateActions;                                     // 0x0050(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDeltaAction>                   DeleteActions;                                     // 0x0060(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MapDelta">();
	}
	static class UMapDelta* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMapDelta>();
	}
};
static_assert(alignof(UMapDelta) == 0x000008, "Wrong alignment on UMapDelta");
static_assert(sizeof(UMapDelta) == 0x000070, "Wrong size on UMapDelta");
static_assert(offsetof(UMapDelta, ParentMap) == 0x000030, "Member 'UMapDelta::ParentMap' has a wrong offset!");
static_assert(offsetof(UMapDelta, AddActions) == 0x000040, "Member 'UMapDelta::AddActions' has a wrong offset!");
static_assert(offsetof(UMapDelta, UpdateActions) == 0x000050, "Member 'UMapDelta::UpdateActions' has a wrong offset!");
static_assert(offsetof(UMapDelta, DeleteActions) == 0x000060, "Member 'UMapDelta::DeleteActions' has a wrong offset!");

// Class DeltaFileSystem.MapDeltaApplyer
// 0x0000 (0x0028 - 0x0028)
class UMapDeltaApplyer final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MapDeltaApplyer">();
	}
	static class UMapDeltaApplyer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMapDeltaApplyer>();
	}
};
static_assert(alignof(UMapDeltaApplyer) == 0x000008, "Wrong alignment on UMapDeltaApplyer");
static_assert(sizeof(UMapDeltaApplyer) == 0x000028, "Wrong size on UMapDeltaApplyer");

}

