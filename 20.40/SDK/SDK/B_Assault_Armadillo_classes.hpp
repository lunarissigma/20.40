#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Assault_Armadillo

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "B_Assault_Auto_classes.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Assault_Armadillo.B_Assault_Armadillo_C
// 0x0098 (0x1748 - 0x16B0)
class AB_Assault_Armadillo_C final : public AB_Assault_Auto_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_Assault_Armadillo_C;              // 0x16B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        FireStopAudio;                                     // 0x16B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        FireLoopAudio;                                     // 0x16C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArmadillo_ShooterWeaponTraceIgnoreActorsComponent_C* Armadillo_ShooterWeaponTraceIgnoreActorsComponent; // 0x16C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpecialEventCursorWeaponComponent*     SpecialEventCursorWeapon;                          // 0x16D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           DebugOverheatTimer;                                // 0x16D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         NonLocalGunFX;                                     // 0x16E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         LocalGunFX;                                        // 0x16E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             OverheatedSound;                                   // 0x16F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundMix*                              Overheating_Sound_Mix_Modifier;                    // 0x16F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStartLoop;                                        // 0x1700(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1701[0x7];                                     // 0x1701(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             FireFailSound;                                     // 0x1708(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           HandleFirstShotsParam;                             // 0x1710(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Fire1pSound;                                       // 0x1718(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Fire3pSound;                                       // 0x1720(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             FireStop1pSound;                                   // 0x1728(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             FireStop3pSound;                                   // 0x1730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundEffectSourcePresetChain*          SourceEffectChain;                                 // 0x1738(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UBP_ArmadilloPlayerStateComponent_C*    ArmadilloPlayerStateComp;                          // 0x1740(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Assault_Armadillo(int32 EntryPoint);
	void HandleWeaponFiltering();
	void OnLocalFailedToFireWhenOverheated();
	void OnOverheatingValue(float CurrentValue, float MaxValue, EFortWeaponOverheatState State, bool bIsInCooldown);
	void OnPlayImpactFX(const struct FHitResult& HitResult, EPhysicalSurface ImpactPhysicalSurface, class UFXSystemComponent* SpawnedPSC);
	void OnPlayWeaponFireFX(bool bPersistentFire, bool bSecondaryFire);
	void OnRep_bStartLoop();
	void OnStartOverheated();
	void OnStopWeaponFireFX();
	void OnWeaponAttached();
	void OnWeaponDetached();
	void PlayFireAudio();
	void PressTrigger(class AFortWeapon* Weapon);
	void PressTriggerServer();
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReleaseTrigger(class AFortWeapon* Weapon);
	void ReleaseTriggerServer();
	void ReturnAudioParamToNormal();
	void ShowOverheatDebug();
	void StopFireAudio();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Assault_Armadillo_C">();
	}
	static class AB_Assault_Armadillo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Assault_Armadillo_C>();
	}
};
static_assert(alignof(AB_Assault_Armadillo_C) == 0x000008, "Wrong alignment on AB_Assault_Armadillo_C");
static_assert(sizeof(AB_Assault_Armadillo_C) == 0x001748, "Wrong size on AB_Assault_Armadillo_C");
static_assert(offsetof(AB_Assault_Armadillo_C, UberGraphFrame_B_Assault_Armadillo_C) == 0x0016B0, "Member 'AB_Assault_Armadillo_C::UberGraphFrame_B_Assault_Armadillo_C' has a wrong offset!");
static_assert(offsetof(AB_Assault_Armadillo_C, FireStopAudio) == 0x0016B8, "Member 'AB_Assault_Armadillo_C::FireStopAudio' has a wrong offset!");
static_assert(offsetof(AB_Assault_Armadillo_C, FireLoopAudio) == 0x0016C0, "Member 'AB_Assault_Armadillo_C::FireLoopAudio' has a wrong offset!");
static_assert(offsetof(AB_Assault_Armadillo_C, Armadillo_ShooterWeaponTraceIgnoreActorsComponent) == 0x0016C8, "Member 'AB_Assault_Armadillo_C::Armadillo_ShooterWeaponTraceIgnoreActorsComponent' has a wrong offset!");
static_assert(offsetof(AB_Assault_Armadillo_C, SpecialEventCursorWeapon) == 0x0016D0, "Member 'AB_Assault_Armadillo_C::SpecialEventCursorWeapon' has a wrong offset!");
static_assert(offsetof(AB_Assault_Armadillo_C, DebugOverheatTimer) == 0x0016D8, "Member 'AB_Assault_Armadillo_C::DebugOverheatTimer' has a wrong offset!");
static_assert(offsetof(AB_Assault_Armadillo_C, NonLocalGunFX) == 0x0016E0, "Member 'AB_Assault_Armadillo_C::NonLocalGunFX' has a wrong offset!");
static_assert(offsetof(AB_Assault_Armadillo_C, LocalGunFX) == 0x0016E8, "Member 'AB_Assault_Armadillo_C::LocalGunFX' has a wrong offset!");
static_assert(offsetof(AB_Assault_Armadillo_C, OverheatedSound) == 0x0016F0, "Member 'AB_Assault_Armadillo_C::OverheatedSound' has a wrong offset!");
static_assert(offsetof(AB_Assault_Armadillo_C, Overheating_Sound_Mix_Modifier) == 0x0016F8, "Member 'AB_Assault_Armadillo_C::Overheating_Sound_Mix_Modifier' has a wrong offset!");
static_assert(offsetof(AB_Assault_Armadillo_C, bStartLoop) == 0x001700, "Member 'AB_Assault_Armadillo_C::bStartLoop' has a wrong offset!");
static_assert(offsetof(AB_Assault_Armadillo_C, FireFailSound) == 0x001708, "Member 'AB_Assault_Armadillo_C::FireFailSound' has a wrong offset!");
static_assert(offsetof(AB_Assault_Armadillo_C, HandleFirstShotsParam) == 0x001710, "Member 'AB_Assault_Armadillo_C::HandleFirstShotsParam' has a wrong offset!");
static_assert(offsetof(AB_Assault_Armadillo_C, Fire1pSound) == 0x001718, "Member 'AB_Assault_Armadillo_C::Fire1pSound' has a wrong offset!");
static_assert(offsetof(AB_Assault_Armadillo_C, Fire3pSound) == 0x001720, "Member 'AB_Assault_Armadillo_C::Fire3pSound' has a wrong offset!");
static_assert(offsetof(AB_Assault_Armadillo_C, FireStop1pSound) == 0x001728, "Member 'AB_Assault_Armadillo_C::FireStop1pSound' has a wrong offset!");
static_assert(offsetof(AB_Assault_Armadillo_C, FireStop3pSound) == 0x001730, "Member 'AB_Assault_Armadillo_C::FireStop3pSound' has a wrong offset!");
static_assert(offsetof(AB_Assault_Armadillo_C, SourceEffectChain) == 0x001738, "Member 'AB_Assault_Armadillo_C::SourceEffectChain' has a wrong offset!");
static_assert(offsetof(AB_Assault_Armadillo_C, ArmadilloPlayerStateComp) == 0x001740, "Member 'AB_Assault_Armadillo_C::ArmadilloPlayerStateComp' has a wrong offset!");

}

