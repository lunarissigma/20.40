#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPS20_BattlePassScreen

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "SlateCore_structs.hpp"
#include "BattlePassBase_structs.hpp"


namespace SDK::Params
{

// Function BPS20_BattlePassScreen.BPS20_BattlePassScreen_C.BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature
// 0x0078 (0x0078 - 0x0000)
struct BPS20_BattlePassScreen_C_BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature final
{
public:
	struct FBattlePassLandingPageButtonDisplayDetails DisplayInfo;                                   // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bShowRewardCount;                                  // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS20_BattlePassScreen_C_BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature) == 0x000008, "Wrong alignment on BPS20_BattlePassScreen_C_BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature");
static_assert(sizeof(BPS20_BattlePassScreen_C_BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature) == 0x000078, "Wrong size on BPS20_BattlePassScreen_C_BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature");
static_assert(offsetof(BPS20_BattlePassScreen_C_BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature, DisplayInfo) == 0x000000, "Member 'BPS20_BattlePassScreen_C_BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature::DisplayInfo' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature, bShowRewardCount) == 0x000070, "Member 'BPS20_BattlePassScreen_C_BndEvt__BPS20_BattlePassScreen_BattlePassLandingPageS18_K2Node_ComponentBoundEvent_5_OnShowButtonDetails__DelegateSignature::bShowRewardCount' has a wrong offset!");

// Function BPS20_BattlePassScreen.BPS20_BattlePassScreen_C.ExecuteUbergraph_BPS20_BattlePassScreen
// 0x0B88 (0x0B88 - 0x0000)
struct BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassView                               Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortBattlePassContext*                 CallFunc_GetContext_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDefaultDisclaimerText_ReturnValue;     // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable;                                // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0058(0x0018)()
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_CurrentIndex;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalNumVariants;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A0(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0100(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ReferenceParm)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0168(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassView                               K2Node_Event_NewView;                              // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AVaultWorld_C*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0188(0x0010)(ReferenceParm)
	TArray<class AFrontendCamera_VaultRotator_C*> CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0198(0x0010)(ReferenceParm)
	class AVaultWorld_C*                          CallFunc_Array_Get_Item;                           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2[0x2];                                      // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldPlayBPVideo_ReturnValue;            // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UIconTextButton_C*                      K2Node_DynamicCast_AsIcon_Text_Button;             // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_RowDisplayName;                       // 0x01E0(0x0018)(ConstParm)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFrontendCamera_VaultRotator_C*         CallFunc_Array_Get_Item_1;                         // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue_1;                // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRarityItemData                    K2Node_Event_Rarity;                               // 0x0210(0x0080)()
	bool                                          K2Node_Event_bNoReward;                            // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortItemDefinition*              K2Node_Event_RewardItem;                           // 0x0298(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_12;                             // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_13;                             // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_14;                             // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_15;                             // 0x02A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Description;                          // 0x02A8(0x0018)(ConstParm)
	int32                                         K2Node_Event_OwnedRewards_1;                       // 0x02C0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NeededRewards;                        // 0x02C4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShowPrerequisiteLock;                // 0x02C8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x02D8(0x0018)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0300(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_3;            // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0360(0x0050)(HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x03B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x03C8(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_16;                             // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassView                               Temp_byte_Variable_17;                             // 0x03E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_18;                             // 0x03E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x03E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_19;                             // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x03E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x03E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E7[0x1];                                      // 0x03E7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_OwnedRewards;                         // 0x03E8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalRewards;                         // 0x03EC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_4;            // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0400(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x3];                                      // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_5;            // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0468(0x0050)(HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x04C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x04D0(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_20;                             // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_21;                             // 0x04E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_22;                             // 0x04EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x04EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_23;                             // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_24;                             // 0x04ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_25;                             // 0x04EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassView                               Temp_byte_Variable_26;                             // 0x04EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassView                               Temp_byte_Variable_27;                             // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bTransitionForward;                   // 0x04F2(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F3[0x5];                                      // 0x04F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x04F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_3;                           // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501[0x3];                                      // 0x0501(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0504(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0514(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_1;          // 0x0528(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_Select_Default_4;                           // 0x0530(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_2;                        // 0x0540(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_3;                        // 0x0560(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_Select_Default_5;                           // 0x0570(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue_1;               // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581[0x7];                                      // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_2;          // 0x0588(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_4;                        // 0x0590(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_5;                        // 0x05A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue_2;               // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B1[0x3];                                      // 0x05B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_Select_Default_6;                           // 0x05B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_6;                        // 0x05C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_7;                        // 0x05D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_Select_Default_7;                           // 0x05E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F4[0x4];                                      // 0x05F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue_3;          // 0x05F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              K2Node_Event_Delay;                                // 0x0600(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTimespanAsText_ReturnValue;            // 0x0608(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0620(0x0050)(HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_28;                             // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_671[0x7];                                      // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0678(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0688(0x0018)()
	EBattlePassInputs                             K2Node_Event_InputType;                            // 0x06A0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A1[0x7];                                      // 0x06A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UBattlePassInputData*             K2Node_Event_InputData;                            // 0x06A8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBattlePassBulkBuyInputData*            K2Node_DynamicCast_AsBattle_Pass_Bulk_Buy_Input_Data; // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x06C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x06C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetData_IsPageCompleted;                  // 0x06C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C3[0x1];                                      // 0x06C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetData_StartingPage;                     // 0x06C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetData_EndingPage;                       // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetData_PurchaseCost;                     // 0x06CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Level;                                // 0x06D0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D4[0x4];                                      // 0x06D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPS20_GetAllButton_C*                  K2Node_DynamicCast_AsBPS20_Get_All_Button;         // 0x06D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_29;                             // 0x06E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_BattlePassRequiredVisible;      // 0x06E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_CustomizationSkinRequiredVisible; // 0x06E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ComingSoonVisible;              // 0x06E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_8;                           // 0x06E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_9;                           // 0x06E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_10;                          // 0x06E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortPersistentResourceItemDefinition* K2Node_Event_PersistentResource_1;            // 0x06E8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x06F0(0x0018)()
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0708(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_721[0x7];                                      // 0x0721(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0728(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x0778(0x0010)(ReferenceParm)
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetLargePreviewImage_ReturnValue;         // 0x0788(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x07B0(0x0018)()
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetSmallPreviewImage_ReturnValue;         // 0x07C8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDisplayName_ReturnValue_1;             // 0x07F0(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_30;                             // 0x0808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_809[0x7];                                      // 0x0809(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x0810(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x0860(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x0870(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_31;                             // 0x0888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_32;                             // 0x0889(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88A[0x2];                                      // 0x088A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Cost;                                 // 0x088C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortPersistentResourceItemDefinition* K2Node_Event_PersistentResource;              // 0x0890(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetQuantityDisplayName_ReturnValue;       // 0x0898(0x0018)()
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetSmallPreviewImage_ReturnValue_1;       // 0x08B0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x08D8(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_6;            // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_10;           // 0x0930(0x0050)(HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_33;                             // 0x0980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_981[0x7];                                      // 0x0981(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_6;                          // 0x0988(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_6;                     // 0x0998(0x0018)()
	ESlateVisibility                              Temp_byte_Variable_34;                             // 0x09B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_35;                             // 0x09B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B2[0x6];                                      // 0x09B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBattlePassLandingPageButtonDisplayDetails K2Node_ComponentBoundEvent_DisplayInfo;        // 0x09B8(0x0070)()
	bool                                          K2Node_ComponentBoundEvent_bShowRewardCount;       // 0x0A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A29[0x3];                                      // 0x0A29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0A2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBattlePassView                               Temp_byte_Variable_36;                             // 0x0A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A31[0x7];                                      // 0x0A31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTimespanAsText_ReturnValue_1;          // 0x0A38(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_11;           // 0x0A50(0x0050)(HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_11;                          // 0x0AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA1[0x7];                                      // 0x0AA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_7;                          // 0x0AA8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_7;                     // 0x0AB8(0x0018)()
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0AD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0AD4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD5[0x3];                                      // 0x0AD5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_12;           // 0x0AD8(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B29[0x7];                                      // 0x0B29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_8;                          // 0x0B30(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0B40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B41[0x7];                                      // 0x0B41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_8;                     // 0x0B48(0x0018)()
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0B60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0B64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B65[0x3];                                      // 0x0B65(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0B68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0B6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0B6D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B6E[0x2];                                      // 0x0B6E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0B70(0x0014)()
};
static_assert(alignof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen) == 0x000008, "Wrong alignment on BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen");
static_assert(sizeof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen) == 0x000B88, "Wrong size on BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, EntryPoint) == 0x000000, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable) == 0x000004, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_bool_Variable) == 0x000005, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_1) == 0x000006, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_2) == 0x000007, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_bool_Variable_1) == 0x000008, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_bool_Variable_2) == 0x000009, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_bool_Variable_3) == 0x00000A, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_3) == 0x00000B, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_4) == 0x00000C, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_bool_Variable_4) == 0x00000D, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_5) == 0x00000E, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_6) == 0x00000F, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_bool_Variable_5) == 0x000010, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_7) == 0x000011, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_8) == 0x000012, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_GetContext_ReturnValue) == 0x000018, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_bool_Variable_6) == 0x000020, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_GetDefaultDisclaimerText_ReturnValue) == 0x000028, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_GetDefaultDisclaimerText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_text_Variable) == 0x000040, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_text_Variable_1) == 0x000058, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_bool_True_if_break_was_hit_Variable) == 0x000070, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_int_Array_Index_Variable) == 0x000074, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Not_PreBool_ReturnValue) == 0x000078, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_CurrentIndex) == 0x00007C, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_CurrentIndex' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_TotalNumVariants) == 0x000080, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_TotalNumVariants' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_PlayAnimation_ReturnValue) == 0x000088, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000090, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Greater_IntInt_ReturnValue) == 0x000098, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData) == 0x0000A0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Add_IntInt_ReturnValue) == 0x0000F0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0000F8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_1) == 0x000100, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeArray_Array) == 0x000150, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_9) == 0x000160, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Format_ReturnValue) == 0x000168, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_10) == 0x000180, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_NewView) == 0x000181, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_NewView' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_GetAllActorsOfClass_OutActors) == 0x000188, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000198, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Array_Get_Item) == 0x0001A8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Array_Length_ReturnValue) == 0x0001B0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_ActorHasTag_ReturnValue) == 0x0001B4, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Array_Length_ReturnValue_1) == 0x0001B8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_int_Loop_Counter_Variable) == 0x0001BC, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_11) == 0x0001C0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Less_IntInt_ReturnValue) == 0x0001C1, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001C4, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_BooleanAND_ReturnValue) == 0x0001C8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_ShouldPlayBPVideo_ReturnValue) == 0x0001C9, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_ShouldPlayBPVideo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_DynamicCast_AsIcon_Text_Button) == 0x0001D0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_DynamicCast_AsIcon_Text_Button' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_DynamicCast_bSuccess) == 0x0001D8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_RowDisplayName) == 0x0001E0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_RowDisplayName' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_int_Array_Index_Variable_1) == 0x0001F8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Array_Get_Item_1) == 0x000200, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_ActorHasTag_ReturnValue_1) == 0x000208, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_ActorHasTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_Rarity) == 0x000210, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_Rarity' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_bNoReward) == 0x000290, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_bNoReward' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_RewardItem) == 0x000298, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_RewardItem' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_12) == 0x0002A0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_13) == 0x0002A1, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_14) == 0x0002A2, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_15) == 0x0002A3, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_Description) == 0x0002A8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_Description' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_OwnedRewards_1) == 0x0002C0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_OwnedRewards_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_NeededRewards) == 0x0002C4, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_NeededRewards' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_bShowPrerequisiteLock) == 0x0002C8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_bShowPrerequisiteLock' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0002D0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Select_Default) == 0x0002D8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x0002F0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0002F8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_2) == 0x000300, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Conv_IntToInt64_ReturnValue_3) == 0x000350, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Conv_IntToInt64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000358, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_3) == 0x000360, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0003B0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeArray_Array_1) == 0x0003B8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Format_ReturnValue_1) == 0x0003C8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_16) == 0x0003E0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_17) == 0x0003E1, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_18) == 0x0003E2, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Select_Default_1) == 0x0003E3, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_19) == 0x0003E4, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_bool_True_if_break_was_hit_Variable_1) == 0x0003E5, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Not_PreBool_ReturnValue_1) == 0x0003E6, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_OwnedRewards) == 0x0003E8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_OwnedRewards' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_TotalRewards) == 0x0003EC, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_TotalRewards' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Conv_IntToInt64_ReturnValue_4) == 0x0003F0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Conv_IntToInt64_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0003F8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_4) == 0x000400, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000450, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000454, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Conv_IntToInt64_ReturnValue_5) == 0x000458, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Conv_IntToInt64_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000460, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_5) == 0x000468, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0004B8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeArray_Array_2) == 0x0004C0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Format_ReturnValue_2) == 0x0004D0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_20) == 0x0004E8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_21) == 0x0004E9, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_22) == 0x0004EA, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_IsMobileGame_ReturnValue) == 0x0004EB, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_23) == 0x0004EC, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_24) == 0x0004ED, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_25) == 0x0004EE, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_26) == 0x0004EF, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_27) == 0x0004F0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Select_Default_2) == 0x0004F1, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_bTransitionForward) == 0x0004F2, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_bTransitionForward' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x0004F8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Select_Default_3) == 0x000500, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_Margin) == 0x000504, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_Margin_1) == 0x000514, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_SlotAsOverlaySlot_ReturnValue_1) == 0x000528, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_SlotAsOverlaySlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Select_Default_4) == 0x000530, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_Margin_2) == 0x000540, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_Margin_2' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_GetEndTime_ReturnValue) == 0x000550, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_PlayAnimation_ReturnValue_1) == 0x000558, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_Margin_3) == 0x000560, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_Margin_3' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Select_Default_5) == 0x000570, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_IsMobileGame_ReturnValue_1) == 0x000580, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_IsMobileGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_SlotAsOverlaySlot_ReturnValue_2) == 0x000588, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_SlotAsOverlaySlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_Margin_4) == 0x000590, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_Margin_4' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_Margin_5) == 0x0005A0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_Margin_5' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_IsMobileGame_ReturnValue_2) == 0x0005B0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_IsMobileGame_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Select_Default_6) == 0x0005B4, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_Margin_6) == 0x0005C4, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_Margin_6' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_Margin_7) == 0x0005D4, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_Margin_7' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Select_Default_7) == 0x0005E4, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_SlotAsOverlaySlot_ReturnValue_3) == 0x0005F8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_SlotAsOverlaySlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_Delay) == 0x000600, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_GetTimespanAsText_ReturnValue) == 0x000608, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_GetTimespanAsText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_6) == 0x000620, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_28) == 0x000670, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeArray_Array_3) == 0x000678, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Format_ReturnValue_3) == 0x000688, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_InputType) == 0x0006A0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_InputType' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_InputData) == 0x0006A8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_InputData' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_PlayAnimationForward_ReturnValue) == 0x0006B0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_DynamicCast_AsBattle_Pass_Bulk_Buy_Input_Data) == 0x0006B8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_DynamicCast_AsBattle_Pass_Bulk_Buy_Input_Data' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_DynamicCast_bSuccess_1) == 0x0006C0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_SwitchEnum_CmpSuccess) == 0x0006C1, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_GetData_IsPageCompleted) == 0x0006C2, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_GetData_IsPageCompleted' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_GetData_StartingPage) == 0x0006C4, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_GetData_StartingPage' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_GetData_EndingPage) == 0x0006C8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_GetData_EndingPage' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_GetData_PurchaseCost) == 0x0006CC, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_GetData_PurchaseCost' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_Level) == 0x0006D0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_Level' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_DynamicCast_AsBPS20_Get_All_Button) == 0x0006D8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_DynamicCast_AsBPS20_Get_All_Button' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_DynamicCast_bSuccess_2) == 0x0006E0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_29) == 0x0006E1, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_29' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_CustomEvent_BattlePassRequiredVisible) == 0x0006E2, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_CustomEvent_BattlePassRequiredVisible' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_CustomEvent_CustomizationSkinRequiredVisible) == 0x0006E3, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_CustomEvent_CustomizationSkinRequiredVisible' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_CustomEvent_ComingSoonVisible) == 0x0006E4, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_CustomEvent_ComingSoonVisible' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Select_Default_8) == 0x0006E5, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Select_Default_9) == 0x0006E6, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Select_Default_10) == 0x0006E7, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_PersistentResource_1) == 0x0006E8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_PersistentResource_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_GetDisplayName_ReturnValue) == 0x0006F0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Map_Find_Value) == 0x000708, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Map_Find_ReturnValue) == 0x000720, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_7) == 0x000728, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeArray_Array_4) == 0x000778, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_GetLargePreviewImage_ReturnValue) == 0x000788, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_GetLargePreviewImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Format_ReturnValue_4) == 0x0007B0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_GetSmallPreviewImage_ReturnValue) == 0x0007C8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_GetSmallPreviewImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_GetDisplayName_ReturnValue_1) == 0x0007F0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_30) == 0x000808, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_30' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_8) == 0x000810, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeArray_Array_5) == 0x000860, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Format_ReturnValue_5) == 0x000870, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_31) == 0x000888, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_31' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_32) == 0x000889, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_32' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_Cost) == 0x00088C, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_Cost' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_PersistentResource) == 0x000890, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_PersistentResource' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_GetQuantityDisplayName_ReturnValue) == 0x000898, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_GetQuantityDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_GetSmallPreviewImage_ReturnValue_1) == 0x0008B0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_GetSmallPreviewImage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_9) == 0x0008D8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Conv_IntToInt64_ReturnValue_6) == 0x000928, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Conv_IntToInt64_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_10) == 0x000930, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_33) == 0x000980, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_33' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeArray_Array_6) == 0x000988, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Format_ReturnValue_6) == 0x000998, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Format_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_34) == 0x0009B0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_34' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_35) == 0x0009B1, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_35' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_ComponentBoundEvent_DisplayInfo) == 0x0009B8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_ComponentBoundEvent_DisplayInfo' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_ComponentBoundEvent_bShowRewardCount) == 0x000A28, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_ComponentBoundEvent_bShowRewardCount' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_SelectInt_ReturnValue) == 0x000A2C, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_byte_Variable_36) == 0x000A30, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_byte_Variable_36' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_GetTimespanAsText_ReturnValue_1) == 0x000A38, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_GetTimespanAsText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_11) == 0x000A50, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_11' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Select_Default_11) == 0x000AA0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeArray_Array_7) == 0x000AA8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeArray_Array_7' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Format_ReturnValue_7) == 0x000AB8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Format_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_GetTotalSeconds_ReturnValue) == 0x000AD0, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000AD4, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_FormatArgumentData_12) == 0x000AD8, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_FormatArgumentData_12' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_TextIsEmpty_ReturnValue) == 0x000B28, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeArray_Array_8) == 0x000B30, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeArray_Array_8' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Not_PreBool_ReturnValue_2) == 0x000B40, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Format_ReturnValue_8) == 0x000B48, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Format_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, Temp_int_Loop_Counter_Variable_1) == 0x000B60, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Less_IntInt_ReturnValue_1) == 0x000B64, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_Add_IntInt_ReturnValue_2) == 0x000B68, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, CallFunc_BooleanAND_ReturnValue_1) == 0x000B6C, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_Event_IsDesignTime) == 0x000B6D, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen, K2Node_MakeStruct_SlateColor) == 0x000B70, "Member 'BPS20_BattlePassScreen_C_ExecuteUbergraph_BPS20_BattlePassScreen::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function BPS20_BattlePassScreen.BPS20_BattlePassScreen_C.HandleRewardTimelineAnimation
// 0x0018 (0x0018 - 0x0000)
struct BPS20_BattlePassScreen_C_HandleRewardTimelineAnimation final
{
public:
	bool                                          bAnimateRewardTimeline;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS20_BattlePassScreen_C_HandleRewardTimelineAnimation) == 0x000008, "Wrong alignment on BPS20_BattlePassScreen_C_HandleRewardTimelineAnimation");
static_assert(sizeof(BPS20_BattlePassScreen_C_HandleRewardTimelineAnimation) == 0x000018, "Wrong size on BPS20_BattlePassScreen_C_HandleRewardTimelineAnimation");
static_assert(offsetof(BPS20_BattlePassScreen_C_HandleRewardTimelineAnimation, bAnimateRewardTimeline) == 0x000000, "Member 'BPS20_BattlePassScreen_C_HandleRewardTimelineAnimation::bAnimateRewardTimeline' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_HandleRewardTimelineAnimation, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'BPS20_BattlePassScreen_C_HandleRewardTimelineAnimation::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_HandleRewardTimelineAnimation, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'BPS20_BattlePassScreen_C_HandleRewardTimelineAnimation::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function BPS20_BattlePassScreen.BPS20_BattlePassScreen_C.HandleViewReward
// 0x000C (0x000C - 0x0000)
struct BPS20_BattlePassScreen_C_HandleViewReward final
{
public:
	bool                                          bInNoReward;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InNumRewardsToPurchase;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS20_BattlePassScreen_C_HandleViewReward) == 0x000004, "Wrong alignment on BPS20_BattlePassScreen_C_HandleViewReward");
static_assert(sizeof(BPS20_BattlePassScreen_C_HandleViewReward) == 0x00000C, "Wrong size on BPS20_BattlePassScreen_C_HandleViewReward");
static_assert(offsetof(BPS20_BattlePassScreen_C_HandleViewReward, bInNoReward) == 0x000000, "Member 'BPS20_BattlePassScreen_C_HandleViewReward::bInNoReward' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_HandleViewReward, InNumRewardsToPurchase) == 0x000004, "Member 'BPS20_BattlePassScreen_C_HandleViewReward::InNumRewardsToPurchase' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_HandleViewReward, Temp_bool_Variable) == 0x000008, "Member 'BPS20_BattlePassScreen_C_HandleViewReward::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_HandleViewReward, Temp_byte_Variable) == 0x000009, "Member 'BPS20_BattlePassScreen_C_HandleViewReward::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_HandleViewReward, Temp_byte_Variable_1) == 0x00000A, "Member 'BPS20_BattlePassScreen_C_HandleViewReward::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_HandleViewReward, K2Node_Select_Default) == 0x00000B, "Member 'BPS20_BattlePassScreen_C_HandleViewReward::K2Node_Select_Default' has a wrong offset!");

// Function BPS20_BattlePassScreen.BPS20_BattlePassScreen_C.HandleWatchVideoRequest
// 0x0010 (0x0010 - 0x0000)
struct BPS20_BattlePassScreen_C_HandleWatchVideoRequest final
{
public:
	bool                                          PlayFromDisc;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortStreamMediaSource*                 StreamSource;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS20_BattlePassScreen_C_HandleWatchVideoRequest) == 0x000008, "Wrong alignment on BPS20_BattlePassScreen_C_HandleWatchVideoRequest");
static_assert(sizeof(BPS20_BattlePassScreen_C_HandleWatchVideoRequest) == 0x000010, "Wrong size on BPS20_BattlePassScreen_C_HandleWatchVideoRequest");
static_assert(offsetof(BPS20_BattlePassScreen_C_HandleWatchVideoRequest, PlayFromDisc) == 0x000000, "Member 'BPS20_BattlePassScreen_C_HandleWatchVideoRequest::PlayFromDisc' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_HandleWatchVideoRequest, StreamSource) == 0x000008, "Member 'BPS20_BattlePassScreen_C_HandleWatchVideoRequest::StreamSource' has a wrong offset!");

// Function BPS20_BattlePassScreen.BPS20_BattlePassScreen_C.OnBattlePassViewChanged
// 0x0001 (0x0001 - 0x0000)
struct BPS20_BattlePassScreen_C_OnBattlePassViewChanged final
{
public:
	EBattlePassView                               NewView;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS20_BattlePassScreen_C_OnBattlePassViewChanged) == 0x000001, "Wrong alignment on BPS20_BattlePassScreen_C_OnBattlePassViewChanged");
static_assert(sizeof(BPS20_BattlePassScreen_C_OnBattlePassViewChanged) == 0x000001, "Wrong size on BPS20_BattlePassScreen_C_OnBattlePassViewChanged");
static_assert(offsetof(BPS20_BattlePassScreen_C_OnBattlePassViewChanged, NewView) == 0x000000, "Member 'BPS20_BattlePassScreen_C_OnBattlePassViewChanged::NewView' has a wrong offset!");

// Function BPS20_BattlePassScreen.BPS20_BattlePassScreen_C.OnInsufficientResource
// 0x0008 (0x0008 - 0x0000)
struct BPS20_BattlePassScreen_C_OnInsufficientResource final
{
public:
	const class UFortPersistentResourceItemDefinition* PersistentResource;                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS20_BattlePassScreen_C_OnInsufficientResource) == 0x000008, "Wrong alignment on BPS20_BattlePassScreen_C_OnInsufficientResource");
static_assert(sizeof(BPS20_BattlePassScreen_C_OnInsufficientResource) == 0x000008, "Wrong size on BPS20_BattlePassScreen_C_OnInsufficientResource");
static_assert(offsetof(BPS20_BattlePassScreen_C_OnInsufficientResource, PersistentResource) == 0x000000, "Member 'BPS20_BattlePassScreen_C_OnInsufficientResource::PersistentResource' has a wrong offset!");

// Function BPS20_BattlePassScreen.BPS20_BattlePassScreen_C.OnItemDelayed
// 0x0008 (0x0008 - 0x0000)
struct BPS20_BattlePassScreen_C_OnItemDelayed final
{
public:
	struct FTimespan                              Delay;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS20_BattlePassScreen_C_OnItemDelayed) == 0x000008, "Wrong alignment on BPS20_BattlePassScreen_C_OnItemDelayed");
static_assert(sizeof(BPS20_BattlePassScreen_C_OnItemDelayed) == 0x000008, "Wrong size on BPS20_BattlePassScreen_C_OnItemDelayed");
static_assert(offsetof(BPS20_BattlePassScreen_C_OnItemDelayed, Delay) == 0x000000, "Member 'BPS20_BattlePassScreen_C_OnItemDelayed::Delay' has a wrong offset!");

// Function BPS20_BattlePassScreen.BPS20_BattlePassScreen_C.OnLevelChanged
// 0x0004 (0x0004 - 0x0000)
struct BPS20_BattlePassScreen_C_OnLevelChanged final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS20_BattlePassScreen_C_OnLevelChanged) == 0x000004, "Wrong alignment on BPS20_BattlePassScreen_C_OnLevelChanged");
static_assert(sizeof(BPS20_BattlePassScreen_C_OnLevelChanged) == 0x000004, "Wrong size on BPS20_BattlePassScreen_C_OnLevelChanged");
static_assert(offsetof(BPS20_BattlePassScreen_C_OnLevelChanged, Level) == 0x000000, "Member 'BPS20_BattlePassScreen_C_OnLevelChanged::Level' has a wrong offset!");

// Function BPS20_BattlePassScreen.BPS20_BattlePassScreen_C.OnPreviewActionButtonUpdated
// 0x0018 (0x0018 - 0x0000)
struct BPS20_BattlePassScreen_C_OnPreviewActionButtonUpdated final
{
public:
	class FText                                   RowDisplayName;                                    // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BPS20_BattlePassScreen_C_OnPreviewActionButtonUpdated) == 0x000008, "Wrong alignment on BPS20_BattlePassScreen_C_OnPreviewActionButtonUpdated");
static_assert(sizeof(BPS20_BattlePassScreen_C_OnPreviewActionButtonUpdated) == 0x000018, "Wrong size on BPS20_BattlePassScreen_C_OnPreviewActionButtonUpdated");
static_assert(offsetof(BPS20_BattlePassScreen_C_OnPreviewActionButtonUpdated, RowDisplayName) == 0x000000, "Member 'BPS20_BattlePassScreen_C_OnPreviewActionButtonUpdated::RowDisplayName' has a wrong offset!");

// Function BPS20_BattlePassScreen.BPS20_BattlePassScreen_C.OnSetClaimedRewardInfo
// 0x0008 (0x0008 - 0x0000)
struct BPS20_BattlePassScreen_C_OnSetClaimedRewardInfo final
{
public:
	int32                                         OwnedRewards;                                      // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalRewards;                                      // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS20_BattlePassScreen_C_OnSetClaimedRewardInfo) == 0x000004, "Wrong alignment on BPS20_BattlePassScreen_C_OnSetClaimedRewardInfo");
static_assert(sizeof(BPS20_BattlePassScreen_C_OnSetClaimedRewardInfo) == 0x000008, "Wrong size on BPS20_BattlePassScreen_C_OnSetClaimedRewardInfo");
static_assert(offsetof(BPS20_BattlePassScreen_C_OnSetClaimedRewardInfo, OwnedRewards) == 0x000000, "Member 'BPS20_BattlePassScreen_C_OnSetClaimedRewardInfo::OwnedRewards' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_OnSetClaimedRewardInfo, TotalRewards) == 0x000004, "Member 'BPS20_BattlePassScreen_C_OnSetClaimedRewardInfo::TotalRewards' has a wrong offset!");

// Function BPS20_BattlePassScreen.BPS20_BattlePassScreen_C.OnSetDynamicInput
// 0x0010 (0x0010 - 0x0000)
struct BPS20_BattlePassScreen_C_OnSetDynamicInput final
{
public:
	EBattlePassInputs                             InputType;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UBattlePassInputData*             InputData;                                         // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS20_BattlePassScreen_C_OnSetDynamicInput) == 0x000008, "Wrong alignment on BPS20_BattlePassScreen_C_OnSetDynamicInput");
static_assert(sizeof(BPS20_BattlePassScreen_C_OnSetDynamicInput) == 0x000010, "Wrong size on BPS20_BattlePassScreen_C_OnSetDynamicInput");
static_assert(offsetof(BPS20_BattlePassScreen_C_OnSetDynamicInput, InputType) == 0x000000, "Member 'BPS20_BattlePassScreen_C_OnSetDynamicInput::InputType' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_OnSetDynamicInput, InputData) == 0x000008, "Member 'BPS20_BattlePassScreen_C_OnSetDynamicInput::InputData' has a wrong offset!");

// Function BPS20_BattlePassScreen.BPS20_BattlePassScreen_C.OnSetPrerequisiteInfo
// 0x0028 (0x0028 - 0x0000)
struct BPS20_BattlePassScreen_C_OnSetPrerequisiteInfo final
{
public:
	class FText                                   Description;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         OwnedRewards;                                      // 0x0018(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NeededRewards;                                     // 0x001C(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowPrerequisiteLock;                             // 0x0020(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS20_BattlePassScreen_C_OnSetPrerequisiteInfo) == 0x000008, "Wrong alignment on BPS20_BattlePassScreen_C_OnSetPrerequisiteInfo");
static_assert(sizeof(BPS20_BattlePassScreen_C_OnSetPrerequisiteInfo) == 0x000028, "Wrong size on BPS20_BattlePassScreen_C_OnSetPrerequisiteInfo");
static_assert(offsetof(BPS20_BattlePassScreen_C_OnSetPrerequisiteInfo, Description) == 0x000000, "Member 'BPS20_BattlePassScreen_C_OnSetPrerequisiteInfo::Description' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_OnSetPrerequisiteInfo, OwnedRewards) == 0x000018, "Member 'BPS20_BattlePassScreen_C_OnSetPrerequisiteInfo::OwnedRewards' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_OnSetPrerequisiteInfo, NeededRewards) == 0x00001C, "Member 'BPS20_BattlePassScreen_C_OnSetPrerequisiteInfo::NeededRewards' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_OnSetPrerequisiteInfo, bShowPrerequisiteLock) == 0x000020, "Member 'BPS20_BattlePassScreen_C_OnSetPrerequisiteInfo::bShowPrerequisiteLock' has a wrong offset!");

// Function BPS20_BattlePassScreen.BPS20_BattlePassScreen_C.OnSetResourcePrice
// 0x0010 (0x0010 - 0x0000)
struct BPS20_BattlePassScreen_C_OnSetResourcePrice final
{
public:
	int32                                         Cost;                                              // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortPersistentResourceItemDefinition* PersistentResource;                           // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS20_BattlePassScreen_C_OnSetResourcePrice) == 0x000008, "Wrong alignment on BPS20_BattlePassScreen_C_OnSetResourcePrice");
static_assert(sizeof(BPS20_BattlePassScreen_C_OnSetResourcePrice) == 0x000010, "Wrong size on BPS20_BattlePassScreen_C_OnSetResourcePrice");
static_assert(offsetof(BPS20_BattlePassScreen_C_OnSetResourcePrice, Cost) == 0x000000, "Member 'BPS20_BattlePassScreen_C_OnSetResourcePrice::Cost' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_OnSetResourcePrice, PersistentResource) == 0x000008, "Member 'BPS20_BattlePassScreen_C_OnSetResourcePrice::PersistentResource' has a wrong offset!");

// Function BPS20_BattlePassScreen.BPS20_BattlePassScreen_C.OnTransitionItemDetails
// 0x0001 (0x0001 - 0x0000)
struct BPS20_BattlePassScreen_C_OnTransitionItemDetails final
{
public:
	bool                                          bTransitionForward;                                // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS20_BattlePassScreen_C_OnTransitionItemDetails) == 0x000001, "Wrong alignment on BPS20_BattlePassScreen_C_OnTransitionItemDetails");
static_assert(sizeof(BPS20_BattlePassScreen_C_OnTransitionItemDetails) == 0x000001, "Wrong size on BPS20_BattlePassScreen_C_OnTransitionItemDetails");
static_assert(offsetof(BPS20_BattlePassScreen_C_OnTransitionItemDetails, bTransitionForward) == 0x000000, "Member 'BPS20_BattlePassScreen_C_OnTransitionItemDetails::bTransitionForward' has a wrong offset!");

// Function BPS20_BattlePassScreen.BPS20_BattlePassScreen_C.OnVariantUpdate
// 0x0008 (0x0008 - 0x0000)
struct BPS20_BattlePassScreen_C_OnVariantUpdate final
{
public:
	int32                                         CurrentIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalNumVariants;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS20_BattlePassScreen_C_OnVariantUpdate) == 0x000004, "Wrong alignment on BPS20_BattlePassScreen_C_OnVariantUpdate");
static_assert(sizeof(BPS20_BattlePassScreen_C_OnVariantUpdate) == 0x000008, "Wrong size on BPS20_BattlePassScreen_C_OnVariantUpdate");
static_assert(offsetof(BPS20_BattlePassScreen_C_OnVariantUpdate, CurrentIndex) == 0x000000, "Member 'BPS20_BattlePassScreen_C_OnVariantUpdate::CurrentIndex' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_OnVariantUpdate, TotalNumVariants) == 0x000004, "Member 'BPS20_BattlePassScreen_C_OnVariantUpdate::TotalNumVariants' has a wrong offset!");

// Function BPS20_BattlePassScreen.BPS20_BattlePassScreen_C.OnViewReward
// 0x0090 (0x0090 - 0x0000)
struct BPS20_BattlePassScreen_C_OnViewReward final
{
public:
	struct FFortRarityItemData                    Rarity;                                            // 0x0000(0x0080)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          bNoReward;                                         // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortItemDefinition*              RewardItem;                                        // 0x0088(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS20_BattlePassScreen_C_OnViewReward) == 0x000008, "Wrong alignment on BPS20_BattlePassScreen_C_OnViewReward");
static_assert(sizeof(BPS20_BattlePassScreen_C_OnViewReward) == 0x000090, "Wrong size on BPS20_BattlePassScreen_C_OnViewReward");
static_assert(offsetof(BPS20_BattlePassScreen_C_OnViewReward, Rarity) == 0x000000, "Member 'BPS20_BattlePassScreen_C_OnViewReward::Rarity' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_OnViewReward, bNoReward) == 0x000080, "Member 'BPS20_BattlePassScreen_C_OnViewReward::bNoReward' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_OnViewReward, RewardItem) == 0x000088, "Member 'BPS20_BattlePassScreen_C_OnViewReward::RewardItem' has a wrong offset!");

// Function BPS20_BattlePassScreen.BPS20_BattlePassScreen_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BPS20_BattlePassScreen_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS20_BattlePassScreen_C_PreConstruct) == 0x000001, "Wrong alignment on BPS20_BattlePassScreen_C_PreConstruct");
static_assert(sizeof(BPS20_BattlePassScreen_C_PreConstruct) == 0x000001, "Wrong size on BPS20_BattlePassScreen_C_PreConstruct");
static_assert(offsetof(BPS20_BattlePassScreen_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BPS20_BattlePassScreen_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BPS20_BattlePassScreen.BPS20_BattlePassScreen_C.Set landing Page text
// 0x0038 (0x0038 - 0x0000)
struct BPS20_BattlePassScreen_C_Set_landing_Page_text final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Description;                                       // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         State_Index;                                       // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS20_BattlePassScreen_C_Set_landing_Page_text) == 0x000008, "Wrong alignment on BPS20_BattlePassScreen_C_Set_landing_Page_text");
static_assert(sizeof(BPS20_BattlePassScreen_C_Set_landing_Page_text) == 0x000038, "Wrong size on BPS20_BattlePassScreen_C_Set_landing_Page_text");
static_assert(offsetof(BPS20_BattlePassScreen_C_Set_landing_Page_text, Title) == 0x000000, "Member 'BPS20_BattlePassScreen_C_Set_landing_Page_text::Title' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_Set_landing_Page_text, Description) == 0x000018, "Member 'BPS20_BattlePassScreen_C_Set_landing_Page_text::Description' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_Set_landing_Page_text, State_Index) == 0x000030, "Member 'BPS20_BattlePassScreen_C_Set_landing_Page_text::State_Index' has a wrong offset!");

// Function BPS20_BattlePassScreen.BPS20_BattlePassScreen_C.SetTagVisibility
// 0x0003 (0x0003 - 0x0000)
struct BPS20_BattlePassScreen_C_SetTagVisibility final
{
public:
	bool                                          BattlePassRequiredVisible;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CustomizationSkinRequiredVisible;                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ComingSoonVisible;                                 // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPS20_BattlePassScreen_C_SetTagVisibility) == 0x000001, "Wrong alignment on BPS20_BattlePassScreen_C_SetTagVisibility");
static_assert(sizeof(BPS20_BattlePassScreen_C_SetTagVisibility) == 0x000003, "Wrong size on BPS20_BattlePassScreen_C_SetTagVisibility");
static_assert(offsetof(BPS20_BattlePassScreen_C_SetTagVisibility, BattlePassRequiredVisible) == 0x000000, "Member 'BPS20_BattlePassScreen_C_SetTagVisibility::BattlePassRequiredVisible' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_SetTagVisibility, CustomizationSkinRequiredVisible) == 0x000001, "Member 'BPS20_BattlePassScreen_C_SetTagVisibility::CustomizationSkinRequiredVisible' has a wrong offset!");
static_assert(offsetof(BPS20_BattlePassScreen_C_SetTagVisibility, ComingSoonVisible) == 0x000002, "Member 'BPS20_BattlePassScreen_C_SetTagVisibility::ComingSoonVisible' has a wrong offset!");

}

