#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ArmadilloMoonLighting_Main

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ArmadilloMoonLighting_Main.BP_ArmadilloMoonLighting_Main_C
// 0x0050 (0x02C0 - 0x0270)
class ABP_ArmadilloMoonLighting_Main_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDirectionalLightComponent*             DirectionalLight_Mobile;                           // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkyLightComponent*                     SkyLight_Mobile;                                   // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDirectionalLightComponent*             DirectionalLight_SEQUENCER;                        // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UExponentialHeightFogComponent*         ExponentialHeightFog;                              // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  PostProcess;                                       // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkyAtmosphereComponent*                SkyAtmosphere;                                     // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkyLightComponent*                     SkyLight;                                          // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDirectionalLightComponent*             DirectionalLight;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void SetMobileLighting();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_ArmadilloMoonLighting_Main(int32 EntryPoint);
	void EnableMainDirectionalLight();
	void Enable();
	void DisableMainDirectionalLight();
	void Disable();
	void DeactivateLaunchSequenceLighting();
	void ActivateLaunchSequenceLighting();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ArmadilloMoonLighting_Main_C">();
	}
	static class ABP_ArmadilloMoonLighting_Main_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ArmadilloMoonLighting_Main_C>();
	}
};
static_assert(alignof(ABP_ArmadilloMoonLighting_Main_C) == 0x000008, "Wrong alignment on ABP_ArmadilloMoonLighting_Main_C");
static_assert(sizeof(ABP_ArmadilloMoonLighting_Main_C) == 0x0002C0, "Wrong size on ABP_ArmadilloMoonLighting_Main_C");
static_assert(offsetof(ABP_ArmadilloMoonLighting_Main_C, UberGraphFrame) == 0x000270, "Member 'ABP_ArmadilloMoonLighting_Main_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ArmadilloMoonLighting_Main_C, DirectionalLight_Mobile) == 0x000278, "Member 'ABP_ArmadilloMoonLighting_Main_C::DirectionalLight_Mobile' has a wrong offset!");
static_assert(offsetof(ABP_ArmadilloMoonLighting_Main_C, SkyLight_Mobile) == 0x000280, "Member 'ABP_ArmadilloMoonLighting_Main_C::SkyLight_Mobile' has a wrong offset!");
static_assert(offsetof(ABP_ArmadilloMoonLighting_Main_C, DirectionalLight_SEQUENCER) == 0x000288, "Member 'ABP_ArmadilloMoonLighting_Main_C::DirectionalLight_SEQUENCER' has a wrong offset!");
static_assert(offsetof(ABP_ArmadilloMoonLighting_Main_C, ExponentialHeightFog) == 0x000290, "Member 'ABP_ArmadilloMoonLighting_Main_C::ExponentialHeightFog' has a wrong offset!");
static_assert(offsetof(ABP_ArmadilloMoonLighting_Main_C, PostProcess) == 0x000298, "Member 'ABP_ArmadilloMoonLighting_Main_C::PostProcess' has a wrong offset!");
static_assert(offsetof(ABP_ArmadilloMoonLighting_Main_C, SkyAtmosphere) == 0x0002A0, "Member 'ABP_ArmadilloMoonLighting_Main_C::SkyAtmosphere' has a wrong offset!");
static_assert(offsetof(ABP_ArmadilloMoonLighting_Main_C, SkyLight) == 0x0002A8, "Member 'ABP_ArmadilloMoonLighting_Main_C::SkyLight' has a wrong offset!");
static_assert(offsetof(ABP_ArmadilloMoonLighting_Main_C, DirectionalLight) == 0x0002B0, "Member 'ABP_ArmadilloMoonLighting_Main_C::DirectionalLight' has a wrong offset!");
static_assert(offsetof(ABP_ArmadilloMoonLighting_Main_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_ArmadilloMoonLighting_Main_C::DefaultSceneRoot' has a wrong offset!");

}

